var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdressUser.html",[0,0.096,1,2.049]],["body/classes/AdressUser.html",[0,0.118,1,2.522,2,1.117,3,0.177,4,0.152,5,0.127,6,2.457,7,1.71,8,1.863,9,0.232,10,1.143,11,4.847,12,4.847,13,1.166,14,3.605,15,4.847,16,4.847,17,0.753,18,1.195,19,2.489,20,0.95,21,0.026,22,1.476,23,1.685,24,3.115,25,2.467,26,2.706,27,2.525,28,0.808,29,2.906,30,2.906,31,1.284,32,2.906,33,2.906,34,2.906,35,2.906,36,1.492,37,2.906,38,1.492,39,2.906,40,0.296,41,2.467,42,2.572,43,1.284,44,2.457,45,1.117,46,1.836,47,2.522,48,1.196,49,1.836,50,1.618,51,1.71,52,1.491,53,1.043,54,1.043,55,2.161,56,1.618,57,2.906,58,0.177,59,1.71,60,2.873,61,3.736,62,0.011,63,0.015,64,0.011]],["title/modules/AppModule.html",[65,1.296,66,2.253]],["body/modules/AppModule.html",[0,0.117,3,0.25,4,0.213,5,0.178,21,0.026,40,0.385,58,0.25,62,0.015,63,0.019,64,0.015,65,2.22,66,4.51,67,1.946,68,2.101,69,2.484,70,2.484,71,2.101,72,2.916,73,2.69,74,3.46,75,3.46,76,3.064,77,3.064,78,3.064,79,3.181,80,2.484,81,2.484,82,3.043,83,3.128,84,4.091,85,4.091,86,1.946,87,4.091,88,4.091,89,3.043,90,0.637,91,1.126,92,1.572]],["title/classes/Category.html",[0,0.096,93,2.049]],["body/classes/Category.html",[0,0.143,2,1.464,3,0.233,4,0.199,5,0.166,7,2.06,8,2.146,9,0.304,10,1.376,13,1.343,20,0.907,21,0.026,22,1.42,23,1.536,24,2.785,25,2.299,26,2.602,27,2.428,28,0.737,31,1.684,40,0.305,41,2.299,42,2.468,43,1.684,45,1.464,46,1.684,47,2.441,48,1.569,49,1.684,50,2.122,51,2.06,52,1.796,53,1.368,54,1.368,56,2.122,58,0.233,59,1.569,60,2.569,62,0.014,63,0.019,64,0.014,93,3.037,94,3.222,95,2.468,96,4.722,97,3.811,98,3.811,99,3.811,100,2.122,101,1.957,102,3.811,103,3.037]],["title/classes/Chat.html",[0,0.096,104,1.491]],["body/classes/Chat.html",[0,0.123,2,1.181,3,0.188,4,0.16,5,0.134,7,1.779,8,1.921,9,0.245,10,1.189,13,1.202,17,0.984,18,1.213,20,0.929,21,0.026,22,1.396,23,1.675,25,2.353,26,2.636,27,2.388,28,0.803,31,1.358,36,2.219,38,2.219,40,0.349,41,2.233,42,1.358,43,1.358,45,1.181,46,2.209,47,2.44,48,1.265,49,2.209,50,1.711,51,1.779,52,1.552,53,1.103,54,1.103,56,1.711,58,0.188,59,2.353,62,0.011,63,0.016,64,0.011,100,1.711,101,1.578,104,1.91,105,2.598,106,4.998,107,3.46,108,3.338,109,3.338,110,3.338,111,3.073,112,2.598,113,2.624,114,3.073,115,3.073,116,3.073,117,3.073,118,3.073,119,2.052,120,3.073,121,2.598,122,3.073,123,2.598,124,1.461,125,3.073,126,3.073]],["title/controllers/ChatController.html",[127,1.296,128,2.253]],["body/controllers/ChatController.html",[0,0.1,3,0.215,4,0.184,5,0.153,9,0.281,13,1.519,17,1.042,20,0.771,21,0.026,22,0.791,23,1.581,28,0.758,40,0.328,58,0.215,62,0.013,63,0.018,64,0.013,90,0.548,92,1.354,104,2.732,127,1.354,128,3.171,129,2.978,130,2.139,131,1.222,132,4.014,133,4.014,134,4.014,135,3.171,136,2.978,137,3.531,138,3.522,139,1.69,140,1.581,141,1.479,142,3.522,143,2.853,144,4.747,145,3.522,146,2.978,147,3.531,148,3.522,149,3.522,150,4.747,151,3.994,152,3.522,153,2.62,154,2.62,155,1.675,156,2.139,157,2.643,158,2.978,159,3.522,160,2.353,161,3.522,162,3.522,163,1.291,164,3.522,165,3.522,166,3.522,167,3.522,168,3.522,169,3.522,170,3.522,171,3.522]],["title/classes/ChatGateway.html",[0,0.096,172,2.049]],["body/classes/ChatGateway.html",[0,0.063,2,0.85,3,0.135,4,0.115,5,0.096,9,0.176,10,0.933,13,1.113,17,0.839,20,0.716,21,0.026,22,1.373,23,1.273,28,0.658,40,0.362,58,0.207,62,0.008,63,0.013,64,0.008,90,0.344,91,1.373,95,0.978,104,2.501,108,3.091,109,3.518,110,3.518,124,1.613,131,0.873,135,1.477,139,1.361,140,1.273,141,1.062,155,1.052,156,1.343,163,0.927,172,2.06,173,1.645,174,3.198,175,3.392,176,3.392,177,1.586,178,3.392,179,1.218,180,1.87,181,1.778,182,3.489,183,3.489,184,2.211,185,2.266,186,3.489,187,2.211,188,2.211,189,5.093,190,3.955,191,2.868,192,2.211,193,4.405,194,2.06,195,2.211,196,2.211,197,2.211,198,2.211,199,3.518,200,2.211,201,2.211,202,2.868,203,1.699,204,0.85,205,1.052,206,1.645,207,1.87,208,1.87,209,1.052,210,0.743,211,3.913,212,1.87,213,1.87,214,1.87,215,1.645,216,2.266,217,1.343,218,1.87,219,1.231,220,1.87,221,1.87,222,1.477,223,1.87,224,1.645,225,2.045,226,1.87,227,1.87,228,1.87,229,1.477,230,1.87,231,1.87,232,1.87,233,1.87,234,1.87,235,1.87,236,1.87,237,1.87,238,1.87,239,1.482,240,1.645,241,1.742,242,1.645,243,2.868,244,1.87,245,1.87,246,2.868,247,2.868,248,1.87,249,1.645,250,1.87,251,1.87,252,1.87,253,1.87,254,1.87,255,3.913,256,1.87,257,1.87,258,1.87,259,1.87,260,2.868,261,1.87,262,1.87,263,3.091,264,3.07,265,1.477,266,1.304,267,1.87,268,2.868,269,1.87,270,1.477,271,1.87,272,3.489,273,3.489]],["title/modules/ChatModule.html",[65,1.296,76,1.605]],["body/modules/ChatModule.html",[0,0.108,3,0.23,4,0.197,5,0.164,21,0.026,40,0.41,58,0.23,62,0.014,63,0.018,64,0.014,65,2.135,67,1.794,68,1.936,69,2.29,70,2.29,71,1.936,72,3.093,73,1.936,76,3.101,78,2.363,79,3.017,80,2.29,81,2.29,83,1.936,86,1.794,90,0.587,92,1.909,104,2.196,124,2.642,128,3.711,156,2.29,157,3.508,158,3.188,172,3.017,204,1.909,210,1.266,219,2.766,222,2.518,274,3.188,275,3.188,276,3.826,277,3.771,278,3.771,279,2.518,280,3.188,281,3.771,282,3.771,283,3.771,284,3.771,285,3.771]],["title/injectables/ChatService.html",[157,1.878,286,0.658]],["body/injectables/ChatService.html",[0,0.078,3,0.167,4,0.142,5,0.119,9,0.218,13,1.414,17,1.033,20,0.57,21,0.026,28,0.776,40,0.333,58,0.167,62,0.01,63,0.015,64,0.01,90,0.425,91,1.092,104,2.068,109,1.823,110,1.823,131,1.022,132,3.357,133,4.345,134,3.357,135,3.125,136,3.357,139,1.675,140,1.567,141,1.466,143,2.597,146,3.357,156,1.658,157,2.211,163,1.226,177,2.517,179,1.426,194,1.658,204,1.049,205,1.298,209,1.298,210,0.917,239,1.68,240,2.031,241,1.402,266,2.259,286,0.775,287,1.124,288,2.308,289,3.97,290,5.138,291,2.73,292,2.605,293,2.098,294,4.679,295,2.248,296,2.73,297,3.97,298,2.73,299,2.73,300,2.73,301,2.73,302,2.73,303,2.73,304,3.97,305,2.73,306,2.73,307,2.411,308,1.658,309,2.031,310,2.308,311,2.211,312,2.73,313,5.138,314,3.97,315,2.73,316,2.73,317,3.97,318,2.73,319,3.97,320,2.73,321,2.73,322,2.73,323,2.031,324,1.823,325,1.402,326,1.823,327,2.954,328,1.52,329,0.917,330,2.308]],["title/injectables/ConfigInit.html",[286,0.658,331,2.51]],["body/injectables/ConfigInit.html",[0,0.112,3,0.24,4,0.205,5,0.171,9,0.314,10,1.406,17,0.714,18,0.768,20,0.733,21,0.026,28,0.748,40,0.312,58,0.24,62,0.015,63,0.019,64,0.015,90,0.613,91,1.083,95,2.258,131,1.315,139,1.157,140,1.083,141,1.013,177,2.18,179,1.834,204,1.512,205,1.872,239,1.413,266,1.512,286,0.997,287,1.62,311,2.191,331,3.8,332,2.927,333,4.796,334,6.003,335,3.935,336,3.194,337,5.108,338,5.108,339,3.935,340,3.935,341,2.927,342,2.927,343,2.844,344,3.8,345,3.935,346,3.935,347,3.935,348,3.935,349,2.927,350,3.935,351,3.935]],["title/modules/CoreModule.html",[65,1.296,86,1.605]],["body/modules/CoreModule.html",[0,0.088,3,0.188,4,0.161,5,0.134,21,0.026,40,0.362,58,0.188,62,0.011,63,0.016,64,0.011,65,2.088,67,1.468,68,1.584,69,1.874,70,1.874,71,1.584,72,3.025,73,2.572,76,3.008,77,3.008,78,3.008,79,2.632,80,1.874,81,1.874,83,3.13,86,3.242,89,3.224,90,0.48,91,1.192,92,1.186,113,2.632,163,0.693,174,2.632,181,2.489,190,2.061,204,1.186,210,1.036,216,2.061,279,2.061,295,2.667,352,2.609,353,2.609,354,3.086,355,2.609,356,2.295,357,3.963,358,3.086,359,2.609,360,3.086,361,3.086,362,2.609,363,2.609,364,2.609,365,2.609,366,2.609,367,2.609,368,2.609,369,2.609,370,2.609,371,2.609,372,1.468,373,3.665,374,2.609,375,2.609,376,2.609,377,2.609,378,2.609,379,2.609,380,2.609]],["title/injectables/GeradorUuidService.html",[181,1.296,286,0.658]],["body/injectables/GeradorUuidService.html",[0,0.124,3,0.265,4,0.226,5,0.189,9,0.346,21,0.026,28,0.572,40,0.265,58,0.265,62,0.016,63,0.02,64,0.016,90,0.675,91,1.193,131,1.399,141,1.116,163,1.221,181,2.089,286,1.061,287,1.786,349,3.226,381,3.667,382,6.223,383,4.337,384,3.667,385,4.337,386,4.337,387,4.337,388,4.337,389,4.337,390,4.337,391,4.337,392,4.337,393,4.337,394,3.667,395,5.435,396,4.416,397,4.337,398,4.337,399,4.337,400,4.337,401,4.337,402,4.337,403,4.337]],["title/interfaces/Ichat.html",[199,2.253,203,1.389]],["body/interfaces/Ichat.html",[0,0.073,3,0.157,4,0.134,5,0.112,9,0.204,10,1.044,13,1.2,21,0.026,22,1.33,40,0.375,58,0.232,62,0.01,63,0.014,64,0.01,90,0.399,91,1.464,104,2.548,108,3.85,109,4.037,110,4.037,124,1.804,135,1.713,155,1.22,156,1.558,163,1.014,172,1.558,173,1.908,174,2.741,177,0.986,179,0.921,181,1.458,182,2.169,183,2.169,185,1.713,186,3.207,189,4.5,190,3.331,191,2.169,193,4.403,199,3.555,202,2.169,203,1.562,204,0.986,205,1.22,206,1.908,207,2.169,208,2.169,209,1.22,210,0.861,211,4.217,212,2.169,213,2.169,214,2.169,215,1.908,216,2.533,217,1.558,218,2.169,219,1.428,220,2.169,221,2.169,222,1.713,223,2.169,224,1.908,225,2.548,226,2.169,227,2.169,228,2.169,229,1.713,230,2.169,231,2.169,232,2.169,233,2.169,234,2.169,235,2.169,236,2.169,237,2.169,238,2.169,239,1.621,240,1.908,241,1.948,242,1.908,243,3.207,244,2.169,245,2.169,246,3.207,247,3.207,248,2.169,249,1.908,250,2.169,251,2.169,252,2.169,253,2.169,254,2.169,255,4.217,256,2.169,257,2.169,258,2.169,259,2.169,260,3.207,261,2.169,262,2.169,263,3.331,264,3.357,265,1.713,266,1.458,267,2.169,268,3.207,269,2.169,270,1.713,271,2.169,272,3.817,273,3.817,404,1.713]],["title/injectables/LoggerService.html",[286,0.658,295,1.389]],["body/injectables/LoggerService.html",[0,0.078,3,0.243,4,0.143,5,0.268,9,0.219,10,1.097,17,0.934,18,1.005,20,0.394,21,0.026,22,1.282,28,0.796,40,0.287,58,0.243,62,0.01,63,0.015,64,0.01,90,0.427,91,1.417,131,1.026,139,1.515,140,1.417,141,1.326,163,0.896,179,1.686,194,2.851,203,1.131,225,2.667,229,2.663,239,2.297,286,0.778,287,1.131,295,1.642,325,2.411,328,1.529,405,1.834,406,3.97,407,3.97,408,3.97,409,3.987,410,3.987,411,3.987,412,3.987,413,3.987,414,3.371,415,5.101,416,2.745,417,4.647,418,2.745,419,3.371,420,2.745,421,3.371,422,2.745,423,3.371,424,2.745,425,2.745,426,2.745,427,2.321,428,1.667,429,3.371,430,3.371,431,2.042,432,4.826,433,2.663,434,2.042,435,3.654,436,3.441,437,2.042,438,2.042,439,2.321,440,2.321,441,2.321,442,2.321,443,2.321,444,2.321,445,2.321,446,2.321,447,2.321,448,3.371,449,3.97,450,2.321,451,2.321,452,2.321,453,2.321,454,2.321,455,2.321,456,2.042,457,2.321,458,2.321,459,2.321,460,2.321]],["title/classes/Login.html",[0,0.096,329,1.133]],["body/classes/Login.html",[0,0.131,2,1.297,3,0.206,4,0.176,5,0.147,7,1.899,8,2.018,9,0.269,10,1.269,13,1.264,17,0.836,18,1.241,19,2.697,20,0.913,21,0.026,22,1.371,23,1.626,24,1.879,25,2.325,26,2.618,27,2.443,28,0.78,31,1.491,36,1.733,38,1.733,40,0.345,41,2.325,42,2.038,43,1.491,45,1.297,46,2.038,47,2.434,48,1.389,49,2.038,51,1.899,52,1.656,53,1.656,54,1.212,55,2.51,58,0.282,59,1.899,60,1.733,62,0.013,63,0.017,64,0.013,100,2.567,101,1.733,103,2.8,203,1.389,329,1.764,372,2.685,461,2.51,462,3.143,463,3.374,464,3.374,465,3.374,466,3.374,467,3.374,468,3.374]],["title/controllers/LoginController.html",[127,1.296,469,2.253]],["body/controllers/LoginController.html",[0,0.121,3,0.26,4,0.222,5,0.185,9,0.339,17,0.773,20,0.612,21,0.026,22,1.462,23,1.172,28,0.562,40,0.328,58,0.26,62,0.016,63,0.02,64,0.016,90,0.663,92,1.637,127,1.637,130,2.587,131,1.383,139,1.253,140,1.172,141,1.096,155,2.026,160,2.845,163,0.957,177,2.263,266,1.637,307,2.587,308,2.587,329,1.977,372,2.941,462,2.992,469,3.59,470,3.602,471,4.26,472,4.26,473,5.374,474,4.26,475,2.992,476,3.602,477,4.26,478,4.26,479,4.26,480,4.26,481,4.26]],["title/injectables/LoginService.html",[286,0.658,475,1.878]],["body/injectables/LoginService.html",[0,0.086,3,0.184,4,0.157,5,0.131,8,1.638,9,0.24,13,0.725,17,0.897,18,1.049,19,2.189,20,0.433,21,0.026,25,1.241,28,0.653,40,0.37,58,0.184,62,0.011,63,0.016,64,0.011,90,0.469,91,1.361,95,1.333,131,1.097,139,1.454,140,1.479,141,1.097,143,2.028,163,0.958,177,2.263,179,1.531,209,1.434,210,1.012,239,1.531,241,1.548,266,1.901,286,0.832,287,1.241,292,2.374,293,2.066,307,3.004,308,1.831,324,2.848,325,2.189,326,2.848,327,3.172,328,2.374,329,1.905,343,2.374,372,2.699,462,3.159,475,2.374,482,2.549,483,4.264,484,4.264,485,3.015,486,4.183,487,3.015,488,4.264,489,3.015,490,2.189,491,4.264,492,3.015,493,2.014,494,2.014,495,1.638,496,1.679,497,2.549,498,2.549,499,3.015,500,2.243,501,2.549,502,3.015,503,4.183,504,2.549,505,2.549,506,4.264,507,2.243,508,2.243,509,2.014,510,3.015,511,4.264,512,2.848,513,3.015,514,4.264,515,3.015,516,2.549,517,3.015,518,2.549]],["title/classes/MessagesChat.html",[0,0.096,124,1.605]],["body/classes/MessagesChat.html",[0,0.132,2,1.303,3,0.207,4,0.177,5,0.148,7,1.905,8,2.023,9,0.27,10,1.273,13,1.267,17,0.839,18,0.662,20,0.914,21,0.026,22,1.373,23,1.629,24,1.887,25,2.329,26,2.621,27,2.446,28,0.781,31,1.499,36,1.741,38,1.741,40,0.345,41,2.438,42,2.045,43,1.499,45,1.303,46,2.045,47,2.438,48,1.396,49,2.045,50,1.887,51,1.905,52,1.661,53,1.217,54,1.217,56,1.887,58,0.207,59,2.168,60,1.741,61,2.264,62,0.013,63,0.017,64,0.013,100,1.887,101,1.741,104,2.814,119,2.264,123,2.867,124,2.2,225,2.327,270,3.517,519,2.867,520,5.265,521,3.39,522,3.39,523,3.39,524,3.39,525,3.39,526,3.39,527,3.39]],["title/injectables/MessagesService.html",[276,2.049,286,0.658]],["body/injectables/MessagesService.html",[0,0.098,3,0.21,4,0.179,5,0.15,9,0.274,13,1.276,17,1.079,20,0.494,21,0.026,28,0.785,40,0.347,58,0.21,62,0.013,63,0.017,64,0.013,90,0.535,124,2.221,131,1.202,139,1.749,140,1.637,141,1.464,143,1.636,179,1.677,194,3.455,204,1.321,205,1.636,209,1.636,210,1.155,222,2.297,225,1.52,239,1.677,241,1.766,242,2.558,270,3.542,276,2.836,286,0.911,287,1.416,292,2.953,293,2.286,309,2.558,311,1.914,528,2.908,529,4.67,530,4.67,531,5.304,532,4.67,533,3.438,534,3.438,535,4.67,536,4.67,537,3.438,538,4.67,539,3.438,540,5.69,541,3.438,542,3.438,543,4.67,544,3.438,545,4.67,546,3.438,547,3.438,548,3.438]],["title/classes/Product.html",[0,0.096,107,1.878]],["body/classes/Product.html",[0,0.117,2,1.103,3,0.175,4,0.15,5,0.125,7,1.696,8,1.85,9,0.229,10,1.133,13,1.158,14,3.063,17,0.954,18,1.192,19,2.472,20,0.934,21,0.026,22,1.302,23,1.711,24,2.292,25,2.458,26,2.701,27,2.52,28,0.82,31,1.269,36,2.114,38,2.114,40,0.321,41,2.458,42,2.325,43,1.269,45,1.103,46,2.128,47,2.514,48,1.182,49,2.128,50,2.292,51,1.696,52,1.479,53,1.031,54,1.031,58,0.175,59,1.982,60,2.472,61,1.918,62,0.011,63,0.015,64,0.011,93,3.708,95,2.128,96,4.071,103,2.5,107,2.292,549,2.428,550,4.814,551,4.814,552,4.814,553,2.871,554,2.871,555,2.871,556,2.871,557,2.871,558,2.871,559,2.871,560,2.871,561,2.871,562,2.871,563,2.871,564,2.871,565,2.871,566,2.428]],["title/modules/ProductsModule.html",[65,1.296,77,1.605]],["body/modules/ProductsModule.html",[0,0.133,3,0.285,4,0.244,5,0.204,21,0.026,40,0.4,58,0.285,62,0.017,63,0.021,64,0.017,65,2.187,67,2.223,72,2.602,77,2.708,83,2.4,90,0.728,92,1.796,93,3.457,107,2.602,210,1.57,279,3.122,567,4.674,568,4.674,569,3.802,570,4.674,571,4.674,572,4.674]],["title/guards/RoleWsGuard.html",[219,1.878,573,2.51]],["body/guards/RoleWsGuard.html",[0,0.082,3,0.176,4,0.15,5,0.126,9,0.23,17,0.956,18,0.562,20,0.593,21,0.026,27,1.108,28,0.695,40,0.354,58,0.176,62,0.011,63,0.015,64,0.011,90,0.449,91,1.597,113,1.75,131,1.063,139,1.549,140,1.45,141,1.242,143,2.506,155,1.371,163,1.253,177,2.23,179,1.483,190,1.925,193,2.144,204,1.108,205,1.371,209,1.371,210,0.968,217,2.93,219,2.299,239,1.733,266,1.854,286,0.806,292,2.686,293,2.143,309,2.144,311,2.299,323,3.072,342,2.144,428,1.75,490,2.98,512,1.925,574,2.882,575,2.437,576,4.129,577,5.577,578,4.129,579,2.882,580,2.465,581,4.825,582,5.269,583,2.882,584,3.492,585,4.129,586,2.882,587,2.882,588,5.269,589,2.882,590,4.129,591,3.072,592,4.825,593,4.129,594,2.882,595,2.437,596,2.882,597,2.882,598,3.589,599,4.129,600,4.825,601,2.882,602,2.882,603,2.882,604,2.882,605,2.882,606,2.882,607,2.882,608,2.882,609,2.882,610,2.882,611,2.882,612,2.882,613,2.882,614,4.129,615,2.882,616,2.882]],["title/controllers/TokenController.html",[127,1.296,617,2.253]],["body/controllers/TokenController.html",[0,0.112,3,0.239,4,0.204,5,0.17,9,0.312,17,0.71,18,0.764,19,2.01,20,0.562,21,0.026,22,1.271,23,1.077,28,0.516,40,0.345,58,0.239,62,0.015,63,0.019,64,0.015,90,0.609,91,1.401,92,1.504,127,1.504,130,2.377,131,1.31,139,1.151,140,1.077,141,1.007,143,2.691,155,1.862,163,0.879,177,2.174,179,1.405,239,1.828,266,1.956,292,2.179,293,1.956,307,3.091,308,2.377,323,2.911,324,2.614,325,2.01,326,2.614,327,3.787,328,2.179,329,1.314,330,3.309,396,3.787,580,2.25,584,3.309,598,4.208,617,3.4,618,3.309,619,5.09,620,3.914,621,5.09,622,3.914,623,3.309,624,2.911,625,3.914,626,3.914,627,3.914,628,3.914]],["title/injectables/TokenService.html",[286,0.658,293,1.296]],["body/injectables/TokenService.html",[0,0.099,3,0.213,4,0.182,5,0.152,9,0.278,17,0.969,21,0.026,28,0.705,40,0.365,58,0.213,62,0.02,63,0.017,64,0.013,90,0.543,91,1.298,131,1.214,139,1.571,140,1.47,141,1.375,143,2.243,163,1.343,177,2.053,194,2.864,266,1.34,286,0.92,287,1.436,293,1.812,329,1.171,396,4.258,428,2.118,490,1.791,493,2.33,512,3.15,598,2.595,629,2.595,630,4.716,631,4.716,632,4.716,633,4.716,634,3.488,635,4.716,636,3.488,637,3.488,638,4.716,639,3.488,640,3.488,641,3.488,642,2.95,643,4.716,644,4.258,645,2.95,646,3.488,647,3.488,648,4.716,649,4.716,650,3.488,651,3.488,652,4.716,653,3.488,654,3.488]],["title/classes/TypeUser.html",[0,0.096,495,1.296]],["body/classes/TypeUser.html",[0,0.145,2,1.504,3,0.239,4,0.204,5,0.17,7,2.096,8,2.174,9,0.312,10,1.401,13,1.361,20,0.914,21,0.026,22,1.346,23,1.557,25,2.329,26,2.621,27,2.446,28,0.746,31,1.73,40,0.311,41,2.329,45,1.504,47,2.467,48,1.612,51,2.096,52,1.828,53,1.405,54,1.405,56,2.179,58,0.239,59,1.612,62,0.015,63,0.019,64,0.015,95,2.501,101,2.01,103,2.377,119,3.4,343,3.15,495,1.956,591,3.787,655,3.309,656,3.914,657,3.914,658,3.914,659,3.914,660,3.309]],["title/controllers/UserController.html",[127,1.296,661,2.253]],["body/controllers/UserController.html",[0,0.094,3,0.201,4,0.172,5,0.144,9,0.263,17,1.014,18,1.307,20,0.651,21,0.026,23,1.613,28,0.773,40,0.341,58,0.201,62,0.012,63,0.017,64,0.012,90,0.513,92,1.267,127,1.267,130,2.002,131,1.168,137,3.376,139,1.644,140,1.538,141,1.509,147,3.376,151,3.86,153,2.453,154,2.453,155,2.788,160,2.202,163,1.361,490,3.187,494,2.202,495,1.267,496,1.836,580,2.471,624,2.453,661,3.031,662,2.788,663,5.59,664,3.376,665,3.837,666,3.376,667,3.297,668,3.297,669,3.297,670,2.788,671,3.297,672,2.453,673,4.388,674,3.297,675,3.297,676,3.297,677,3.297,678,3.297,679,3.297,680,3.297,681,2.788,682,3.297,683,3.297,684,3.297,685,3.297,686,3.297,687,2.788,688,3.297,689,3.297]],["title/injectables/UserService.html",[286,0.658,580,1.491]],["body/injectables/UserService.html",[0,0.053,3,0.114,4,0.097,5,0.081,9,0.148,10,0.816,13,1.482,17,0.835,18,1.19,19,2.518,20,0.661,21,0.026,22,0.83,23,0.513,28,0.704,40,0.336,52,0.669,53,0.669,58,0.114,62,0.007,63,0.011,64,0.007,90,0.29,91,1.612,95,1.863,131,0.764,139,1.353,140,1.415,141,1.262,143,2.005,163,1.155,177,2.426,179,1.065,180,1.576,181,1.769,185,1.982,204,0.716,205,0.886,209,0.886,210,0.626,225,0.824,239,1.514,241,1.898,263,3.275,264,2.75,265,1.982,266,2.343,286,0.579,287,0.767,292,2.058,293,1.62,307,1.802,308,1.131,311,1.037,324,1.244,325,1.523,326,1.244,328,1.037,329,1.546,333,2.509,343,2.73,372,0.886,384,1.576,462,2.347,486,3.126,490,2.896,493,1.244,494,1.244,495,1.421,496,1.037,497,1.576,498,1.576,500,1.386,501,1.576,503,2.509,504,2.509,505,2.509,507,2.207,508,2.207,509,1.982,512,1.982,516,2.509,518,1.576,580,1.311,664,2.207,665,3.126,666,2.207,670,2.509,672,2.207,690,1.576,691,3.697,692,4.603,693,3.564,694,4.215,695,3.697,696,1.863,697,2.509,698,1.863,699,2.509,700,1.863,701,1.863,702,1.863,703,1.863,704,1.863,705,2.967,706,1.863,707,1.863,708,1.576,709,1.576,710,1.863,711,2.967,712,2.967,713,3.892,714,1.863,715,1.863,716,1.863,717,1.863,718,3.697,719,1.863,720,1.863,721,2.509,722,2.967,723,2.967,724,2.967,725,3.697,726,2.967,727,1.863,728,1.863,729,1.863,730,1.863,731,1.863,732,1.863,733,2.967,734,1.863,735,1.576,736,1.863,737,3.697,738,1.863,739,1.863,740,1.863,741,1.863,742,1.863,743,1.863,744,1.863,745,1.863,746,1.863,747,1.863,748,1.863,749,1.576,750,1.576,751,1.576,752,2.967,753,1.863,754,1.863]],["title/controllers/UserTypeController.html",[127,1.296,755,2.253]],["body/controllers/UserTypeController.html",[0,0.099,3,0.213,4,0.182,5,0.152,9,0.278,17,1.038,18,1.117,21,0.026,23,1.645,28,0.789,40,0.326,58,0.213,62,0.013,63,0.017,64,0.013,90,0.543,92,1.34,127,1.34,130,2.118,131,1.214,137,3.508,139,1.683,140,1.575,141,1.539,147,3.508,151,3.975,153,2.595,154,2.595,155,2.844,160,2.33,163,1.343,249,2.595,336,2.422,490,3.164,495,1.34,496,1.942,580,1.542,673,4.518,681,2.95,687,2.95,755,3.15,756,2.95,757,3.488,758,5.723,759,4.716,760,3.988,761,4.716,762,4.716,763,3.488,764,3.488,765,3.488,766,3.488,767,3.488,768,3.488,769,3.488,770,3.488,771,3.488,772,2.95,773,3.488,774,3.488,775,3.488,776,3.488,777,3.488,778,3.488,779,3.488,780,3.488]],["title/injectables/UserTypeService.html",[286,0.658,336,1.732]],["body/injectables/UserTypeService.html",[0,0.08,3,0.172,4,0.147,5,0.123,9,0.225,13,1.462,17,1.003,18,1.079,20,0.827,21,0.026,28,0.76,40,0.338,58,0.172,62,0.021,63,0.015,64,0.01,90,0.439,91,1.522,131,1.046,139,1.626,140,1.522,141,1.423,163,1.294,177,2.53,179,1.46,181,2.125,185,3.184,204,1.084,205,1.342,209,1.342,210,0.947,225,1.247,239,1.712,241,1.448,263,2.715,265,1.884,266,2.005,286,0.793,287,1.161,295,2.277,310,2.385,311,2.263,336,2.088,490,2.958,495,1.832,496,1.57,509,2.715,664,3.024,666,3.024,672,3.024,693,4.411,697,3.438,699,3.438,708,2.385,709,2.385,713,4.031,721,3.438,749,3.438,750,2.385,751,2.385,760,3.438,781,2.385,782,2.821,783,4.767,784,2.821,785,4.065,786,2.821,787,2.821,788,2.821,789,4.065,790,2.821,791,2.821,792,2.821,793,2.821,794,2.821,795,2.821,796,2.821,797,2.821,798,2.821,799,2.821,800,2.821,801,2.821]],["title/modules/UsersModule.html",[65,1.296,78,1.605]],["body/modules/UsersModule.html",[0,0.087,1,2.604,3,0.186,4,0.159,5,0.132,18,0.97,21,0.026,28,0.401,40,0.407,58,0.186,62,0.011,63,0.016,64,0.011,65,2.074,67,1.446,68,1.561,69,1.846,70,1.846,71,1.561,72,3.005,73,2.771,76,2.567,77,2.567,78,3.199,79,2.604,80,1.846,81,1.846,83,3.117,86,2.04,89,3.696,90,0.473,91,1.367,92,1.648,131,0.782,141,0.782,163,0.683,181,2.074,204,1.168,206,2.262,210,1.021,279,2.031,280,2.571,293,1.648,295,2.222,329,1.669,336,2.202,357,3.605,379,3.627,380,4.202,469,3.319,475,2.388,476,2.571,493,2.031,494,2.031,495,1.648,496,1.693,580,1.896,617,3.319,623,2.571,624,2.262,661,3.319,755,3.319,772,2.571,802,3.04,803,3.04,804,3.04,805,2.262,806,3.04,807,3.04,808,3.04,809,3.04,810,3.04,811,3.04,812,3.04,813,2.571]],["title/coverage.html",[814,3.43]],["body/coverage.html",[0,0.179,1,1.69,5,0.175,6,2.353,18,0.543,20,0.399,21,0.026,52,0.999,62,0.01,63,0.015,64,0.01,71,1.429,73,1.429,82,2.07,83,2.429,93,1.69,94,2.353,104,1.23,105,2.353,107,1.549,124,1.323,127,2.114,128,1.858,129,2.353,157,1.549,172,1.69,173,2.995,181,1.069,199,1.858,203,1.948,217,1.69,219,1.549,276,1.69,286,1.204,288,2.353,293,1.069,295,1.146,325,1.429,329,1.352,331,2.07,332,2.995,336,1.429,341,2.07,349,5.209,356,2.995,357,2.689,381,2.353,394,2.353,405,3.674,433,1.858,435,1.858,436,1.858,461,2.995,469,1.858,470,2.353,475,1.549,482,2.353,495,1.069,519,2.353,528,2.353,549,2.353,569,1.858,573,2.07,575,2.353,580,1.23,617,1.858,618,2.353,629,2.995,644,2.07,655,2.353,661,1.858,662,2.353,690,2.353,755,1.858,756,2.353,781,2.353,805,3.519,814,2.07,815,2.782,816,2.782,817,2.782,818,6.414,819,6.473,820,2.353,821,4.73,822,4.73,823,4.026,824,5.184,825,4.026,826,5.734,827,5.501,828,2.353,829,2.353,830,2.782,831,2.353,832,2.782,833,2.782,834,2.782]],["title/dependencies.html",[68,2.084,835,2.815]],["body/dependencies.html",[0,0.154,21,0.026,45,1.642,53,1.933,54,1.534,62,0.016,63,0.02,64,0.016,68,2.194,90,0.665,210,1.435,215,3.179,216,3.596,224,4.005,359,3.613,428,2.595,431,3.179,500,3.179,595,3.613,642,3.613,836,5.896,837,4.273,838,4.273,839,5.385,840,4.273,841,4.273,842,4.273,843,4.273,844,5.385,845,4.273,846,4.273,847,4.273,848,4.273,849,4.273,850,4.273,851,4.273,852,4.273,853,4.273,854,4.273,855,4.273,856,4.273,857,4.273,858,4.273,859,4.273,860,4.273,861,4.273,862,4.273,863,4.273]],["title/interfaces/file.html",[5,0.147,203,1.389]],["body/interfaces/file.html",[0,0.093,3,0.275,4,0.17,5,0.263,9,0.26,10,1.239,18,1.086,21,0.026,22,1.012,40,0.315,58,0.275,62,0.012,63,0.017,64,0.012,90,0.507,91,1.531,163,1.012,179,1.171,203,1.342,225,2.581,229,3.007,239,1.998,286,0.879,295,1.342,325,2.649,328,1.815,404,2.177,405,2.177,406,2.757,407,2.757,408,2.757,414,2.757,415,5.105,417,4.91,419,2.757,421,2.757,423,2.757,427,2.757,428,1.98,429,3.808,430,3.808,431,2.425,432,5.413,433,3.007,434,2.425,435,3.9,436,3.716,437,2.425,438,2.425,439,2.757,440,2.757,441,2.757,442,2.757,443,2.757,444,2.757,445,2.757,446,2.757,447,2.757,448,3.808,449,4.362,450,2.757,451,2.757,452,2.757,453,2.757,454,2.757,455,2.757,456,2.425,457,2.757,458,2.757,459,2.757,460,2.757]],["title/miscellaneous/functions.html",[864,1.88,865,3.433]],["body/miscellaneous/functions.html",[9,0.423,21,0.023,62,0.02,63,0.023,64,0.02,71,3.326,828,4.49,864,3.547,865,4.49,866,5.31]],["title/classes/imagesProduct.html",[0,0.096,569,2.253]],["body/classes/imagesProduct.html",[0,0.139,2,1.416,3,0.225,4,0.192,5,0.16,7,2.014,8,2.11,9,0.294,10,1.346,13,1.321,17,0.887,20,0.874,21,0.026,22,1.099,23,1.61,25,2.262,26,2.578,27,2.406,28,0.772,31,1.629,36,1.892,38,1.892,40,0.335,41,2.262,42,1.629,43,1.629,44,4.137,45,1.416,46,2.162,47,2.409,48,1.517,49,2.162,50,2.051,51,2.014,52,1.757,53,1.323,54,1.323,56,2.051,58,0.225,59,2.014,62,0.014,63,0.018,64,0.014,107,3.612,108,3.668,569,3.267,829,3.115,867,5.492,868,3.684,869,3.684,870,3.684,871,3.684,872,3.684,873,3.684,874,3.684,875,3.684]],["title/index.html",[9,0.224,876,2.815,877,2.815]],["body/index.html",[4,0.212,21,0.026,54,1.457,62,0.015,63,0.019,64,0.015,95,1.793,174,2.463,456,3.018,814,3.018,878,4.057,879,4.057,880,5.21,881,4.057,882,4.057,883,4.057,884,4.057,885,4.057,886,5.755,887,4.057,888,4.057,889,4.057,890,6.536,891,4.057,892,4.057,893,6.427,894,4.057,895,4.057,896,5.21,897,4.057,898,4.057,899,4.057,900,4.057,901,5.21,902,5.21,903,4.057,904,4.057,905,4.057,906,5.21,907,5.21,908,4.057,909,4.057,910,4.057,911,4.057,912,4.057,913,3.43,914,4.057,915,4.057,916,4.057,917,4.057,918,4.057,919,4.057,920,4.057,921,4.057,922,4.057,923,4.057,924,4.057,925,4.057,926,4.057,927,4.057,928,4.057,929,4.057,930,4.057,931,4.057]],["title/interfaces/login.html",[203,1.389,329,1.133]],["body/interfaces/login.html",[0,0.145,3,0.238,4,0.203,5,0.169,7,1.603,8,1.949,9,0.31,10,1.396,13,0.936,18,1.21,19,1.999,20,0.858,21,0.026,22,1.268,26,2.462,27,2.297,40,0.365,41,2.462,42,2.242,43,1.721,45,1.496,46,2.242,47,2.553,48,1.603,49,2.242,51,2.089,52,1.821,53,1.821,54,1.398,55,2.896,58,0.31,59,2.089,60,1.999,62,0.014,63,0.019,64,0.014,100,2.824,101,1.999,103,3.08,203,1.603,329,1.895,372,2.949,404,2.6,461,2.896,462,3.452]],["title/modules.html",[67,2.193]],["body/modules.html",[21,0.022,62,0.019,63,0.022,64,0.019,66,3.338,67,2.377,76,2.377,77,2.377,78,2.377,86,2.377,913,5.524,932,6.533,933,6.533,934,6.669,935,4.998,936,4.998]],["title/overview.html",[937,3.898]],["body/overview.html",[2,1.377,21,0.026,62,0.013,63,0.018,64,0.013,65,1.377,66,4.306,67,1.705,68,1.84,69,2.176,70,2.176,71,1.84,72,1.995,73,1.84,74,3.03,75,3.03,76,3.207,77,3.106,78,3.284,79,2.916,80,2.176,81,2.176,86,3.264,92,1.377,157,3.016,181,2.477,274,3.03,275,3.03,276,3.289,287,1.476,295,2.655,344,2.666,352,3.03,353,3.03,355,3.03,404,2.393,573,2.666,735,3.03,937,3.03,938,4.802,939,3.584,940,3.584]],["title/classes/user.html",[0,0.096,18,0.658]],["body/classes/user.html",[0,0.114,2,1.061,3,0.169,4,0.144,5,0.12,7,1.649,8,1.81,9,0.22,10,1.102,13,1.133,14,2.978,17,1.037,18,0.781,20,0.958,21,0.026,22,1.464,23,1.694,24,1.537,25,2.488,26,2.719,27,2.504,28,0.825,31,1.221,36,1.418,38,1.418,40,0.288,41,2.258,42,1.77,43,1.221,45,1.061,46,1.77,47,2.536,48,1.137,49,1.77,51,1.649,52,1.438,53,0.991,54,0.991,58,0.169,59,1.649,60,2.056,61,1.844,62,0.01,63,0.015,64,0.01,100,2.229,101,1.418,112,2.335,113,2.431,119,1.844,121,2.335,140,1.296,343,2.622,372,2.24,462,2.622,495,2.107,507,3.503,508,3.503,509,3.146,566,2.335,591,2.978,660,2.335,831,2.335,941,4.71,942,4.71,943,2.761,944,2.761,945,2.761,946,2.761,947,2.761,948,2.761,949,2.761,950,2.761,951,2.761,952,2.761,953,2.761,954,2.761,955,2.761,956,2.761,957,2.761,958,2.761,959,2.761,960,2.761,961,2.761]],["title/miscellaneous/variables.html",[864,1.88,962,3.433]],["body/miscellaneous/variables.html",[1,1.932,9,0.253,18,0.994,20,0.882,21,0.026,22,0.715,62,0.012,63,0.016,64,0.012,73,2.273,76,1.513,77,1.513,78,1.513,82,2.366,83,3.156,86,1.513,95,1.957,113,2.688,163,0.715,174,1.932,181,1.222,217,3.343,225,1.957,293,1.222,295,1.31,329,1.487,332,2.366,336,1.633,341,3.293,342,2.366,343,2.465,344,3.293,356,2.366,357,4.002,362,2.69,363,2.69,364,2.69,365,2.69,366,2.69,367,2.69,368,2.69,369,2.69,370,2.69,371,2.69,372,1.513,373,3.743,374,2.69,375,2.69,376,2.69,377,2.69,378,2.69,405,2.125,417,3.293,433,2.957,434,2.366,435,3.677,436,3.677,437,2.366,438,2.366,475,1.771,495,1.222,580,1.406,629,2.366,644,3.293,645,2.69,805,2.366,813,2.69,820,2.69,864,2.125,962,2.69,963,5.092,964,3.181,965,4.427,966,3.181,967,5.092,968,3.181,969,3.181,970,6.572,971,6.572,972,3.181]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"classes/imagesProduct.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":349,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":401,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["0x8",{"_index":402,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["1",{"_index":344,"title":{},"body":{"injectables/ConfigInit.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":735,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["1000",{"_index":232,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["16",{"_index":398,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["18",{"_index":258,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["18)}${usersecondaryid.slice",{"_index":257,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["1h",{"_index":649,"title":{},"body":{"injectables/TokenService.html":{}}}],["2.1.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":940,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":369,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["36",{"_index":259,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["4.0.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["410",{"_index":751,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["4xxx",{"_index":390,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["5",{"_index":938,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":234,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["6.6.2",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["7.6.18",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":939,"title":{},"body":{"overview.html":{}}}],["_chat",{"_index":182,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["_chatmodel",{"_index":297,"title":{},"body":{"injectables/ChatService.html":{}}}],["_chatservice",{"_index":161,"title":{},"body":{"controllers/ChatController.html":{}}}],["_errorlogger",{"_index":406,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["_geradoruuid",{"_index":185,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["_infologger",{"_index":407,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["_logger",{"_index":785,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["_loggercreate",{"_index":409,"title":{},"body":{"injectables/LoggerService.html":{}}}],["_loggercreate(level",{"_index":414,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["_loggerservice",{"_index":294,"title":{},"body":{"injectables/ChatService.html":{}}}],["_login",{"_index":486,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["_loginservice",{"_index":478,"title":{},"body":{"controllers/LoginController.html":{}}}],["_messages",{"_index":183,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["_messageschat",{"_index":535,"title":{},"body":{"injectables/MessagesService.html":{}}}],["_reflector",{"_index":581,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["_tokenservice",{"_index":292,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["_type",{"_index":695,"title":{},"body":{"injectables/UserService.html":{}}}],["_usermodel",{"_index":783,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["_userservice",{"_index":584,"title":{},"body":{"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{}}}],["_usertypesservice",{"_index":338,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["_warnlogger",{"_index":408,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["active",{"_index":343,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/LoginService.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["admin",{"_index":342,"title":{},"body":{"injectables/ConfigInit.html":{},"guards/RoleWsGuard.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":576,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["adminrole(token",{"_index":585,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["adress_user",{"_index":57,"title":{},"body":{"classes/AdressUser.html":{}}}],["adressuser",{"_index":1,"title":{"classes/AdressUser.html":{}},"body":{"classes/AdressUser.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":330,"title":{},"body":{"injectables/ChatService.html":{},"controllers/TokenController.html":{}}}],["allownull",{"_index":26,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["allusers",{"_index":663,"title":{},"body":{"controllers/UserController.html":{}}}],["allusersandtypes",{"_index":679,"title":{},"body":{"controllers/UserController.html":{}}}],["allusertypes",{"_index":758,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["already",{"_index":727,"title":{},"body":{"injectables/UserService.html":{}}}],["altermessage",{"_index":529,"title":{},"body":{"injectables/MessagesService.html":{}}}],["altermessage(message",{"_index":536,"title":{},"body":{"injectables/MessagesService.html":{}}}],["amazing",{"_index":914,"title":{},"body":{"index.html":{}}}],["app",{"_index":456,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"index.html":{}}}],["applications",{"_index":885,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":66,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":177,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"interfaces/Ichat.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["attributes",{"_index":503,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":471,"title":{},"body":{"controllers/LoginController.html":{}}}],["author",{"_index":924,"title":{},"body":{"index.html":{}}}],["autoincrement",{"_index":101,"title":{},"body":{"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/TypeUser.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["autoloadmodels",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":936,"title":{},"body":{"modules.html":{}}}],["await",{"_index":266,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"interfaces/Ichat.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["backers",{"_index":915,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":500,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["belongsto",{"_index":46,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["belongsto(undefined",{"_index":36,"title":{},"body":{"classes/AdressUser.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["belongstomany",{"_index":956,"title":{},"body":{"classes/user.html":{}}}],["better",{"_index":730,"title":{},"body":{"injectables/UserService.html":{}}}],["blob",{"_index":867,"title":{},"body":{"classes/imagesProduct.html":{}}}],["body",{"_index":153,"title":{},"body":{"controllers/ChatController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["boolean",{"_index":591,"title":{},"body":{"guards/RoleWsGuard.html":{},"classes/TypeUser.html":{},"classes/user.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":934,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":932,"title":{},"body":{"modules.html":{}}}],["building",{"_index":881,"title":{},"body":{"index.html":{}}}],["c",{"_index":395,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["canactivate",{"_index":577,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["canactivate(context",{"_index":587,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["caralho",{"_index":250,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["case",{"_index":614,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["category",{"_index":93,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["category.model",{"_index":565,"title":{},"body":{"classes/Product.html":{}}}],["category_products",{"_index":102,"title":{},"body":{"classes/Category.html":{}}}],["categoryid",{"_index":550,"title":{},"body":{"classes/Product.html":{}}}],["chat",{"_index":104,"title":{"classes/Chat.html":{}},"body":{"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{},"classes/MessagesChat.html":{},"coverage.html":{}}}],["chat.model",{"_index":526,"title":{},"body":{"classes/MessagesChat.html":{}}}],["chat/chat.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["chatcontroller",{"_index":128,"title":{"controllers/ChatController.html":{}},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{},"coverage.html":{}}}],["chatgateway",{"_index":172,"title":{"classes/ChatGateway.html":{}},"body":{"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"interfaces/Ichat.html":{},"coverage.html":{}}}],["chatid",{"_index":270,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{}}}],["chatmodule",{"_index":76,"title":{"modules/ChatModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["chats",{"_index":126,"title":{},"body":{"classes/Chat.html":{}}}],["chatservice",{"_index":157,"title":{"injectables/ChatService.html":{}},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"coverage.html":{},"overview.html":{}}}],["checktoken",{"_index":619,"title":{},"body":{"controllers/TokenController.html":{}}}],["checktoken(@param('token",{"_index":626,"title":{},"body":{"controllers/TokenController.html":{}}}],["checktoken(token",{"_index":620,"title":{},"body":{"controllers/TokenController.html":{}}}],["city",{"_index":11,"title":{},"body":{"classes/AdressUser.html":{}}}],["class",{"_index":0,"title":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/ChatGateway.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/ChatGateway.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"overview.html":{},"classes/user.html":{}}}],["cli",{"_index":606,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["client",{"_index":189,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["client.emit('respmessage",{"_index":271,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["client.join(data",{"_index":246,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["cluster_appmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_chatmodule",{"_index":274,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_providers",{"_index":275,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":352,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":353,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":354,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_providers",{"_index":355,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":802,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_imports",{"_index":803,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":804,"title":{},"body":{"modules/UsersModule.html":{}}}],["cod",{"_index":750,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["column",{"_index":47,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["column({type",{"_index":112,"title":{},"body":{"classes/Chat.html":{},"classes/user.html":{}}}],["combinelatest",{"_index":427,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["compare",{"_index":499,"title":{},"body":{"injectables/LoginService.html":{}}}],["compare(password",{"_index":513,"title":{},"body":{"injectables/LoginService.html":{}}}],["configinit",{"_index":331,"title":{"injectables/ConfigInit.html":{}},"body":{"injectables/ConfigInit.html":{},"coverage.html":{}}}],["configmodule",{"_index":358,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule.forroot",{"_index":362,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["connectedsocket",{"_index":211,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["connection",{"_index":175,"title":{},"body":{"classes/ChatGateway.html":{}}}],["connection(@messagebody",{"_index":248,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["connection(data",{"_index":188,"title":{},"body":{"classes/ChatGateway.html":{}}}],["console.log('data",{"_index":251,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["console.log('oi",{"_index":312,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log('porra",{"_index":249,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"controllers/UserTypeController.html":{}}}],["console.log(data",{"_index":247,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["console.log(roles",{"_index":612,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["const",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{}}}],["constructor(_chatmodel",{"_index":291,"title":{},"body":{"injectables/ChatService.html":{}}}],["constructor(_geradoruuid",{"_index":180,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/UserService.html":{}}}],["constructor(_logger",{"_index":782,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["constructor(_messageschat",{"_index":533,"title":{},"body":{"injectables/MessagesService.html":{}}}],["constructor(_tokenservice",{"_index":485,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(_userservice",{"_index":579,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["constructor(_usertypesservice",{"_index":335,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["constructor(private",{"_index":160,"title":{},"body":{"controllers/ChatController.html":{},"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["context",{"_index":590,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["context.getargs",{"_index":605,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["context.getclass",{"_index":611,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["context.switchtows",{"_index":608,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["controller",{"_index":127,"title":{"controllers/ChatController.html":{},"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}},"body":{"controllers/ChatController.html":{},"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":477,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('chat",{"_index":159,"title":{},"body":{"controllers/ChatController.html":{}}}],["controller('token",{"_index":625,"title":{},"body":{"controllers/TokenController.html":{}}}],["controller('user",{"_index":677,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('user_types",{"_index":773,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["controllers",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"controllers/LoginController.html":{},"modules/ProductsModule.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/chat.controller",{"_index":278,"title":{},"body":{"modules/ChatModule.html":{}}}],["controllers/login.controller",{"_index":810,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers/token.controller",{"_index":811,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers/usertype.controller",{"_index":809,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers/usuarios.controller",{"_index":808,"title":{},"body":{"modules/UsersModule.html":{}}}],["core/core.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/geradoruuid.service",{"_index":708,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["coremodule",{"_index":86,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":12,"title":{},"body":{"classes/AdressUser.html":{}}}],["coverage",{"_index":814,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":384,"title":{},"body":{"injectables/GeradorUuidService.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":504,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["createlogger",{"_index":429,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["createroom",{"_index":176,"title":{},"body":{"classes/ChatGateway.html":{}}}],["createroom(@messagebody",{"_index":245,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["createroom(data",{"_index":195,"title":{},"body":{"classes/ChatGateway.html":{}}}],["crypto",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":193,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"guards/RoleWsGuard.html":{}}}],["database",{"_index":375,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":48,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["datatype.blob",{"_index":875,"title":{},"body":{"classes/imagesProduct.html":{}}}],["datatype.boolean",{"_index":660,"title":{},"body":{"classes/TypeUser.html":{},"classes/user.html":{}}}],["datatype.float",{"_index":566,"title":{},"body":{"classes/Product.html":{},"classes/user.html":{}}}],["datatype.string",{"_index":61,"title":{},"body":{"classes/AdressUser.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/user.html":{}}}],["datatype.string(100",{"_index":961,"title":{},"body":{"classes/user.html":{}}}],["datatype.string(20",{"_index":960,"title":{},"body":{"classes/user.html":{}}}],["datatype.string(255",{"_index":103,"title":{},"body":{"classes/Category.html":{},"classes/Login.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"interfaces/login.html":{}}}],["datatype.string(60",{"_index":958,"title":{},"body":{"classes/user.html":{}}}],["datatype.uuid",{"_index":59,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":641,"title":{},"body":{"injectables/TokenService.html":{}}}],["decode(token",{"_index":654,"title":{},"body":{"injectables/TokenService.html":{}}}],["decoded",{"_index":599,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["decodetoken",{"_index":630,"title":{},"body":{"injectables/TokenService.html":{}}}],["decodetoken(token",{"_index":633,"title":{},"body":{"injectables/TokenService.html":{}}}],["decorators",{"_index":23,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"controllers/TokenController.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["default",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultmeta",{"_index":457,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["delete",{"_index":154,"title":{},"body":{"controllers/ChatController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["delete(':id",{"_index":137,"title":{},"body":{"controllers/ChatController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["deletechat",{"_index":132,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{}}}],["deletechat(@param('id",{"_index":170,"title":{},"body":{"controllers/ChatController.html":{}}}],["deletechat(id",{"_index":136,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{}}}],["deleted",{"_index":749,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["deletemessage",{"_index":530,"title":{},"body":{"injectables/MessagesService.html":{}}}],["deletemessage(idmessage",{"_index":538,"title":{},"body":{"injectables/MessagesService.html":{}}}],["deleteuser",{"_index":664,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["deleteuser(@param('id",{"_index":688,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":697,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["deleteuser(param",{"_index":668,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteusertype",{"_index":759,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["deleteusertype(@param",{"_index":779,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["deleteusertype(param",{"_index":764,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["dependencies",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":95,"title":{},"body":{"classes/Category.html":{},"classes/ChatGateway.html":{},"injectables/ConfigInit.html":{},"injectables/LoginService.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":892,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":364,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["dynamicmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["e2e",{"_index":903,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":882,"title":{},"body":{"index.html":{}}}],["email",{"_index":462,"title":{},"body":{"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["err",{"_index":652,"title":{},"body":{"injectables/TokenService.html":{}}}],["error",{"_index":328,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"interfaces/file.html":{}}}],["errorlog",{"_index":410,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errorlog(message",{"_index":419,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["executioncontext",{"_index":588,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["exists",{"_index":724,"title":{},"body":{"injectables/UserService.html":{}}}],["expiresin",{"_index":648,"title":{},"body":{"injectables/TokenService.html":{}}}],["export",{"_index":58,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["false",{"_index":27,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"guards/RoleWsGuard.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["file",{"_index":5,"title":{"interfaces/file.html":{}},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["file.filename",{"_index":453,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["file.level",{"_index":454,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["filename",{"_index":432,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["foreignkey",{"_index":49,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["format",{"_index":430,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["format.combine",{"_index":455,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["format.label",{"_index":438,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["format.printf",{"_index":434,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["format.timestamp",{"_index":437,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["forwardref",{"_index":204,"title":{},"body":{"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"interfaces/Ichat.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{}}}],["framework",{"_index":880,"title":{},"body":{"index.html":{}}}],["fs",{"_index":643,"title":{},"body":{"injectables/TokenService.html":{}}}],["fs.readfilesync('src/config/keys.key').tostring",{"_index":645,"title":{},"body":{"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":394,"title":{},"body":{"injectables/GeradorUuidService.html":{},"coverage.html":{}}}],["functions",{"_index":865,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geradoruuidservice",{"_index":181,"title":{"injectables/GeradorUuidService.html":{}},"body":{"classes/ChatGateway.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["get(':email/:password",{"_index":473,"title":{},"body":{"controllers/LoginController.html":{}}}],["get(':id",{"_index":147,"title":{},"body":{"controllers/ChatController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["get(':id/:token",{"_index":144,"title":{},"body":{"controllers/ChatController.html":{}}}],["get(':token",{"_index":621,"title":{},"body":{"controllers/TokenController.html":{}}}],["get('types",{"_index":678,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":699,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["getall",{"_index":693,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["getallchats",{"_index":133,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{}}}],["getallchats(@param('id",{"_index":165,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallchats(id",{"_index":142,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallchats(undefined",{"_index":299,"title":{},"body":{"injectables/ChatService.html":{}}}],["getallmessages",{"_index":531,"title":{},"body":{"injectables/MessagesService.html":{}}}],["getallmessages(undefined",{"_index":541,"title":{},"body":{"injectables/MessagesService.html":{}}}],["getchat",{"_index":134,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{}}}],["getchat(@param('id",{"_index":168,"title":{},"body":{"controllers/ChatController.html":{}}}],["getchat(id",{"_index":146,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{}}}],["getlogin",{"_index":483,"title":{},"body":{"injectables/LoginService.html":{}}}],["getlogin(email",{"_index":488,"title":{},"body":{"injectables/LoginService.html":{}}}],["getmessages",{"_index":532,"title":{},"body":{"injectables/MessagesService.html":{}}}],["getmessages(idmessage",{"_index":543,"title":{},"body":{"injectables/MessagesService.html":{}}}],["getting",{"_index":876,"title":{"index.html":{}},"body":{}}],["graph",{"_index":935,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":910,"title":{},"body":{"index.html":{}}}],["guard",{"_index":573,"title":{"guards/RoleWsGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":574,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["guards/role.ws.guard",{"_index":282,"title":{},"body":{"modules/ChatModule.html":{}}}],["hash",{"_index":498,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["hash(user.password",{"_index":734,"title":{},"body":{"injectables/UserService.html":{}}}],["hasone",{"_index":121,"title":{},"body":{"classes/Chat.html":{},"classes/user.html":{}}}],["here",{"_index":921,"title":{},"body":{"index.html":{}}}],["host",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":236,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["httpexception",{"_index":307,"title":{},"body":{"injectables/ChatService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":928,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":308,"title":{},"body":{"injectables/ChatService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["httpstatus.conflict",{"_index":726,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.not_found",{"_index":511,"title":{},"body":{"injectables/LoginService.html":{}}}],["httpstatus.unauthorized",{"_index":327,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{}}}],["ichat",{"_index":199,"title":{"interfaces/Ichat.html":{}},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"coverage.html":{}}}],["id",{"_index":13,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["id's",{"_index":385,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["identifier",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["idmessage",{"_index":540,"title":{},"body":{"injectables/MessagesService.html":{}}}],["images_product",{"_index":874,"title":{},"body":{"classes/imagesProduct.html":{}}}],["imagesproduct",{"_index":569,"title":{"classes/imagesProduct.html":{}},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"classes/imagesProduct.html":{}}}],["implements",{"_index":597,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["import",{"_index":40,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":506,"title":{},"body":{"injectables/LoginService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["infolog",{"_index":411,"title":{},"body":{"injectables/LoggerService.html":{}}}],["infolog(message",{"_index":421,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["init",{"_index":334,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["init_types",{"_index":341,"title":{},"body":{"injectables/ConfigInit.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["init_types.foreach((element",{"_index":350,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["inject",{"_index":205,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"interfaces/Ichat.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["inject(forwardref",{"_index":311,"title":{},"body":{"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["inject(geradoruuidservice",{"_index":238,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["injectable",{"_index":286,"title":{"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}},"body":{"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"coverage.html":{},"interfaces/file.html":{}}}],["injectables",{"_index":287,"title":{},"body":{"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"overview.html":{}}}],["injectmodel",{"_index":209,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["injectmodel(chat",{"_index":240,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{}}}],["injectmodel(login",{"_index":501,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["injectmodel(messageschat",{"_index":242,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/MessagesService.html":{}}}],["injectmodel(typeuser",{"_index":709,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["injectmodel(user",{"_index":705,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":889,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":891,"title":{},"body":{"index.html":{}}}],["interface",{"_index":203,"title":{"interfaces/Ichat.html":{},"interfaces/file.html":{},"interfaces/login.html":{}},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"coverage.html":{},"interfaces/file.html":{},"interfaces/login.html":{}}}],["interfaces",{"_index":404,"title":{},"body":{"interfaces/Ichat.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"overview.html":{}}}],["invalid",{"_index":318,"title":{},"body":{"injectables/ChatService.html":{}}}],["ioadapter",{"_index":223,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["isbase64",{"_index":44,"title":{},"body":{"classes/AdressUser.html":{},"classes/imagesProduct.html":{}}}],["isemail",{"_index":100,"title":{},"body":{"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["isemail()@column({type",{"_index":944,"title":{},"body":{"classes/user.html":{}}}],["isfloat",{"_index":50,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{}}}],["isnotempty",{"_index":41,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["isnotempty()@column({type",{"_index":119,"title":{},"body":{"classes/Chat.html":{},"classes/MessagesChat.html":{},"classes/TypeUser.html":{},"classes/user.html":{}}}],["isnotempty()@foreignkey(undefined)@column({type",{"_index":38,"title":{},"body":{"classes/AdressUser.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["isnotempty()@isbase64()@column({type",{"_index":868,"title":{},"body":{"classes/imagesProduct.html":{}}}],["isnotempty()@isemail()@column({type",{"_index":463,"title":{},"body":{"classes/Login.html":{}}}],["isnotempty()@isfloat()@maxlength(255)@column({type",{"_index":559,"title":{},"body":{"classes/Product.html":{}}}],["isnotempty()@isstring()@column({type",{"_index":557,"title":{},"body":{"classes/Product.html":{}}}],["isnotempty()@isstring()@maxlength(255)@column({type",{"_index":24,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/user.html":{}}}],["isnotempty()@maxlength(255)@column({type",{"_index":947,"title":{},"body":{"classes/user.html":{}}}],["isstring",{"_index":42,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["join",{"_index":917,"title":{},"body":{"index.html":{}}}],["js",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":642,"title":{},"body":{"injectables/TokenService.html":{},"dependencies.html":{}}}],["kamil",{"_index":925,"title":{},"body":{"index.html":{}}}],["label",{"_index":435,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["lastmessageid",{"_index":106,"title":{},"body":{"classes/Chat.html":{}}}],["legend",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":417,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":931,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":907,"title":{},"body":{"index.html":{}}}],["link",{"_index":252,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["literal",{"_index":150,"title":{},"body":{"controllers/ChatController.html":{}}}],["localhost",{"_index":367,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":551,"title":{},"body":{"classes/Product.html":{}}}],["logger",{"_index":807,"title":{},"body":{"modules/UsersModule.html":{}}}],["loggerservice",{"_index":295,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/ChatService.html":{},"modules/CoreModule.html":{},"injectables/LoggerService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/file.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":329,"title":{"classes/Login.html":{},"interfaces/login.html":{}},"body":{"injectables/ChatService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/login.html":{},"miscellaneous/variables.html":{}}}],["login(email",{"_index":472,"title":{},"body":{"controllers/LoginController.html":{}}}],["login.password",{"_index":514,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.userid",{"_index":517,"title":{},"body":{"injectables/LoginService.html":{}}}],["login?.userid",{"_index":510,"title":{},"body":{"injectables/LoginService.html":{}}}],["logincontroller",{"_index":469,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["loginservice",{"_index":475,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logs/combined.log",{"_index":451,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["logs/error.log",{"_index":450,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["logs/info.log",{"_index":441,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["logs/warn.log",{"_index":444,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["make",{"_index":729,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":63,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"classes/imagesProduct.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":397,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["maxlength",{"_index":43,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["maxlength(20",{"_index":959,"title":{},"body":{"classes/user.html":{}}}],["maxlength(20)@column({type",{"_index":951,"title":{},"body":{"classes/user.html":{}}}],["maxlength(255",{"_index":60,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["mesage",{"_index":178,"title":{},"body":{"classes/ChatGateway.html":{}}}],["mesage(@messagebody",{"_index":254,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["mesage(chat",{"_index":198,"title":{},"body":{"classes/ChatGateway.html":{}}}],["message",{"_index":225,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["message.id",{"_index":548,"title":{},"body":{"injectables/MessagesService.html":{}}}],["message.model",{"_index":125,"title":{},"body":{"classes/Chat.html":{}}}],["messagebody",{"_index":212,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["messages_chat",{"_index":527,"title":{},"body":{"classes/MessagesChat.html":{}}}],["messageschat",{"_index":124,"title":{"classes/MessagesChat.html":{}},"body":{"classes/Chat.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"interfaces/Ichat.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["messagesservice",{"_index":276,"title":{"injectables/MessagesService.html":{}},"body":{"modules/ChatModule.html":{},"injectables/MessagesService.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":131,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{}}}],["miscellaneous",{"_index":864,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":906,"title":{},"body":{"index.html":{}}}],["mode",{"_index":896,"title":{},"body":{"index.html":{}}}],["model",{"_index":8,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["models/adressuser.model",{"_index":812,"title":{},"body":{"modules/UsersModule.html":{}}}],["models/category.model",{"_index":568,"title":{},"body":{"modules/ProductsModule.html":{}}}],["models/chat.model",{"_index":156,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{}}}],["models/images.model",{"_index":570,"title":{},"body":{"modules/ProductsModule.html":{}}}],["models/login.model",{"_index":493,"title":{},"body":{"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["models/message.model",{"_index":222,"title":{},"body":{"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"interfaces/Ichat.html":{},"injectables/MessagesService.html":{}}}],["models/products.model",{"_index":571,"title":{},"body":{"modules/ProductsModule.html":{}}}],["models/typeuser.model",{"_index":496,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{}}}],["models/user.model",{"_index":494,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["module",{"_index":65,"title":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":67,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":920,"title":{},"body":{"index.html":{}}}],["myformat",{"_index":433,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["mysql",{"_index":365,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":926,"title":{},"body":{"index.html":{}}}],["name",{"_index":140,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"classes/user.html":{}}}],["namespace",{"_index":228,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["need",{"_index":628,"title":{},"body":{"controllers/TokenController.html":{}}}],["nest",{"_index":886,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":930,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"interfaces/file.html":{}}}],["nestjs/config",{"_index":359,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":595,"title":{},"body":{"guards/RoleWsGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":224,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":210,"title":{},"body":{"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"interfaces/Ichat.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":215,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"dependencies.html":{}}}],["new",{"_index":325,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/file.html":{}}}],["newchat",{"_index":135,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{}}}],["newchat(@body",{"_index":162,"title":{},"body":{"controllers/ChatController.html":{}}}],["newchat(chat",{"_index":149,"title":{},"body":{"controllers/ChatController.html":{}}}],["newchat(undefined",{"_index":302,"title":{},"body":{"injectables/ChatService.html":{}}}],["newlogin",{"_index":484,"title":{},"body":{"injectables/LoginService.html":{}}}],["newlogin(login",{"_index":491,"title":{},"body":{"injectables/LoginService.html":{}}}],["newmesage(@messagebody",{"_index":273,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["newmessage",{"_index":268,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["newuser",{"_index":665,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["newuser(@body",{"_index":684,"title":{},"body":{"controllers/UserController.html":{}}}],["newuser(user",{"_index":670,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["newuser.active",{"_index":744,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.createdat",{"_index":738,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":742,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":737,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.name",{"_index":741,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.nickname",{"_index":740,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.phone",{"_index":743,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.updatedat",{"_index":739,"title":{},"body":{"injectables/UserService.html":{}}}],["newusertype",{"_index":760,"title":{},"body":{"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["newusertype(@body",{"_index":776,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["newusertype(type",{"_index":789,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["newusertype(user",{"_index":766,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["next",{"_index":604,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["nickname",{"_index":507,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"classes/user.html":{}}}],["node.js",{"_index":879,"title":{},"body":{"index.html":{}}}],["npm",{"_index":890,"title":{},"body":{"index.html":{}}}],["null",{"_index":653,"title":{},"body":{"injectables/TokenService.html":{}}}],["number",{"_index":14,"title":{},"body":{"classes/AdressUser.html":{},"classes/Product.html":{},"classes/user.html":{}}}],["observable",{"_index":592,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["onmoduleinit",{"_index":206,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"modules/UsersModule.html":{}}}],["op",{"_index":707,"title":{},"body":{"injectables/UserService.html":{}}}],["open",{"_index":908,"title":{},"body":{"index.html":{}}}],["optional",{"_index":17,"title":{},"body":{"classes/AdressUser.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["origins",{"_index":235,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["out",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":937,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":835,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":155,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"controllers/LoginController.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["param('email",{"_index":479,"title":{},"body":{"controllers/LoginController.html":{}}}],["param('password",{"_index":480,"title":{},"body":{"controllers/LoginController.html":{}}}],["param('token",{"_index":166,"title":{},"body":{"controllers/ChatController.html":{}}}],["parameters",{"_index":139,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["pass",{"_index":313,"title":{},"body":{"injectables/ChatService.html":{}}}],["password",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":227,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["pattern",{"_index":386,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["payload",{"_index":637,"title":{},"body":{"injectables/TokenService.html":{}}}],["payload.datavalues",{"_index":646,"title":{},"body":{"injectables/TokenService.html":{}}}],["phone",{"_index":508,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"classes/user.html":{}}}],["pinginterval",{"_index":231,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["pingtimeout",{"_index":233,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["please",{"_index":918,"title":{},"body":{"index.html":{}}}],["port",{"_index":368,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":151,"title":{},"body":{"controllers/ChatController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["prefix",{"_index":130,"title":{},"body":{"controllers/ChatController.html":{},"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["price",{"_index":552,"title":{},"body":{"classes/Product.html":{}}}],["primarykey",{"_index":51,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["primarykey()@column({type",{"_index":31,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["private",{"_index":239,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{}}}],["private_key",{"_index":644,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["process.env.data_base",{"_index":376,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.senha_banco_dados",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.usuario_banco_dados",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":107,"title":{"classes/Product.html":{}},"body":{"classes/Chat.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"classes/imagesProduct.html":{}}}],["productid",{"_index":108,"title":{},"body":{"classes/Chat.html":{},"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"classes/imagesProduct.html":{}}}],["production",{"_index":898,"title":{},"body":{"index.html":{}}}],["products.model",{"_index":873,"title":{},"body":{"classes/imagesProduct.html":{}}}],["products/products.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["productsmodule",{"_index":77,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":878,"title":{},"body":{"index.html":{}}}],["project",{"_index":909,"title":{},"body":{"index.html":{}}}],["promise",{"_index":490,"title":{},"body":{"injectables/LoginService.html":{},"guards/RoleWsGuard.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/ChatGateway.html":{},"injectables/ConfigInit.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["provider",{"_index":357,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":691,"title":{},"body":{"injectables/UserService.html":{}}}],["put",{"_index":673,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["r",{"_index":396,"title":{},"body":{"injectables/GeradorUuidService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{}}}],["rating",{"_index":941,"title":{},"body":{"classes/user.html":{}}}],["read",{"_index":919,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":582,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["registered",{"_index":728,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":888,"title":{},"body":{"index.html":{}}}],["req",{"_index":603,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["res",{"_index":512,"title":{},"body":{"injectables/LoginService.html":{},"guards/RoleWsGuard.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resp",{"_index":600,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["result",{"_index":62,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"classes/imagesProduct.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":64,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"classes/imagesProduct.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":163,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":141,"title":{},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{}}}],["rimraf",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":217,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"guards/RoleWsGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('user",{"_index":243,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["roles('user')@subscribemessage('createroom",{"_index":196,"title":{},"body":{"classes/ChatGateway.html":{}}}],["roles('user')@subscribemessage('message",{"_index":200,"title":{},"body":{"classes/ChatGateway.html":{}}}],["rolewsguard",{"_index":219,"title":{"guards/RoleWsGuard.html":{}},"body":{"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"interfaces/Ichat.html":{},"guards/RoleWsGuard.html":{},"coverage.html":{}}}],["room",{"_index":255,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["roomexists",{"_index":260,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["root",{"_index":374,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":893,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":428,"title":{},"body":{"injectables/LoggerService.html":{},"guards/RoleWsGuard.html":{},"injectables/TokenService.html":{},"dependencies.html":{},"interfaces/file.html":{}}}],["scalable",{"_index":883,"title":{},"body":{"index.html":{}}}],["see",{"_index":202,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["sender",{"_index":520,"title":{},"body":{"classes/MessagesChat.html":{}}}],["sequelize",{"_index":53,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"dependencies.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["sequelizemodule",{"_index":279,"title":{},"body":{"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([chat",{"_index":285,"title":{},"body":{"modules/ChatModule.html":{}}}],["sequelizemodule.forfeature([product",{"_index":572,"title":{},"body":{"modules/ProductsModule.html":{}}}],["sequelizemodule.forfeature([typeuser",{"_index":813,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["sequelizemodule.forroot",{"_index":363,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":174,"title":{},"body":{"classes/ChatGateway.html":{},"modules/CoreModule.html":{},"interfaces/Ichat.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":415,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["services/chat.service",{"_index":158,"title":{},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{}}}],["services/geradoruuid.service",{"_index":360,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/logger.service",{"_index":361,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/login.service",{"_index":476,"title":{},"body":{"controllers/LoginController.html":{},"modules/UsersModule.html":{}}}],["services/messages.service",{"_index":284,"title":{},"body":{"modules/ChatModule.html":{}}}],["services/token.service",{"_index":623,"title":{},"body":{"controllers/TokenController.html":{},"modules/UsersModule.html":{}}}],["services/user.service",{"_index":624,"title":{},"body":{"controllers/TokenController.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["services/usertype.service",{"_index":772,"title":{},"body":{"controllers/UserTypeController.html":{},"modules/UsersModule.html":{}}}],["setmetadata",{"_index":207,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["setmetadata('roles",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":884,"title":{},"body":{"index.html":{}}}],["sign",{"_index":640,"title":{},"body":{"injectables/TokenService.html":{}}}],["sign(payload",{"_index":650,"title":{},"body":{"injectables/TokenService.html":{}}}],["sign(payload.datavalues",{"_index":647,"title":{},"body":{"injectables/TokenService.html":{}}}],["signtoken",{"_index":631,"title":{},"body":{"injectables/TokenService.html":{}}}],["signtoken(payload",{"_index":635,"title":{},"body":{"injectables/TokenService.html":{}}}],["socket",{"_index":190,"title":{},"body":{"classes/ChatGateway.html":{},"modules/CoreModule.html":{},"interfaces/Ichat.html":{},"guards/RoleWsGuard.html":{}}}],["socket.getclient",{"_index":607,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["socket.getdata",{"_index":609,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["socket.io",{"_index":216,"title":{},"body":{"classes/ChatGateway.html":{},"modules/CoreModule.html":{},"interfaces/Ichat.html":{},"dependencies.html":{}}}],["sockets/chat.gateway",{"_index":283,"title":{},"body":{"modules/ChatModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdressUser.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"index.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["sponsors",{"_index":912,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.ts",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.service.ts",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.service.ts",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/@core/core.module",{"_index":280,"title":{},"body":{"modules/ChatModule.html":{},"modules/UsersModule.html":{}}}],["src/@core/core.module.ts",{"_index":356,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/@core/decorators/roles.decorator",{"_index":218,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["src/@core/decorators/roles.decorator.ts",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/@core/services/geradoruuid.service",{"_index":221,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["src/@core/services/geradoruuid.service.ts",{"_index":381,"title":{},"body":{"injectables/GeradorUuidService.html":{},"coverage.html":{}}}],["src/@core/services/geradoruuid.service.ts:6",{"_index":383,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["src/@core/services/logger.service",{"_index":310,"title":{},"body":{"injectables/ChatService.html":{},"injectables/UserTypeService.html":{}}}],["src/@core/services/logger.service.ts",{"_index":405,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["src/@core/services/logger.service.ts:17",{"_index":425,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:18",{"_index":426,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:19",{"_index":413,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:32",{"_index":416,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:52",{"_index":422,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:55",{"_index":424,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:58",{"_index":420,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app.module.ts",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/chat/chat.module.ts",{"_index":277,"title":{},"body":{"modules/ChatModule.html":{}}}],["src/chat/controllers/chat.controller.ts",{"_index":129,"title":{},"body":{"controllers/ChatController.html":{},"coverage.html":{}}}],["src/chat/controllers/chat.controller.ts:10",{"_index":152,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/controllers/chat.controller.ts:14",{"_index":145,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/controllers/chat.controller.ts:18",{"_index":148,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/controllers/chat.controller.ts:22",{"_index":138,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/guards/role.ws.guard",{"_index":220,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["src/chat/guards/role.ws.guard.ts",{"_index":575,"title":{},"body":{"guards/RoleWsGuard.html":{},"coverage.html":{}}}],["src/chat/guards/role.ws.guard.ts:14",{"_index":583,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["src/chat/guards/role.ws.guard.ts:25",{"_index":594,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["src/chat/guards/role.ws.guard.ts:28",{"_index":586,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["src/chat/guards/role.ws.guard.ts:39",{"_index":589,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["src/chat/models/chat.model.ts",{"_index":105,"title":{},"body":{"classes/Chat.html":{},"coverage.html":{}}}],["src/chat/models/chat.model.ts:27",{"_index":111,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/chat.model.ts:30",{"_index":117,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/chat.model.ts:33",{"_index":115,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/chat.model.ts:41",{"_index":116,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/chat.model.ts:49",{"_index":118,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/chat.model.ts:56",{"_index":120,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/chat.model.ts:62",{"_index":114,"title":{},"body":{"classes/Chat.html":{}}}],["src/chat/models/message.model.ts",{"_index":519,"title":{},"body":{"classes/MessagesChat.html":{},"coverage.html":{}}}],["src/chat/models/message.model.ts:31",{"_index":523,"title":{},"body":{"classes/MessagesChat.html":{}}}],["src/chat/models/message.model.ts:34",{"_index":521,"title":{},"body":{"classes/MessagesChat.html":{}}}],["src/chat/models/message.model.ts:42",{"_index":522,"title":{},"body":{"classes/MessagesChat.html":{}}}],["src/chat/models/message.model.ts:49",{"_index":525,"title":{},"body":{"classes/MessagesChat.html":{}}}],["src/chat/models/message.model.ts:58",{"_index":524,"title":{},"body":{"classes/MessagesChat.html":{}}}],["src/chat/services/chat.service.ts",{"_index":288,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/chat/services/chat.service.ts:14",{"_index":296,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/chat.service.ts:24",{"_index":300,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/chat.service.ts:43",{"_index":301,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/chat.service.ts:50",{"_index":303,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/chat.service.ts:58",{"_index":298,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/chat.service.ts:61",{"_index":305,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/chat.service.ts:64",{"_index":306,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/services/messages.service.ts",{"_index":528,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/chat/services/messages.service.ts:15",{"_index":542,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/chat/services/messages.service.ts:22",{"_index":544,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/chat/services/messages.service.ts:29",{"_index":539,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/chat/services/messages.service.ts:36",{"_index":537,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/chat/services/messages.service.ts:7",{"_index":534,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/chat/sockets/chat.gateway.ts",{"_index":173,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"coverage.html":{}}}],["src/chat/sockets/chat.gateway.ts:40",{"_index":184,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/sockets/chat.gateway.ts:49",{"_index":187,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/sockets/chat.gateway.ts:53",{"_index":197,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/sockets/chat.gateway.ts:59",{"_index":192,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/sockets/chat.gateway.ts:72",{"_index":201,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/config/config.ts",{"_index":332,"title":{},"body":{"injectables/ConfigInit.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config.ts:10",{"_index":337,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["src/config/config.ts:17",{"_index":339,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["src/main.ts",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/models/category.model.ts",{"_index":94,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/products/models/category.model.ts:23",{"_index":98,"title":{},"body":{"classes/Category.html":{}}}],["src/products/models/category.model.ts:32",{"_index":99,"title":{},"body":{"classes/Category.html":{}}}],["src/products/models/category.model.ts:41",{"_index":97,"title":{},"body":{"classes/Category.html":{}}}],["src/products/models/images.model.ts",{"_index":829,"title":{},"body":{"coverage.html":{},"classes/imagesProduct.html":{}}}],["src/products/models/images.model.ts:23",{"_index":870,"title":{},"body":{"classes/imagesProduct.html":{}}}],["src/products/models/images.model.ts:31",{"_index":869,"title":{},"body":{"classes/imagesProduct.html":{}}}],["src/products/models/images.model.ts:34",{"_index":871,"title":{},"body":{"classes/imagesProduct.html":{}}}],["src/products/models/images.model.ts:42",{"_index":872,"title":{},"body":{"classes/imagesProduct.html":{}}}],["src/products/models/products.model",{"_index":122,"title":{},"body":{"classes/Chat.html":{}}}],["src/products/models/products.model.ts",{"_index":549,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/products/models/products.model.ts:22",{"_index":556,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:31",{"_index":561,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:40",{"_index":555,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:49",{"_index":560,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:57",{"_index":558,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:60",{"_index":562,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:68",{"_index":563,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:71",{"_index":553,"title":{},"body":{"classes/Product.html":{}}}],["src/products/models/products.model.ts:79",{"_index":554,"title":{},"body":{"classes/Product.html":{}}}],["src/products/products.module.ts",{"_index":567,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/users/controllers/login.controller.ts",{"_index":470,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/users/controllers/login.controller.ts:15",{"_index":474,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/users/controllers/token.controller.ts",{"_index":618,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{}}}],["src/users/controllers/token.controller.ts:18",{"_index":622,"title":{},"body":{"controllers/TokenController.html":{}}}],["src/users/controllers/usertype.controller.ts",{"_index":756,"title":{},"body":{"controllers/UserTypeController.html":{},"coverage.html":{}}}],["src/users/controllers/usertype.controller.ts:17",{"_index":763,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controllers/usertype.controller.ts:22",{"_index":771,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controllers/usertype.controller.ts:26",{"_index":767,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controllers/usertype.controller.ts:30",{"_index":769,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controllers/usertype.controller.ts:34",{"_index":765,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controllers/usuarios.controller.ts",{"_index":662,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/controllers/usuarios.controller.ts:22",{"_index":667,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controllers/usuarios.controller.ts:26",{"_index":676,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controllers/usuarios.controller.ts:30",{"_index":671,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controllers/usuarios.controller.ts:34",{"_index":674,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controllers/usuarios.controller.ts:38",{"_index":669,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/models/adressuser.model.ts",{"_index":6,"title":{},"body":{"classes/AdressUser.html":{},"coverage.html":{}}}],["src/users/models/adressuser.model.ts:23",{"_index":32,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:32",{"_index":30,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:41",{"_index":34,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:50",{"_index":29,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:59",{"_index":35,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:68",{"_index":33,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:71",{"_index":37,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/adressuser.model.ts:79",{"_index":39,"title":{},"body":{"classes/AdressUser.html":{}}}],["src/users/models/login.model.ts",{"_index":461,"title":{},"body":{"classes/Login.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["src/users/models/login.model.ts:26",{"_index":465,"title":{},"body":{"classes/Login.html":{}}}],["src/users/models/login.model.ts:34",{"_index":464,"title":{},"body":{"classes/Login.html":{}}}],["src/users/models/login.model.ts:43",{"_index":466,"title":{},"body":{"classes/Login.html":{}}}],["src/users/models/login.model.ts:46",{"_index":467,"title":{},"body":{"classes/Login.html":{}}}],["src/users/models/login.model.ts:54",{"_index":468,"title":{},"body":{"classes/Login.html":{}}}],["src/users/models/typeuser.model.ts",{"_index":655,"title":{},"body":{"classes/TypeUser.html":{},"coverage.html":{}}}],["src/users/models/typeuser.model.ts:20",{"_index":658,"title":{},"body":{"classes/TypeUser.html":{}}}],["src/users/models/typeuser.model.ts:27",{"_index":657,"title":{},"body":{"classes/TypeUser.html":{}}}],["src/users/models/typeuser.model.ts:34",{"_index":656,"title":{},"body":{"classes/TypeUser.html":{}}}],["src/users/models/user.model",{"_index":123,"title":{},"body":{"classes/Chat.html":{},"classes/MessagesChat.html":{}}}],["src/users/models/user.model.ts",{"_index":831,"title":{},"body":{"coverage.html":{},"classes/user.html":{}}}],["src/users/models/user.model.ts:23",{"_index":946,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:32",{"_index":949,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:40",{"_index":948,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:47",{"_index":952,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:54",{"_index":945,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:62",{"_index":954,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:69",{"_index":943,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:75",{"_index":953,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:78",{"_index":955,"title":{},"body":{"classes/user.html":{}}}],["src/users/models/user.model.ts:80",{"_index":950,"title":{},"body":{"classes/user.html":{}}}],["src/users/services/login.service.ts",{"_index":482,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/users/services/login.service.ts:10",{"_index":487,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/users/services/login.service.ts:16",{"_index":489,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/users/services/login.service.ts:61",{"_index":492,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/users/services/token.service",{"_index":309,"title":{},"body":{"injectables/ChatService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{}}}],["src/users/services/token.service.ts",{"_index":629,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/services/token.service.ts:10",{"_index":636,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/token.service.ts:18",{"_index":639,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/token.service.ts:32",{"_index":634,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/user.service",{"_index":596,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["src/users/services/user.service.ts",{"_index":690,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/services/user.service.ts:135",{"_index":703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:143",{"_index":698,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:163",{"_index":704,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:18",{"_index":696,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:25",{"_index":706,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:28",{"_index":701,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:32",{"_index":700,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:61",{"_index":702,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/usertype.service",{"_index":340,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["src/users/services/usertype.service.ts",{"_index":781,"title":{},"body":{"injectables/UserTypeService.html":{},"coverage.html":{}}}],["src/users/services/usertype.service.ts:18",{"_index":788,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:21",{"_index":787,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:24",{"_index":790,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:31",{"_index":791,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:40",{"_index":786,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:8",{"_index":784,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/users.module",{"_index":281,"title":{},"body":{"modules/ChatModule.html":{}}}],["src/users/users.module.ts",{"_index":805,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.module.ts:50",{"_index":806,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":894,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":897,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":899,"title":{},"body":{"index.html":{}}}],["started",{"_index":877,"title":{"index.html":{}},"body":{}}],["starter",{"_index":887,"title":{},"body":{"index.html":{}}}],["state",{"_index":15,"title":{},"body":{"classes/AdressUser.html":{}}}],["statements",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":379,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["status",{"_index":326,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["stay",{"_index":922,"title":{},"body":{"index.html":{}}}],["street",{"_index":16,"title":{},"body":{"classes/AdressUser.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"controllers/TokenController.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"interfaces/file.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["subscribemessage",{"_index":213,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["subscribemessage('connect",{"_index":191,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["subscribemessage('createroom",{"_index":244,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["subscribemessage('message",{"_index":253,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["subscribemessage('new_mesage",{"_index":272,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["support",{"_index":913,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":933,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":613,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["synchronize",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":52,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["tablename",{"_index":56,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/MessagesChat.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":902,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":905,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":904,"title":{},"body":{"index.html":{}}}],["tests",{"_index":901,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":911,"title":{},"body":{"index.html":{}}}],["this._chat.create",{"_index":262,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["this._chat.findone",{"_index":261,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["this._chatmodel.create(chat",{"_index":321,"title":{},"body":{"injectables/ChatService.html":{}}}],["this._chatmodel.destroy(id",{"_index":322,"title":{},"body":{"injectables/ChatService.html":{}}}],["this._chatmodel.findall",{"_index":315,"title":{},"body":{"injectables/ChatService.html":{}}}],["this._chatmodel.findone",{"_index":320,"title":{},"body":{"injectables/ChatService.html":{}}}],["this._chatservice.deletechat(id",{"_index":171,"title":{},"body":{"controllers/ChatController.html":{}}}],["this._chatservice.getallchats",{"_index":167,"title":{},"body":{"controllers/ChatController.html":{}}}],["this._chatservice.getchat(id",{"_index":169,"title":{},"body":{"controllers/ChatController.html":{}}}],["this._chatservice.newchat(chat",{"_index":164,"title":{},"body":{"controllers/ChatController.html":{}}}],["this._errorlogger",{"_index":446,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._errorlogger.log('error",{"_index":460,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._geradoruuid.uuidv4",{"_index":265,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["this._infologger",{"_index":439,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._infologger.log('info",{"_index":458,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._logger.infolog(`new",{"_index":795,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._logger.infolog(`user",{"_index":797,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._logger.infolog(result",{"_index":801,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._loggercreate('error",{"_index":447,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._loggercreate('info",{"_index":440,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._loggercreate('warn",{"_index":443,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._loggerservice.errorlog",{"_index":316,"title":{},"body":{"injectables/ChatService.html":{}}}],["this._login.create(login",{"_index":518,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["this._login.destroy",{"_index":747,"title":{},"body":{"injectables/UserService.html":{}}}],["this._login.findone",{"_index":502,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._loginservice.getlogin(email",{"_index":481,"title":{},"body":{"controllers/LoginController.html":{}}}],["this._messages.create",{"_index":269,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["this._messages.findone",{"_index":267,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["this._messageschat.destroy",{"_index":546,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._messageschat.findall",{"_index":545,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._messageschat.update(message",{"_index":547,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._reflector.get('roles",{"_index":610,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["this._tokenservice.decodetoken(token",{"_index":601,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["this._tokenservice.signtoken",{"_index":516,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["this._tokenservice.verifytoken(token",{"_index":323,"title":{},"body":{"injectables/ChatService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{}}}],["this._type.findall",{"_index":754,"title":{},"body":{"injectables/UserService.html":{}}}],["this._type.findbypk(user.typeid",{"_index":712,"title":{},"body":{"injectables/UserService.html":{}}}],["this._usermodel.create(type",{"_index":794,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._usermodel.findall",{"_index":792,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._usermodel.findbypk(id",{"_index":793,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._usermodel.update(user",{"_index":796,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._userservice.get(verify.userid",{"_index":627,"title":{},"body":{"controllers/TokenController.html":{}}}],["this._userservice.usermodel.findone(decoded.userid",{"_index":602,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["this._usertypesservice.getall",{"_index":347,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this._usertypesservice.newusertype(element",{"_index":351,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this._warnlogger",{"_index":442,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._warnlogger.log('warn",{"_index":459,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this.adminrole(data.token",{"_index":616,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["this.get(id",{"_index":798,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this.getall",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["this.init",{"_index":345,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this.tokenverify(token",{"_index":314,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.types",{"_index":346,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this.types.length",{"_index":348,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this.unauthorizederro",{"_index":319,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.usermodel.create(user",{"_index":736,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.destroy",{"_index":748,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findall",{"_index":710,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbypk(id",{"_index":711,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":725,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.update(user",{"_index":745,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole(data.token",{"_index":615,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["this.userservice.deleteuser(param",{"_index":689,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(param.id",{"_index":780,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["this.userservice.get(param",{"_index":683,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.get(param.id",{"_index":775,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["this.userservice.getall",{"_index":681,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["this.userservice.newuser(user",{"_index":685,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.newusertype(user",{"_index":777,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["this.userservice.updateuser(user",{"_index":687,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["this.userservice.userandtype",{"_index":680,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":324,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":436,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":96,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["token",{"_index":143,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["token.service",{"_index":497,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["tokencontroller",{"_index":617,"title":{"controllers/TokenController.html":{}},"body":{"controllers/TokenController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["tokenservice",{"_index":293,"title":{"injectables/TokenService.html":{}},"body":{"injectables/ChatService.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenverify",{"_index":289,"title":{},"body":{"injectables/ChatService.html":{}}}],["tokenverify(token",{"_index":304,"title":{},"body":{"injectables/ChatService.html":{}}}],["touch",{"_index":923,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":448,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transport.push",{"_index":452,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transports",{"_index":229,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transports.file",{"_index":449,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["true",{"_index":113,"title":{},"body":{"classes/Chat.html":{},"modules/CoreModule.html":{},"guards/RoleWsGuard.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":929,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"injectables/MessagesService.html":{},"classes/Product.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"coverage.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["type.active",{"_index":723,"title":{},"body":{"injectables/UserService.html":{}}}],["type.description",{"_index":722,"title":{},"body":{"injectables/UserService.html":{}}}],["type.id",{"_index":721,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["type_users",{"_index":659,"title":{},"body":{"classes/TypeUser.html":{}}}],["typeid",{"_index":942,"title":{},"body":{"classes/user.html":{}}}],["typeof",{"_index":241,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{},"injectables/LoginService.html":{},"injectables/MessagesService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["types",{"_index":333,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/UserService.html":{}}}],["types/bcrypt",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["types/jsonwebtoken",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"dependencies.html":{},"classes/imagesProduct.html":{},"index.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["typeuser",{"_index":495,"title":{"classes/TypeUser.html":{}},"body":{"injectables/LoginService.html":{},"classes/TypeUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["typeuser.model",{"_index":957,"title":{},"body":{"classes/user.html":{}}}],["unauthorized",{"_index":317,"title":{},"body":{"injectables/ChatService.html":{}}}],["unauthorizederro",{"_index":290,"title":{},"body":{"injectables/ChatService.html":{}}}],["undefined",{"_index":25,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"classes/imagesProduct.html":{},"classes/user.html":{}}}],["unit",{"_index":900,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":505,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":666,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["updateuser(@body",{"_index":686,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(user",{"_index":672,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["updateusertype",{"_index":761,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["updateusertype(@body",{"_index":778,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["updateusertype(user",{"_index":768,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["used",{"_index":732,"title":{},"body":{"injectables/UserService.html":{}}}],["useguards",{"_index":208,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["useguards(rolewsguard",{"_index":237,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["user",{"_index":18,"title":{"classes/user.html":{}},"body":{"classes/AdressUser.html":{},"classes/Chat.html":{},"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/user.html":{},"miscellaneous/variables.html":{}}}],["user(@param('id",{"_index":682,"title":{},"body":{"controllers/UserController.html":{}}}],["user(param",{"_index":675,"title":{},"body":{"controllers/UserController.html":{}}}],["user.active",{"_index":720,"title":{},"body":{"injectables/UserService.html":{}}}],["user.createdat",{"_index":714,"title":{},"body":{"injectables/UserService.html":{}}}],["user.destroy",{"_index":800,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["user.email",{"_index":718,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":713,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["user.model",{"_index":55,"title":{},"body":{"classes/AdressUser.html":{},"classes/Login.html":{},"interfaces/login.html":{}}}],["user.name",{"_index":717,"title":{},"body":{"injectables/UserService.html":{}}}],["user.nickname",{"_index":716,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":733,"title":{},"body":{"injectables/UserService.html":{}}}],["user.phone",{"_index":719,"title":{},"body":{"injectables/UserService.html":{}}}],["user.updatedat",{"_index":715,"title":{},"body":{"injectables/UserService.html":{}}}],["user?.destroy",{"_index":799,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["user?.id",{"_index":746,"title":{},"body":{"injectables/UserService.html":{}}}],["user_type",{"_index":509,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"classes/user.html":{}}}],["user_types",{"_index":757,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["userandtype",{"_index":694,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":661,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userid",{"_index":19,"title":{},"body":{"classes/AdressUser.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/Product.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["usermodel",{"_index":692,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":370,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["userprimaryid",{"_index":109,"title":{},"body":{"classes/Chat.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{}}}],["userprimaryid.slice(0",{"_index":256,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["userrole",{"_index":578,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["userrole(token",{"_index":593,"title":{},"body":{"guards/RoleWsGuard.html":{}}}],["users",{"_index":752,"title":{},"body":{"injectables/UserService.html":{}}}],["users/models/user.model",{"_index":564,"title":{},"body":{"classes/Product.html":{}}}],["users/users.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["usersecondaryid",{"_index":110,"title":{},"body":{"classes/Chat.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"interfaces/Ichat.html":{}}}],["userservice",{"_index":580,"title":{"injectables/UserService.html":{}},"body":{"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersmodule",{"_index":78,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usertype",{"_index":762,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["usertype(@param",{"_index":774,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["usertype(param",{"_index":770,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["usertypecontroller",{"_index":755,"title":{"controllers/UserTypeController.html":{}},"body":{"controllers/UserTypeController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usertypeservice",{"_index":336,"title":{"injectables/UserTypeService.html":{}},"body":{"injectables/ConfigInit.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":263,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["uuid's",{"_index":731,"title":{},"body":{"injectables/UserService.html":{}}}],["uuid4",{"_index":387,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["uuidexists",{"_index":264,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{},"injectables/UserService.html":{}}}],["uuidv4",{"_index":382,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["v",{"_index":399,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["v.tostring(16",{"_index":403,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["validator",{"_index":45,"title":{},"body":{"classes/AdressUser.html":{},"classes/Category.html":{},"classes/Chat.html":{},"classes/Login.html":{},"classes/MessagesChat.html":{},"classes/Product.html":{},"classes/TypeUser.html":{},"dependencies.html":{},"classes/imagesProduct.html":{},"interfaces/login.html":{},"classes/user.html":{}}}],["value",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":962,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":598,"title":{},"body":{"guards/RoleWsGuard.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{}}}],["verify(token",{"_index":651,"title":{},"body":{"injectables/TokenService.html":{}}}],["verifytoken",{"_index":632,"title":{},"body":{"injectables/TokenService.html":{}}}],["verifytoken(token",{"_index":638,"title":{},"body":{"injectables/TokenService.html":{}}}],["void",{"_index":194,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/LoggerService.html":{},"injectables/MessagesService.html":{},"injectables/TokenService.html":{}}}],["warn",{"_index":445,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["warnlog",{"_index":412,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warnlog(message",{"_index":423,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["watch",{"_index":895,"title":{},"body":{"index.html":{}}}],["website",{"_index":927,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":230,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["websocketgateway",{"_index":214,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["websocketgateway(3030",{"_index":226,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["websocketserver",{"_index":186,"title":{},"body":{"classes/ChatGateway.html":{},"interfaces/Ichat.html":{}}}],["winston",{"_index":431,"title":{},"body":{"injectables/LoggerService.html":{},"dependencies.html":{},"interfaces/file.html":{}}}],["wrong",{"_index":515,"title":{},"body":{"injectables/LoginService.html":{}}}],["x",{"_index":400,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xxxx",{"_index":389,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xxxxxxxx",{"_index":388,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xxxxxxxxxxxx'.replace",{"_index":392,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xy]/g",{"_index":393,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["yes",{"_index":418,"title":{},"body":{"injectables/LoggerService.html":{}}}],["you'd",{"_index":916,"title":{},"body":{"index.html":{}}}],["yxxx",{"_index":391,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["zoom",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdressUser.html":{"url":"classes/AdressUser.html","title":"class - AdressUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdressUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/adressUser.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                id\n                            \n                            \n                                number\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/adressUser.model.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength, IsBase64 } from 'class-validator';\nimport {\n  Model,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  IsFloat,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { user } from './user.model';\n\n@Table({\n  tableName: 'adress_user',\n})\nexport class AdressUser extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  country: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  state: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  city: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  street: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  number: string;\n\n  @BelongsTo(() => user)\n  user?: user;\n\n  @IsNotEmpty()\n  @ForeignKey(() => user)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nChatModule\n\nChatModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ChatModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ChatModule } from './chat/chat.module';\nimport { ProductsModule } from './products/products.module';\nimport { CoreModule } from './@core/core.module';\nimport { UsersModule } from './users/users.module';\nimport { DynamicModule, Module } from '@nestjs/common';\n\nconst IMPORTS = [UsersModule, ProductsModule, ChatModule];\n@Module({\n  imports: [...IMPORTS],\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/models/category.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/category.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/category.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/category.model.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport {\n  Model,\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  IsFloat,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\n\n@Table({\n  tableName: 'category_products',\n})\nexport class Category extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chat.html":{"url":"classes/Chat.html","title":"class - Chat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/models/chat.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                lastMessageId\n                            \n                            \n                                    Optional\n                                product\n                            \n                            \n                                productId\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                userPrimaryId\n                            \n                            \n                                userSecondaryId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastMessageId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPrimaryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSecondaryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/chat.model.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport {\n  Model,\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  IsFloat,\n  PrimaryKey,\n  Table,\n  HasOne,\n} from 'sequelize-typescript';\nimport { Product } from 'src/products/models/products.model';\nimport { user } from 'src/users/models/user.model';\nimport { MessagesChat } from './message.model';\n\n@Table({\n  tableName: 'chats',\n})\nexport class Chat extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id;\n\n  @BelongsTo(() => user)\n  user?: user;\n\n  @BelongsTo(() => Product)\n  product?: Product;\n\n  @IsNotEmpty()\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  productId: string;\n\n  @IsNotEmpty()\n  @ForeignKey(() => user)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userPrimaryId: string;\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userSecondaryId: string;\n\n  @Column({\n    type: DataType.UUID,\n    allowNull: true,\n  })\n  lastMessageId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChatController.html":{"url":"controllers/ChatController.html","title":"controller - ChatController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChatController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/controllers/chat.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chat\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteChat\n                            \n                            \n                                getAllChats\n                            \n                            \n                                getChat\n                            \n                            \n                                newChat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteChat\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteChat(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/chat/controllers/chat.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllChats\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllChats(id, token)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/:token')\n                \n            \n\n            \n                \n                    Defined in src/chat/controllers/chat.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChat\n                        \n                        \n                    \n                \n            \n            \n                \ngetChat(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/chat/controllers/chat.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newChat\n                        \n                        \n                    \n                \n            \n            \n                \nnewChat(chat: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/chat/controllers/chat.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chat\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { Chat } from '../models/chat.model';\nimport { ChatService } from '../services/chat.service';\n\n@Controller('chat')\nexport class ChatController {\n  constructor(private _chatService: ChatService) {}\n\n  @Post()\n  newChat(@Body() chat: { chat: Chat; token: string }) {\n    return this._chatService.newChat(chat);\n  }\n  @Get(':id/:token')\n  getAllChats(@Param('id') id, @Param('token') token) {\n    return this._chatService.getAllChats({ id, token });\n  }\n  @Get(':id')\n  getChat(@Param('id') id) {\n    return this._chatService.getChat(id);\n  }\n  @Delete(':id')\n  deleteChat(@Param('id') id) {\n    return this._chatService.deleteChat(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChatGateway.html":{"url":"classes/ChatGateway.html","title":"class - ChatGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChatGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/sockets/chat.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connection\n                            \n                            \n                                createRoom\n                            \n                            \n                                    Async\n                                mesage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_geradorUUID: GeradorUuidService, _chat, _messages)\n                    \n                \n                        \n                            \n                                Defined in src/chat/sockets/chat.gateway.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _geradorUUID\n                                                  \n                                                        \n                                                                        GeradorUuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _chat\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messages\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Server\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @WebSocketServer()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/sockets/chat.gateway.ts:49\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connection\n                        \n                        \n                    \n                \n            \n            \n                \nconnection(data: string, client: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('connect')\n                \n            \n\n            \n                \n                    Defined in src/chat/sockets/chat.gateway.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createRoom\n                        \n                        \n                    \n                \n            \n            \n                \ncreateRoom(data: string, client: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('user')@SubscribeMessage('createRoom')\n                \n            \n\n            \n                \n                    Defined in src/chat/sockets/chat.gateway.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            mesage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mesage(chat: Ichat, client: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('user')@SubscribeMessage('message')\n                \n            \n\n            \n                \n                    Defined in src/chat/sockets/chat.gateway.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    chat\n                                    \n                                                Ichat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        see interface in {\n\n                                    \n                                \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  OnModuleInit,\n  SetMetadata,\n  UseGuards,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport {\n  ConnectedSocket,\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server, Socket } from 'socket.io';\nimport { Roles } from 'src/@core/decorators/roles.decorator';\nimport { RoleWsGuard } from 'src/chat/guards/role.ws.guard';\nimport { GeradorUuidService } from 'src/@core/services/geradoruuid.service';\nimport { Chat } from '../models/chat.model';\nimport { MessagesChat } from '../models/message.model';\nimport { IoAdapter } from '@nestjs/platform-socket.io';\n\nexport interface Ichat {\n  userPrimaryId;\n  userSecondaryId;\n  productId;\n  message;\n}\n\n@WebSocketGateway(3030, {\n  path: '/chat',\n  namespace: 'chat',\n  transports: 'websocket',\n  pingInterval: 1000,\n  pingTimeout: 5000,\n  origins: 'http://localhost:4200',\n})\n@UseGuards(RoleWsGuard)\nexport class ChatGateway {\n  constructor(\n    @Inject(GeradorUuidService)\n    private _geradorUUID: GeradorUuidService,\n    @InjectModel(Chat) private _chat: typeof Chat,\n    @InjectModel(MessagesChat) private _messages: typeof MessagesChat,\n  ) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  @Roles('user')\n  @SubscribeMessage('createRoom')\n  createRoom(@MessageBody() data: string, @ConnectedSocket() client: Socket) {\n    // client.join(data);\n    console.log(data, client);\n  }\n\n  @SubscribeMessage('connect')\n  connection(@MessageBody() data: string, @ConnectedSocket() client: Socket) {\n    // client.join(data);\n    console.log('porra do caralho');\n    console.log('data');\n    console.log(data, client);\n  }\n\n  /**\n   * @param  {Ichat} chat\n   * see interface in {@link Ichat}\n   */\n  @Roles('user')\n  @SubscribeMessage('message')\n  async mesage(@MessageBody() chat: Ichat, @ConnectedSocket() client: Socket) {\n    const { userPrimaryId, productId, userSecondaryId, message } = chat;\n    const room = `${userPrimaryId.slice(0, 18)}${userSecondaryId.slice(\n      18,\n      36,\n    )}`;\n\n    const roomExists = this._chat.findOne({\n      where: {\n        id: room,\n      },\n    });\n    if (!roomExists) {\n      const newChat = this._chat.create({\n        id: room,\n        productId: productId,\n        userPrimaryId: userPrimaryId,\n        userSecondaryId: userSecondaryId,\n      });\n    }\n    let uuid;\n    let uuidExists;\n    do {\n      uuid = this._geradorUUID.uuidv4();\n      uuidExists = await this._messages.findOne({\n        where: {\n          id: uuid,\n        },\n      });\n    } while (uuidExists);\n    const newMessage = await this._messages.create({\n      id: uuid,\n      chatId: room,\n      userPrimaryId: userPrimaryId,\n      userSecondaryId: userSecondaryId,\n      message: message,\n    });\n    client.emit('respMessage', newMessage);\n  }\n  // @SubscribeMessage('new_mesage')\n  // newMesage(@MessageBody() data: string): string {\n  //   return data;\n  // }\n  // @SubscribeMessage('new_mesage')\n  // newMesage(@MessageBody() data: string): string {\n  //   return data;\n  // }\n  // @SubscribeMessage('new_mesage')\n  // newMesage(@MessageBody() data: string): string {\n  //   return data;\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatModule.html":{"url":"modules/ChatModule.html","title":"module - ChatModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\n\nChatService\n\nChatService\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nChatModule -->\n\nMessagesService->ChatModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chat/chat.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChatService\n                        \n                        \n                            MessagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChatController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ChatService } from './services/chat.service';\nimport { ChatController } from './controllers/chat.controller';\nimport { forwardRef, Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { CoreModule } from 'src/@core/core.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { RoleWsGuard } from './guards/role.ws.guard';\nimport { Chat } from './models/chat.model';\nimport { MessagesChat } from './models/message.model';\nimport { ChatGateway } from './sockets/chat.gateway';\nimport { MessagesService } from './services/messages.service';\n\n@Module({\n  imports: [\n    forwardRef(() => UsersModule),\n    SequelizeModule.forFeature([Chat, MessagesChat]),\n  ],\n  controllers: [ChatController],\n  providers: [\n    MessagesService,\n    ChatService,\n    ChatGateway,\n    RoleWsGuard,\n    Chat,\n    MessagesChat,\n  ],\n})\nexport class ChatModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/services/chat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteChat\n                            \n                            \n                                    Async\n                                getAllChats\n                            \n                            \n                                    Async\n                                getChat\n                            \n                            \n                                    Async\n                                newChat\n                            \n                            \n                                    Async\n                                tokenVerify\n                            \n                            \n                                unAuthorizedErro\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_chatModel, _tokenService: TokenService, _loggerService: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/chat/services/chat.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _chatModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loggerService\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteChat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteChat(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/chat.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllChats\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllChats(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/chat.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getChat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChat(id)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/chat.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newChat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newChat(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/chat.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            tokenVerify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tokenVerify(token)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/chat.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unAuthorizedErro\n                        \n                        \n                    \n                \n            \n            \n                \nunAuthorizedErro()\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/chat.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TokenService } from 'src/users/services/token.service';\nimport { Chat } from '../models/chat.model';\nimport { LoggerService } from 'src/@core/services/logger.service';\n\n@Injectable()\nexport class ChatService {\n  constructor(\n    @InjectModel(Chat)\n    private _chatModel: typeof Chat,\n    @Inject(forwardRef(() => TokenService))\n    private _tokenService: TokenService,\n    @Inject(forwardRef(() => LoggerService))\n    private _loggerService: LoggerService,\n  ) {}\n\n  async getAllChats({ id, token }) {\n    console.log('oi');\n    const pass = await this.tokenVerify(token);\n    if (pass) {\n      return await this._chatModel.findAll({\n        where: {\n          userPrimaryId: id,\n          or: {\n            userSecondaryId: id,\n          },\n        },\n      });\n    } else {\n      this._loggerService.errorLog(\n        `UNAUTHORIZED getAllChats, token ${token} invalid!`,\n      );\n      this.unAuthorizedErro();\n    }\n  }\n  async getChat(id) {\n    return await this._chatModel.findOne({\n      where: {\n        id: id,\n      },\n    });\n  }\n  async newChat({ chat, token }) {\n    const pass = await this.tokenVerify(token);\n    if (pass) {\n      return await this._chatModel.create(chat);\n    } else {\n      this.unAuthorizedErro();\n    }\n  }\n  async deleteChat(id: any) {\n    return await this._chatModel.destroy(id);\n  }\n  async tokenVerify(token) {\n    return await this._tokenService.verifyToken(token);\n  }\n  unAuthorizedErro() {\n    throw new HttpException(\n      {\n        status: HttpStatus.UNAUTHORIZED,\n        error: 'UNAUTHORIZED you have to login again!',\n      },\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigInit.html":{"url":"injectables/ConfigInit.html","title":"injectable - ConfigInit","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigInit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userTypesService: UserTypeService)\n                    \n                \n                        \n                            \n                                Defined in src/config/config.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userTypesService\n                                                  \n                                                        \n                                                                        UserTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/config/config.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UserTypeService } from 'src/users/services/userType.service';\n\nconst INIT_TYPES = [\n  { description: 'Admin', active: 1 },\n  { description: 'User', active: 1 },\n];\n@Injectable()\nexport class ConfigInit {\n  types: any[];\n  constructor(\n    @Inject(forwardRef(() => UserTypeService))\n    private _userTypesService: UserTypeService,\n  ) {\n    this.init();\n  }\n  async init() {\n    this.types = await this._userTypesService.getAll();\n    if (this.types.length == 0) {\n      INIT_TYPES.forEach((element) => {\n        this._userTypesService.newUserType(element);\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nChatModule\n\nChatModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nChatModule->CoreModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nCoreModule -->\n\nProductsModule->CoreModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nCoreModule -->\n\nUsersModule->CoreModule\n\n\n\n\n\nChatModule \n\nChatModule \n\nChatModule  -->\n\nCoreModule->ChatModule \n\n\n\n\n\nGeradorUuidService \n\nGeradorUuidService \n\nGeradorUuidService  -->\n\nCoreModule->GeradorUuidService \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCoreModule->LoggerService \n\n\n\n\n\nProductsModule \n\nProductsModule \n\nProductsModule  -->\n\nCoreModule->ProductsModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nCoreModule->UsersModule \n\n\n\n\n\nGeradorUuidService\n\nGeradorUuidService\n\nCoreModule -->\n\nGeradorUuidService->CoreModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCoreModule -->\n\nLoggerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/@core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeradorUuidService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChatModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChatModule\n                        \n                        \n                            GeradorUuidService\n                        \n                        \n                            LoggerService\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, forwardRef, Module, Provider } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Server, Socket } from 'socket.io';\nimport { GeradorUuidService } from './services/geradoruuid.service';\nimport { LoggerService } from './services/logger.service';\n\nconst PROVIDER: Provider[] = [LoggerService, GeradorUuidService];\n\nconst IMPORTS = [\n  Server,\n  ConfigModule.forRoot(),\n  SequelizeModule.forRoot({\n    dialect: 'mysql',\n    host: 'localhost',\n    port: 3306,\n    username: process.env.USUARIO_BANCO_DADOS,\n    password:\n      process.env.SENHA_BANCO_DADOS == 'root'\n        ? ''\n        : process.env.SENHA_BANCO_DADOS,\n    database: process.env.DATA_BASE,\n    autoLoadModels: true,\n    synchronize: true,\n  }),\n];\n@Module({\n  imports: [...IMPORTS],\n  controllers: [],\n  providers: [...PROVIDER],\n  exports: [...IMPORTS, ...PROVIDER],\n})\nexport class CoreModule {\n  // static forRoot(): DynamicModule {\n  //   return {\n  //     module: CoreModule,\n  //     imports: [...IMPORTS],\n  //     providers: [...PROVIDER],\n  //   };\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeradorUuidService.html":{"url":"injectables/GeradorUuidService.html","title":"injectable - GeradorUuidService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeradorUuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/services/geradoruuid.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uuidv4\n                        \n                        \n                    \n                \n            \n            \n                \nuuidv4()\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/geradoruuid.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GeradorUuidService {\n  //create ID's with pattern UUID4\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        const r = (Math.random() * 16) | 0,\n          v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ichat.html":{"url":"interfaces/Ichat.html","title":"interface - Ichat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ichat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/sockets/chat.gateway.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        productId\n                                \n                                \n                                        userPrimaryId\n                                \n                                \n                                        userSecondaryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPrimaryId\n                                    \n                                \n                                \n                                    \n                                        userPrimaryId:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userSecondaryId\n                                    \n                                \n                                \n                                    \n                                        userSecondaryId:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  OnModuleInit,\n  SetMetadata,\n  UseGuards,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport {\n  ConnectedSocket,\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server, Socket } from 'socket.io';\nimport { Roles } from 'src/@core/decorators/roles.decorator';\nimport { RoleWsGuard } from 'src/chat/guards/role.ws.guard';\nimport { GeradorUuidService } from 'src/@core/services/geradoruuid.service';\nimport { Chat } from '../models/chat.model';\nimport { MessagesChat } from '../models/message.model';\nimport { IoAdapter } from '@nestjs/platform-socket.io';\n\nexport interface Ichat {\n  userPrimaryId;\n  userSecondaryId;\n  productId;\n  message;\n}\n\n@WebSocketGateway(3030, {\n  path: '/chat',\n  namespace: 'chat',\n  transports: 'websocket',\n  pingInterval: 1000,\n  pingTimeout: 5000,\n  origins: 'http://localhost:4200',\n})\n@UseGuards(RoleWsGuard)\nexport class ChatGateway {\n  constructor(\n    @Inject(GeradorUuidService)\n    private _geradorUUID: GeradorUuidService,\n    @InjectModel(Chat) private _chat: typeof Chat,\n    @InjectModel(MessagesChat) private _messages: typeof MessagesChat,\n  ) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  @Roles('user')\n  @SubscribeMessage('createRoom')\n  createRoom(@MessageBody() data: string, @ConnectedSocket() client: Socket) {\n    // client.join(data);\n    console.log(data, client);\n  }\n\n  @SubscribeMessage('connect')\n  connection(@MessageBody() data: string, @ConnectedSocket() client: Socket) {\n    // client.join(data);\n    console.log('porra do caralho');\n    console.log('data');\n    console.log(data, client);\n  }\n\n  /**\n   * @param  {Ichat} chat\n   * see interface in {@link Ichat}\n   */\n  @Roles('user')\n  @SubscribeMessage('message')\n  async mesage(@MessageBody() chat: Ichat, @ConnectedSocket() client: Socket) {\n    const { userPrimaryId, productId, userSecondaryId, message } = chat;\n    const room = `${userPrimaryId.slice(0, 18)}${userSecondaryId.slice(\n      18,\n      36,\n    )}`;\n\n    const roomExists = this._chat.findOne({\n      where: {\n        id: room,\n      },\n    });\n    if (!roomExists) {\n      const newChat = this._chat.create({\n        id: room,\n        productId: productId,\n        userPrimaryId: userPrimaryId,\n        userSecondaryId: userSecondaryId,\n      });\n    }\n    let uuid;\n    let uuidExists;\n    do {\n      uuid = this._geradorUUID.uuidv4();\n      uuidExists = await this._messages.findOne({\n        where: {\n          id: uuid,\n        },\n      });\n    } while (uuidExists);\n    const newMessage = await this._messages.create({\n      id: uuid,\n      chatId: room,\n      userPrimaryId: userPrimaryId,\n      userSecondaryId: userSecondaryId,\n      message: message,\n    });\n    client.emit('respMessage', newMessage);\n  }\n  // @SubscribeMessage('new_mesage')\n  // newMesage(@MessageBody() data: string): string {\n  //   return data;\n  // }\n  // @SubscribeMessage('new_mesage')\n  // newMesage(@MessageBody() data: string): string {\n  //   return data;\n  // }\n  // @SubscribeMessage('new_mesage')\n  // newMesage(@MessageBody() data: string): string {\n  //   return data;\n  // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorLogger\n                            \n                            \n                                    Private\n                                _infoLogger\n                            \n                            \n                                    Private\n                                _warnLogger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loggerCreate\n                            \n                            \n                                errorLog\n                            \n                            \n                                infoLog\n                            \n                            \n                                warnLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/@core/services/logger.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _loggerCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _loggerCreate(level: string, service: string, file?: file)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    service\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                file\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorLog\n                        \n                        \n                    \n                \n            \n            \n                \nerrorLog(message)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            infoLog\n                        \n                        \n                    \n                \n            \n            \n                \ninfoLog(message)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warnLog\n                        \n                        \n                    \n                \n            \n            \n                \nwarnLog(message)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errorLogger\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/@core/services/logger.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoLogger\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/@core/services/logger.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _warnLogger\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/@core/services/logger.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { combineLatest } from 'rxjs';\nimport { createLogger, format, transports } from 'winston';\n\nexport interface file {\n  filename;\n  level;\n}\nconst myFormat = format.printf(({ level, message, label, timestamp }) => {\n  return `${timestamp} [${label}] ${level}: ${message}`;\n});\nconst timestamp = format.timestamp;\nconst label = format.label;\n\n@Injectable()\nexport class LoggerService {\n  private _infoLogger;\n  private _warnLogger;\n  private _errorLogger;\n\n  constructor() {\n    this._infoLogger = this._loggerCreate('info', 'user-service', {\n      filename: 'logs/info.log',\n      level: 'info',\n    });\n    this._warnLogger = this._loggerCreate('warn', 'user-service', {\n      filename: 'logs/warn.log',\n      level: 'warn',\n    });\n    this._errorLogger = this._loggerCreate('error', 'user-service');\n  }\n  private _loggerCreate(level: string, service: string, file?: file) {\n    const transport = [\n      new transports.File({ filename: 'logs/error.log', level: 'error' }),\n      new transports.File({ filename: 'logs/combined.log' }),\n    ];\n    if (file)\n      transport.push(\n        new transports.File({ filename: file.filename, level: file.level }),\n      );\n    return createLogger({\n      level: level,\n      format: format.combine(\n        label({ label: 'app-user' }),\n        timestamp(),\n        myFormat,\n      ),\n      defaultMeta: { service: service },\n      transports: transport,\n    });\n  }\n  infoLog(message) {\n    this._infoLogger.log('info', message);\n  }\n  warnLog(message) {\n    this._warnLogger.log('warn', message);\n  }\n  errorLog(message) {\n    this._errorLogger.log('error', message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/login.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport { Model } from 'sequelize';\nimport {\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { user } from './user.model';\n\nexport interface login {\n  email;\n  password;\n}\n\n@Table\nexport class Login extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  password: string;\n\n  @BelongsTo(() => user)\n  user?: user;\n\n  @IsNotEmpty()\n  @ForeignKey(() => user)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controllers/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':email/:password')\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/login.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n} from '@nestjs/common';\nimport { LoginService } from '../services/login.service';\n\n@Controller('auth')\nexport class LoginController {\n  constructor(private _loginService: LoginService) {}\n\n  @Get(':email/:password')\n  async login(\n    @Param('email') email: string,\n    @Param('password') password: string,\n  ) {\n    return await this._loginService.getLogin(email, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getLogin\n                            \n                            \n                                    Async\n                                newLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_tokenService: TokenService, _login)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/login.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogin(email, password)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/login.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newLogin(login)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/login.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Login } from '../models/login.model';\nimport { user } from '../models/user.model';\nimport { TypeUser } from '../models/typeUser.model';\nimport { TokenService } from './token.service';\nimport { hash, compare } from 'bcrypt';\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    private _tokenService: TokenService,\n    @InjectModel(Login) private _login: typeof Login,\n  ) {}\n\n  async getLogin(email, password): Promise {\n    const login = await this._login.findOne({\n      attributes: ['userId', 'createdAt', 'updatedAt', 'password'],\n      where: { email: email },\n      include: [\n        {\n          model: user,\n          as: 'user',\n          attributes: ['nickName', 'name', 'email', 'phone', 'active'],\n          include: [\n            {\n              model: TypeUser,\n              as: 'user_type',\n              attributes: ['id', 'description', 'active'],\n            },\n          ],\n        },\n      ],\n    });\n    if (!login?.userId) {\n      throw new HttpException(\n        {\n          status: HttpStatus.NOT_FOUND,\n          error: 'Have no user with this email!',\n        },\n        HttpStatus.NOT_FOUND,\n      );\n    }\n    const res = await compare(password, login.password);\n    login.password = undefined;\n\n    if (!res) {\n      throw new HttpException(\n        {\n          status: HttpStatus.UNAUTHORIZED,\n          error: 'Password is wrong!',\n        },\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n\n    const token = this._tokenService.signToken({ userId: login.userId });\n    return { login, token };\n  }\n\n  async newLogin(login) {\n    return await this._login.create(login);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessagesChat.html":{"url":"classes/MessagesChat.html","title":"class - MessagesChat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessagesChat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/models/message.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chat\n                            \n                            \n                                chatId\n                            \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                sender\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            chat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Chat\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/message.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chatId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/message.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/message.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/message.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/chat/models/message.model.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  isNotEmpty,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport {\n  Model,\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  IsFloat,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { user } from 'src/users/models/user.model';\nimport { Chat } from './chat.model';\n\n@Table({\n  tableName: 'messages_chat',\n})\nexport class MessagesChat extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id;\n\n  @BelongsTo(() => Chat)\n  chat?: Chat;\n\n  @IsNotEmpty()\n  @ForeignKey(() => Chat)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  chatId: string;\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  sender: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  message: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/services/messages.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alterMessage\n                            \n                            \n                                deleteMessage\n                            \n                            \n                                getAllMessages\n                            \n                            \n                                getMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_MessagesChat, _tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/chat/services/messages.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _MessagesChat\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alterMessage\n                        \n                        \n                    \n                \n            \n            \n                \nalterMessage(message)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/messages.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMessage(idMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/messages.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idMessage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMessages(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/messages.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages(idMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/services/messages.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idMessage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TokenService } from 'src/users/services/token.service';\nimport { MessagesChat } from '../models/message.model';\n\n@Injectable()\nexport class MessagesService {\n  constructor(\n    @InjectModel(MessagesChat)\n    private _MessagesChat: typeof MessagesChat,\n    @Inject(forwardRef(() => TokenService))\n    private _tokenService: TokenService,\n  ) {}\n\n  getAllMessages({ chatId, token }) {\n    this._MessagesChat.findAll({\n      where: {\n        chatId: chatId,\n      },\n    });\n  }\n  getMessages(idMessage) {\n    this._MessagesChat.findAll({\n      where: {\n        id: idMessage,\n      },\n    });\n  }\n  deleteMessage(idMessage) {\n    this._MessagesChat.destroy({\n      where: {\n        id: idMessage,\n      },\n    });\n  }\n  alterMessage(message) {\n    this._MessagesChat.update(message, {\n      where: {\n        id: message.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/models/products.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                categoryId\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                location\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsFloat()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/products.model.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport {\n  Model,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  IsFloat,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { user } from '../../users/models/user.model';\nimport { Category } from './category.model';\n\n@Table\nexport class Product extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  title;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  description: string;\n\n  @IsNotEmpty()\n  @IsFloat\n  @MaxLength(255)\n  @Column({\n    type: DataType.FLOAT,\n    allowNull: false,\n  })\n  price: number;\n\n  @IsNotEmpty()\n  @IsString()\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  location;\n\n  @BelongsTo(() => user)\n  user?: user;\n\n  @IsNotEmpty()\n  @ForeignKey(() => user)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userId: string;\n\n  @BelongsTo(() => Category)\n  category?: Category;\n\n  @IsNotEmpty()\n  @ForeignKey(() => Category)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  categoryId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Category } from './models/category.model';\nimport { imagesProduct } from './models/images.model';\nimport { Product } from './models/products.model';\n\n@Module({\n  imports: [SequelizeModule.forFeature([Product, Category, imagesProduct])],\n  controllers: [],\n  providers: [],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleWsGuard.html":{"url":"guards/RoleWsGuard.html","title":"guard - RoleWsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleWsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/chat/guards/role.ws.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminRole\n                            \n                            \n                                canActivate\n                            \n                            \n                                    Async\n                                userRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _tokenService: TokenService, _reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/chat/guards/role.ws.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminRole(token)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/guards/role.ws.guard.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/guards/role.ws.guard.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            userRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userRole(token)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/guards/role.ws.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Observable } from 'rxjs';\nimport { TokenService } from 'src/users/services/token.service';\nimport { UserService } from 'src/users/services/user.service';\n@Injectable()\nexport class RoleWsGuard implements CanActivate {\n  constructor(\n    @Inject(forwardRef(() => UserService))\n    private _userService: UserService,\n    @Inject(forwardRef(() => TokenService))\n    private _tokenService: TokenService,\n    private _reflector: Reflector,\n  ) {}\n  /**\n   * @param  {} token\n   */\n  async userRole(token): Promise {\n    return (await this._tokenService.verifyToken(token)) && token;\n  }\n  async adminRole(token): Promise {\n    const verify = await this._tokenService.verifyToken(token);\n    let decoded;\n    let resp = false;\n    if (verify) {\n      decoded = this._tokenService.decodeToken(token);\n      resp =\n        (await this._userService.userModel.findOne(decoded.userId)) && verify;\n    }\n    return resp;\n  }\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    // const [req, res, next] = context.getArgs();\n    // const cli = socket.getClient();\n    const socket = context.switchToWs();\n    const data = socket.getData();\n    const roles = this._reflector.get('roles', context.getClass());\n    console.log(roles);\n    if (!roles) {\n      return true;\n    }\n    switch (roles) {\n      case 'user':\n        return this.userRole(data.token);\n      case 'admin':\n        return this.adminRole(data.token);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TokenController.html":{"url":"controllers/TokenController.html","title":"controller - TokenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TokenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controllers/token.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                token\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkToken(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':token')\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/token.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n} from '@nestjs/common';\nimport { TokenService } from '../services/token.service';\nimport { UserService } from '../services/user.service';\n\n@Controller('token')\nexport class TokenController {\n  constructor(\n    private _userService: UserService,\n    private _tokenService: TokenService,\n  ) {}\n  @Get(':token')\n  async checkToken(@Param('token') token: string) {\n    const verify = await this._tokenService.verifyToken(token);\n    if (verify) {\n      if ('userId' in verify) {\n        const r = await this._userService.get(verify.userId);\n        return r;\n      }\n    }\n    throw new HttpException(\n      {\n        status: HttpStatus.UNAUTHORIZED,\n        error: 'User need to login again!',\n      },\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeToken\n                            \n                            \n                                signToken\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/token.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signToken\n                        \n                        \n                    \n                \n            \n            \n                \nsignToken(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/token.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/token.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { sign, decode, verify } from 'jsonwebtoken';\nimport { login } from '../models/login.model';\nimport * as fs from 'fs';\nimport { of } from 'rxjs';\n\nconst PRIVATE_KEY = fs.readFileSync('src/config/keys.key').toString();\n@Injectable()\nexport class TokenService {\n  signToken(payload) {\n    if (payload.dataValues) {\n      return sign(payload.dataValues, PRIVATE_KEY, { expiresIn: '1H' });\n    } else {\n      return sign(payload, PRIVATE_KEY, { expiresIn: '1H' });\n    }\n  }\n\n  async verifyToken(token) {\n    const result = await ((): Promise => {\n      let r;\n      verify(token, PRIVATE_KEY, (err, res) => {\n        if (err) {\n          r = null;\n        } else {\n          r = res;\n        }\n      });\n      return r;\n    })();\n    return result;\n  }\n  decodeToken(token): any | void {\n    return decode(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeUser.html":{"url":"classes/TypeUser.html","title":"class - TypeUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/typeUser.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/typeUser.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/typeUser.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/typeUser.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {\n  Column,\n  Table,\n  Model,\n  DataType,\n  AutoIncrement,\n  PrimaryKey,\n} from 'sequelize-typescript';\n\n@Table({\n  tableName: 'type_users',\n})\nexport class TypeUser extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id: string;\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  description: string;\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.BOOLEAN,\n    allowNull: false,\n  })\n  active: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controllers/usuarios.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                deleteUser\n                            \n                            \n                                newUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allUsers\n                        \n                        \n                    \n                \n            \n            \n                \nallUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usuarios.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usuarios.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newUser\n                        \n                        \n                    \n                \n            \n            \n                \nnewUser(user: user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usuarios.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                user\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(user: user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usuarios.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                user\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usuarios.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { user } from '../models/user.model';\nimport { TypeUser } from '../models/typeUser.model';\nimport { UserService as UserService } from '../services/user.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  // @Get('types')\n  // allUsersAndTypes(): Promise {\n  //   return this.userService.userAndType();\n  // }\n  @Get()\n  allUsers(): Promise {\n    return this.userService.getAll();\n  }\n  @Get(':id')\n  user(@Param('id') param): Promise {\n    return this.userService.get(param);\n  }\n  @Post()\n  newUser(@Body() user: user) {\n    return this.userService.newUser(user);\n  }\n  @Put()\n  updateUser(@Body() user: user): Promise {\n    return this.userService.updateUser(user);\n  }\n  @Delete(':id')\n  deleteUser(@Param('id') param) {\n    return this.userService.deleteUser(param);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                newUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                userAndType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_geradorUUID: GeradorUuidService, _tokenService: TokenService, _type, _login, userModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _geradorUUID\n                                                  \n                                                        \n                                                                        GeradorUuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _type\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newUser(user: user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                user\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            userAndType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userAndType()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectModel(user)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/services/user.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\n// import {Op} from 'sequelize'\nimport { Login } from '../models/login.model';\nimport { user } from '../models/user.model';\nimport { TypeUser } from '../models/typeUser.model';\nimport { GeradorUuidService } from '../../@core/services/geradoruuid.service';\nimport { TokenService } from './token.service';\nimport { hash } from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(forwardRef(() => GeradorUuidService))\n    private _geradorUUID: GeradorUuidService,\n    private _tokenService: TokenService,\n    @InjectModel(TypeUser) private _type: typeof TypeUser,\n    @InjectModel(Login) private _login: typeof Login,\n    @InjectModel(user) public userModel: typeof user,\n  ) {}\n\n  async getAll(): Promise {\n    return await this.userModel.findAll();\n  }\n\n  async get(id: string): Promise {\n    const user = await this.userModel.findByPk(id);\n    const type = await this._type.findByPk(user.typeId, {\n      attributes: ['id', 'description', 'active'],\n    });\n    const token = this._tokenService.signToken({ userId: user.id });\n    const res = {\n      login: {\n        userId: user.id,\n        createdAt: user.createdAt,\n        updatedAt: user.updatedAt,\n        user: {\n          nickName: user.nickName,\n          name: user.name,\n          email: user.email,\n          phone: user.phone,\n          active: user.active,\n          user_type: {\n            id: type.id,\n            description: type.description,\n            active: type.active,\n          },\n        },\n      },\n      token,\n    };\n    return res;\n  }\n\n  async newUser(user: user): Promise {\n    let uuid = this._geradorUUID.uuidv4();\n\n    const exists = await this.userModel.findOne({\n      where: {\n        email: user.email,\n      },\n    });\n    if (exists) {\n      throw new HttpException(\n        {\n          status: HttpStatus.CONFLICT,\n          error: 'User has already been registered',\n        },\n        HttpStatus.CONFLICT,\n      );\n    }\n\n    let uuidExists = await this.userModel.findOne({\n      where: {\n        id: uuid,\n      },\n    });\n    //MAKE BETTER, create new table with all uuid's used\n    while (uuidExists) {\n      uuid = this._geradorUUID.uuidv4();\n      uuidExists = await this.userModel.findOne({\n        where: {\n          id: uuid,\n        },\n      });\n    }\n\n    user.id = uuid;\n\n    user.password = await hash(user.password, 10);\n\n    const newUser = await this.userModel.create(user);\n    const login = {\n      id: uuid,\n      email: user.email,\n      password: user.password,\n      userId: newUser.id,\n    };\n\n    const type = await this._type.findByPk(user.typeId, {\n      attributes: ['id', 'description', 'active'],\n    });\n\n    await this._login.create(login);\n\n    const token = this._tokenService.signToken({ userId: newUser.id });\n    return {\n      login: {\n        userId: newUser.id,\n        createdAt: newUser.createdAt,\n        updatedAt: newUser.updatedAt,\n        user: {\n          nickName: newUser.nickName,\n          name: newUser.name,\n          email: newUser.email,\n          phone: newUser.phone,\n          active: newUser.active,\n          user_type: {\n            id: type.id,\n            description: type.description,\n            active: type.active,\n          },\n        },\n      },\n      token,\n    };\n  }\n\n  async updateUser(user): Promise {\n    return this.userModel.update(user, {\n      where: {\n        id: user.id,\n      },\n    });\n  }\n\n  async deleteUser(id) {\n    const user = await this.userModel.findByPk(id);\n    return user?.id\n      ? (async () => {\n          await this._login.destroy({\n            where: {\n              userId: id,\n            },\n          });\n          await this.userModel.destroy({\n            where: {\n              id: id,\n            },\n          });\n          return { message: `Deleted user id: ${user.id}`, cod: 410 };\n        })()\n      : `Not user with id '${id}'`;\n  }\n\n  //\n  async userAndType(): Promise {\n    const users: user[] = await this.getAll();\n    const types: TypeUser[] = await this._type.findAll();\n    return { users, types };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserTypeController.html":{"url":"controllers/UserTypeController.html","title":"controller - UserTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controllers/usertype.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user_types\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allUserTypes\n                            \n                            \n                                deleteUserType\n                            \n                            \n                                newUserType\n                            \n                            \n                                updateUserType\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allUserTypes\n                        \n                        \n                    \n                \n            \n            \n                \nallUserTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usertype.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUserType\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUserType(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usertype.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newUserType\n                        \n                        \n                    \n                \n            \n            \n                \nnewUserType(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usertype.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserType\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserType(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usertype.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userType\n                        \n                        \n                    \n                \n            \n            \n                \nuserType(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/usertype.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { TypeUser } from '../models/typeUser.model';\nimport { UserTypeService } from '../services/userType.service';\n\n@Controller('user_types')\nexport class UserTypeController {\n  constructor(private userService: UserTypeService) {}\n  @Get()\n  allUserTypes(): Promise {\n    console.log('porra');\n    return this.userService.getAll();\n  }\n  @Get(':id')\n  userType(@Param() param): Promise {\n    return this.userService.get(param.id);\n  }\n  @Post()\n  newUserType(@Body() user) {\n    return this.userService.newUserType(user);\n  }\n  @Put()\n  updateUserType(@Body() user): Promise {\n    return this.userService.updateUser(user);\n  }\n  @Delete(':id')\n  deleteUserType(@Param() param) {\n    return this.userService.deleteUser(param.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserTypeService.html":{"url":"injectables/UserTypeService.html","title":"injectable - UserTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/userType.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                newUserType\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LoggerService, _geradorUUID: GeradorUuidService, _userModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/userType.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _geradorUUID\n                                                  \n                                                        \n                                                                        GeradorUuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newUserType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newUserType(type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TypeUser } from '../models/typeUser.model';\nimport { GeradorUuidService } from '../../@core/services/geradoruuid.service';\nimport { LoggerService } from 'src/@core/services/logger.service';\n\n@Injectable()\nexport class UserTypeService {\n  constructor(\n    @Inject(forwardRef(() => LoggerService))\n    private _logger: LoggerService,\n    @Inject(forwardRef(() => GeradorUuidService))\n    private _geradorUUID: GeradorUuidService,\n    @InjectModel(TypeUser)\n    private _userModel: typeof TypeUser,\n  ) {}\n\n  async getAll(): Promise {\n    return await this._userModel.findAll();\n  }\n  async get(id): Promise {\n    return await this._userModel.findByPk(id);\n  }\n  async newUserType(type) {\n    const uuid = this._geradorUUID.uuidv4();\n    type.id = uuid;\n    const user_type = await this._userModel.create(type);\n    this._logger.infoLog(`New user type id ${type.id}`);\n    return user_type;\n  }\n  async updateUser(user): Promise {\n    const result = this._userModel.update(user, {\n      where: {\n        id: user.id,\n      },\n    });\n    this._logger.infoLog(`User type id ${user.id} was deleted!`);\n    return result;\n  }\n  async deleteUser(id) {\n    const user: TypeUser = await this.get(id);\n    const result = user?.destroy()\n      ? (() => {\n          user.destroy();\n          return { message: `Deleted user type id: ${user.id}`, cod: 410 };\n        })()\n      : `Not user type with id '${id}'`;\n    this._logger.infoLog(result);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nChatModule\n\nChatModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nChatModule->UsersModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nUsersModule -->\n\nProductsModule->UsersModule\n\n\n\nUsersModule -->\n\nUsersModule->UsersModule\n\n\n\n\n\nGeradorUuidService\n\nGeradorUuidService\n\nUsersModule -->\n\nGeradorUuidService->UsersModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nUsersModule -->\n\nLoggerService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeradorUuidService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserTypeController\n                        \n                        \n                            LoginController\n                        \n                        \n                            TokenController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChatModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  DynamicModule,\n  forwardRef,\n  Logger,\n  Module,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UserController } from './controllers/usuarios.controller';\nimport { TypeUser } from './models/typeUser.model';\nimport { user } from './models/user.model';\nimport { UserTypeService } from './services/userType.service';\nimport { UserService } from './services/user.service';\nimport { UserTypeController } from './controllers/usertype.controller';\nimport { Login } from './models/login.model';\nimport { LoginService } from './services/login.service';\nimport { LoginController } from './controllers/login.controller';\nimport { TokenService } from './services/token.service';\nimport { TokenController } from './controllers/token.controller';\nimport { AdressUser } from './models/adressUser.model';\nimport { CoreModule } from 'src/@core/core.module';\n\nconst IMPORTS = [\n  CoreModule,\n  SequelizeModule.forFeature([TypeUser, user, Login, AdressUser]),\n];\nconst PROVIDER = [\n  UserService,\n  TokenService,\n  LoginService,\n  UserTypeService,\n  TypeUser,\n  Login,\n  user,\n];\nconst EXPORTS = [...PROVIDER, ...IMPORTS];\n\n@Module({\n  imports: [...IMPORTS],\n  controllers: [\n    UserController,\n    UserTypeController,\n    LoginController,\n    TokenController,\n  ],\n  providers: [...PROVIDER],\n  exports: [...EXPORTS],\n})\nexport class UsersModule {\n  static forRoot(): DynamicModule {\n    return {\n      module: UsersModule,\n      imports: [...IMPORTS],\n      providers: [...PROVIDER],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/core.module.ts\n            \n            variable\n            IMPORTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/core.module.ts\n            \n            variable\n            PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/services/geradoruuid.service.ts\n            \n            injectable\n            GeradorUuidService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            interface\n            file\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            variable\n            label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            variable\n            myFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            variable\n            timestamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            IMPORTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chat/controllers/chat.controller.ts\n            \n            controller\n            ChatController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/chat/guards/role.ws.guard.ts\n            \n            guard\n            RoleWsGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/chat/models/chat.model.ts\n            \n            class\n            Chat\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/chat/models/message.model.ts\n            \n            class\n            MessagesChat\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/chat/services/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/chat/services/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/chat/sockets/chat.gateway.ts\n            \n            class\n            ChatGateway\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/chat/sockets/chat.gateway.ts\n            \n            interface\n            Ichat\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/config.ts\n            \n            injectable\n            ConfigInit\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/config.ts\n            \n            variable\n            INIT_TYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/models/category.model.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/models/images.model.ts\n            \n            class\n            imagesProduct\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/products/models/products.model.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/controllers/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/controllers/token.controller.ts\n            \n            controller\n            TokenController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/controllers/usertype.controller.ts\n            \n            controller\n            UserTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/controllers/usuarios.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/adressUser.model.ts\n            \n            class\n            AdressUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/models/login.model.ts\n            \n            class\n            Login\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/login.model.ts\n            \n            interface\n            login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/models/typeUser.model.ts\n            \n            class\n            TypeUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/models/user.model.ts\n            \n            class\n            user\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/services/token.service.ts\n            \n            injectable\n            TokenService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/services/token.service.ts\n            \n            variable\n            PRIVATE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/services/userType.service.ts\n            \n            injectable\n            UserTypeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            EXPORTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            IMPORTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/platform-socket.io : ^7.6.18\n        \n            @nestjs/sequelize : ^0.2.0\n        \n            @nestjs/websockets : ^7.6.18\n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/jsonwebtoken : ^8.5.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            crypto-js : ^4.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mysql2 : ^2.2.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            sequelize : ^6.6.2\n        \n            sequelize-typescript : ^2.1.0\n        \n            socket.io : ^4.1.2\n        \n            winston : ^3.3.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/file.html":{"url":"interfaces/file.html","title":"interface - file","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  file\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { combineLatest } from 'rxjs';\nimport { createLogger, format, transports } from 'winston';\n\nexport interface file {\n  filename;\n  level;\n}\nconst myFormat = format.printf(({ level, message, label, timestamp }) => {\n  return `${timestamp} [${label}] ${level}: ${message}`;\n});\nconst timestamp = format.timestamp;\nconst label = format.label;\n\n@Injectable()\nexport class LoggerService {\n  private _infoLogger;\n  private _warnLogger;\n  private _errorLogger;\n\n  constructor() {\n    this._infoLogger = this._loggerCreate('info', 'user-service', {\n      filename: 'logs/info.log',\n      level: 'info',\n    });\n    this._warnLogger = this._loggerCreate('warn', 'user-service', {\n      filename: 'logs/warn.log',\n      level: 'warn',\n    });\n    this._errorLogger = this._loggerCreate('error', 'user-service');\n  }\n  private _loggerCreate(level: string, service: string, file?: file) {\n    const transport = [\n      new transports.File({ filename: 'logs/error.log', level: 'error' }),\n      new transports.File({ filename: 'logs/combined.log' }),\n    ];\n    if (file)\n      transport.push(\n        new transports.File({ filename: file.filename, level: file.level }),\n      );\n    return createLogger({\n      level: level,\n      format: format.combine(\n        label({ label: 'app-user' }),\n        timestamp(),\n        myFormat,\n      ),\n      defaultMeta: { service: service },\n      transports: transport,\n    });\n  }\n  infoLog(message) {\n    this._infoLogger.log('info', message);\n  }\n  warnLog(message) {\n    this._warnLogger.log('warn', message);\n  }\n  errorLog(message) {\n    this._errorLogger.log('error', message);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/imagesProduct.html":{"url":"classes/imagesProduct.html","title":"class - imagesProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  imagesProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/models/images.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blob\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                product\n                            \n                            \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blob\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsBase64()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/images.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/images.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/images.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength, IsBase64 } from 'class-validator';\nimport {\n  Model,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  IsFloat,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { Product } from './products.model';\n\n@Table({\n  tableName: 'images_product',\n})\nexport class imagesProduct extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id;\n\n  @IsNotEmpty()\n  @IsBase64()\n  @Column({\n    type: DataType.BLOB,\n    allowNull: false,\n  })\n  blob;\n\n  @BelongsTo(() => Product)\n  product?: Product;\n\n  @IsNotEmpty()\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  productId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/login.html":{"url":"interfaces/login.html","title":"interface - login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/login.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport { Model } from 'sequelize';\nimport {\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { user } from './user.model';\n\nexport interface login {\n  email;\n  password;\n}\n\n@Table\nexport class Login extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  password: string;\n\n  @BelongsTo(() => user)\n  user?: user;\n\n  @IsNotEmpty()\n  @ForeignKey(() => user)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nChatModule\n\nChatModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nChatModule->UsersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nChatModule->CoreModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nUsersModule -->\n\nProductsModule->UsersModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\nCoreModule -->\n\nProductsModule->CoreModule\n\n\n\nUsersModule -->\n\nUsersModule->UsersModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\nCoreModule -->\n\nUsersModule->CoreModule\n\n\n\n\n\nChatService\n\nChatService\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nChatModule -->\n\nMessagesService->ChatModule\n\n\n\n\n\nChatModule \n\nChatModule \n\nChatModule  -->\n\nCoreModule->ChatModule \n\n\n\n\n\nGeradorUuidService \n\nGeradorUuidService \n\nGeradorUuidService  -->\n\nCoreModule->GeradorUuidService \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCoreModule->LoggerService \n\n\n\n\n\nProductsModule \n\nProductsModule \n\nProductsModule  -->\n\nCoreModule->ProductsModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nCoreModule->UsersModule \n\n\n\n\n\nGeradorUuidService\n\nGeradorUuidService\n\nUsersModule -->\n\nGeradorUuidService->UsersModule\n\n\n\nCoreModule -->\n\nGeradorUuidService->CoreModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nUsersModule -->\n\nLoggerService->UsersModule\n\n\n\nCoreModule -->\n\nLoggerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/user.html":{"url":"classes/user.html","title":"class - user","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  user\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                nickName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                    Optional\n                                rating\n                            \n                            \n                                typeId\n                            \n                            \n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(20)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: undefined, allowNull: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeUser\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail, IsString, MaxLength } from 'class-validator';\nimport {\n  Table,\n  Model,\n  Column,\n  DataType,\n  HasOne,\n  ForeignKey,\n  BelongsToMany,\n  BelongsTo,\n  PrimaryKey,\n  AutoIncrement,\n} from 'sequelize-typescript';\nimport { TypeUser } from './typeUser.model';\n\n@Table\nexport class user extends Model {\n  @PrimaryKey\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(60),\n    allowNull: false,\n  })\n  nickName: string;\n\n  @IsNotEmpty()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(),\n    allowNull: false,\n  })\n  name: string;\n\n  @MaxLength(20)\n  @Column({\n    type: DataType.STRING(20),\n    allowNull: false,\n  })\n  phone: string;\n\n  @IsEmail()\n  @Column({\n    type: DataType.STRING(100),\n    allowNull: false,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @ForeignKey(() => TypeUser)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  typeId: string;\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.BOOLEAN,\n    allowNull: false,\n  })\n  active: boolean;\n\n  @Column({\n    type: DataType.FLOAT,\n    allowNull: true,\n  })\n  rating?: number;\n\n  @BelongsTo(() => TypeUser)\n  user_type?: TypeUser;\n\n  password?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EXPORTS   (src/.../users.module.ts)\n                        \n                        \n                            IMPORTS   (src/.../app.module.ts)\n                        \n                        \n                            IMPORTS   (src/.../core.module.ts)\n                        \n                        \n                            IMPORTS   (src/.../users.module.ts)\n                        \n                        \n                            INIT_TYPES   (src/.../config.ts)\n                        \n                        \n                            label   (src/.../logger.service.ts)\n                        \n                        \n                            myFormat   (src/.../logger.service.ts)\n                        \n                        \n                            PRIVATE_KEY   (src/.../token.service.ts)\n                        \n                        \n                            PROVIDER   (src/.../core.module.ts)\n                        \n                        \n                            PROVIDER   (src/.../users.module.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            timestamp   (src/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EXPORTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...PROVIDER, ...IMPORTS]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IMPORTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CoreModule,\n  SequelizeModule.forFeature([TypeUser, user, Login, AdressUser]),\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  UserService,\n  TokenService,\n  LoginService,\n  UserTypeService,\n  TypeUser,\n  Login,\n  user,\n]\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IMPORTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [UsersModule, ProductsModule, ChatModule]\n                        \n                    \n\n\n            \n        \n\n    src/@core/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IMPORTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  Server,\n  ConfigModule.forRoot(),\n  SequelizeModule.forRoot({\n    dialect: 'mysql',\n    host: 'localhost',\n    port: 3306,\n    username: process.env.USUARIO_BANCO_DADOS,\n    password:\n      process.env.SENHA_BANCO_DADOS == 'root'\n        ? ''\n        : process.env.SENHA_BANCO_DADOS,\n    database: process.env.DATA_BASE,\n    autoLoadModels: true,\n    synchronize: true,\n  }),\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Provider[]\n\n                        \n                    \n                    \n                        \n                            Default value : [LoggerService, GeradorUuidService]\n                        \n                    \n\n\n            \n        \n\n    src/config/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            INIT_TYPES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { description: 'Admin', active: 1 },\n  { description: 'User', active: 1 },\n]\n                        \n                    \n\n\n            \n        \n\n    src/@core/services/logger.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : format.label\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : format.printf(({ level, message, label, timestamp }) => {\n  return `${timestamp} [${label}] ${level}: ${message}`;\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : format.timestamp\n                        \n                    \n\n\n            \n        \n\n    src/users/services/token.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PRIVATE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fs.readFileSync('src/config/keys.key').toString()\n                        \n                    \n\n\n            \n        \n\n    src/@core/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
