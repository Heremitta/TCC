var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.319,1,1.846]],["body/modules/AppModule.html",[0,2.237,1,3.592,2,1.761,3,1.761,4,2.215,5,2.215,6,1.761,7,2.836,8,2.836,9,2.942,10,2.942,11,2.71,12,0.039,13,3.098,14,2.836,15,2.215,16,2.215,17,0.402,18,0.34,19,0.282,20,3.573,21,2.519,22,0.568,23,3.573,24,3.573,25,0.609,26,3.573,27,1.429,28,0.402,29,0.12,30,1.291,31,0.023,32,0.03,33,0.023]],["title/injectables/ConfigInit.html",[34,0.507,35,1.639]],["body/injectables/ConfigInit.html",[12,0.039,17,0.398,18,0.337,19,0.279,22,0.512,25,0.602,28,0.398,29,0.119,30,1.278,31,0.023,32,0.029,33,0.023,34,0.774,35,2.501,36,1.414,37,2.499,38,0.398,39,1.211,40,2.226,41,5.3,42,3.535,43,2.226,44,0.873,45,3.535,46,1.155,47,1.044,48,0.76,49,0.942,50,3.535,51,3.535,52,0.942,53,3.535,54,1.567,55,2.499,56,2.91,57,2.91,58,2.91,59,1.946,60,3.535,61,3.535,62,2.91,63,1.567,64,3.535,65,3.535,66,2.499,67,3.535,68,3.535]],["title/modules/CoreModule.html",[0,1.319,11,1.467]],["body/modules/CoreModule.html",[0,2.26,2,1.403,3,1.403,4,1.765,5,1.765,6,1.403,7,2.793,8,2.438,11,2.755,12,0.04,14,2.438,15,1.765,16,1.765,17,0.321,18,0.271,19,0.224,21,2.808,22,0.547,25,0.485,27,1.138,28,0.321,29,0.096,31,0.018,32,0.025,33,0.018,39,0.759,44,0.547,52,0.759,54,1.743,69,2.344,70,2.344,71,2.344,72,2.306,73,2.012,74,3.933,75,4.506,76,2.847,77,1.765,78,3.435,79,2.847,80,2.344,81,2.344,82,1.403,83,2.847,84,2.847,85,2.344,86,2.344,87,2.344,88,2.344,89,2.344,90,2.344,91,2.344,92,2.344,93,2.344,94,2.344,95,1.138,96,3.238,97,2.344,98,2.344,99,2.344,100,2.344,101,3.238,102,2.344,103,2.847,104,0.683]],["title/injectables/GeradorUuidService.html",[34,0.507,105,1.319]],["body/injectables/GeradorUuidService.html",[12,0.04,17,0.394,18,0.333,19,0.276,22,0.394,25,0.596,28,0.394,29,0.118,30,1.806,31,0.023,32,0.029,33,0.023,34,0.769,36,1.399,38,0.394,39,1.202,44,0.867,52,0.932,66,2.473,104,1.082,105,2,106,2.88,107,5.279,108,3.498,109,3.498,110,2.88,111,3.498,112,3.498,113,3.498,114,3.498,115,3.498,116,3.498,117,3.498,118,3.498,119,3.498,120,2.88,121,4.513,122,3.498,123,3.532,124,3.498,125,3.498,126,3.498,127,3.498,128,3.498,129,3.498,130,3.498]],["title/injectables/LoggerService.html",[34,0.507,72,1.191]],["body/injectables/LoggerService.html",[12,0.04,17,0.258,18,0.218,19,0.387,22,0.45,25,0.39,28,0.379,29,0.077,30,1.443,31,0.015,32,0.022,33,0.015,34,0.574,36,0.916,38,0.258,39,0.897,44,0.999,46,1.439,47,1.3,48,0.493,49,1.173,52,1.173,54,1.77,72,1.346,104,0.808,131,1.42,132,1.659,133,3.049,134,3.288,135,3.288,136,3.288,137,3.367,138,3.367,139,3.367,140,3.367,141,3.367,142,2.29,143,1.761,144,3.862,145,2.29,146,3.585,147,2.29,148,2.772,149,2.29,150,2.583,151,3.288,152,2.772,153,2.29,154,2.772,155,2.29,156,2.29,157,2.29,158,1.885,159,1.42,160,1.885,161,1.619,162,1.015,163,3.288,164,2.087,165,1.619,166,2.908,167,2.729,168,1.619,169,1.619,170,1.885,171,1.885,172,1.885,173,1.885,174,1.885,175,1.885,176,1.885,177,1.885,178,1.885,179,1.885,180,2.772,181,1.659,182,2.772,183,1.885,184,1.885,185,1.885,186,1.885,187,1.885,188,1.885,189,1.885,190,1.885,191,1.885,192,1.885,193,1.619,194,0.828,195,1.885,196,1.885,197,1.885,198,1.885,199,1.885]],["title/controllers/LoginController.html",[200,1.076,201,1.846]],["body/controllers/LoginController.html",[12,0.039,17,0.407,18,0.344,19,0.285,22,0.519,25,0.615,27,1.444,28,0.407,29,0.121,31,0.023,32,0.03,33,0.023,38,0.407,39,1.228,40,2.248,44,0.694,46,1.18,47,1.067,48,0.777,49,0.962,52,0.962,59,1.988,63,1.601,95,1.842,104,0.866,143,2.137,200,1.305,201,2.856,202,2.974,203,2.239,204,3.612,205,1.665,206,3.612,207,1.601,208,4.607,209,3.612,210,1.78,211,2.239,212,2.239,213,2.239,214,1.78,215,2.974,216,3.612,217,3.612,218,3.612,219,3.612,220,3.612,221,3.612]],["title/classes/LoginModel.html",[29,0.1,222,1.319]],["body/classes/LoginModel.html",[12,0.039,17,0.301,18,0.255,19,0.211,22,0.532,28,0.424,29,0.126,31,0.017,32,0.024,33,0.017,38,0.301,44,0.957,48,1.166,49,1.002,95,1.89,132,1.854,143,2.067,162,1.184,194,1.574,205,0.965,207,2.208,210,2.329,222,1.667,223,1.656,224,1.888,225,2.332,226,2.7,227,2.146,228,3.078,229,2.671,230,2.93,231,3.362,232,3.362,233,2.671,234,1.888,235,2.671,236,2.199,237,2.671,238,1.801,239,2.199,240,2.671,241,2.199,242,2.671,243,2.659,244,2.93,245,2.659,246,1.888,247,1.47,248,1.854,249,1.656,250,2.659,251,3.089,252,1.656,253,2.659,254,2.332,255,1.854,256,1.316,257,2.199,258,2.332,259,2.659,260,1.888]],["title/injectables/LoginService.html",[34,0.507,214,1.467]],["body/injectables/LoginService.html",[12,0.04,17,0.294,18,0.249,19,0.206,22,0.594,25,0.446,28,0.294,29,0.088,30,1.339,31,0.017,32,0.024,33,0.017,34,0.631,36,1.046,38,0.294,39,0.987,40,2.275,44,0.827,46,1.407,47,1.271,48,0.562,49,1.147,52,0.987,63,1.908,77,1.621,82,1.288,95,1.721,104,0.889,133,2.04,181,1.826,194,0.945,205,1.556,210,2.121,211,2.668,212,1.621,214,1.826,222,1.642,230,1.621,238,0.945,261,2.153,262,4.305,263,3.706,264,2.153,265,1.721,266,3.544,267,2.615,268,2.153,269,2.615,270,2.615,271,1.826,272,3.706,273,2.615,274,1.848,275,1.621,276,1.621,277,0.854,278,1.288,279,2.153,280,2.615,281,1.848,282,1.848,283,2.153,284,2.615,285,2.615,286,2.615,287,3.706,288,2.615,289,2.615,290,2.615,291,2.615,292,2.615,293,2.153,294,2.615,295,2.297,296,2.615,297,2.615,298,2.615,299,1.848,300,2.615,301,2.615,302,2.615,303,2.153,304,2.615,305,2.615,306,2.153,307,2.297,308,2.615,309,2.153]],["title/controllers/TokenController.html",[200,1.076,310,1.846]],["body/controllers/TokenController.html",[12,0.039,17,0.379,18,0.321,19,0.265,22,0.552,25,0.574,27,1.347,28,0.379,29,0.113,31,0.022,32,0.028,33,0.022,38,0.379,39,1.173,40,2.174,44,0.647,46,1.1,47,0.994,48,0.724,49,0.897,52,0.897,59,1.854,63,1.951,104,0.808,123,3.113,143,1.761,181,1.659,200,1.217,203,2.088,205,1.217,207,1.492,211,2.73,212,2.088,213,2.088,265,1.347,282,2.38,295,2.088,303,2.772,306,2.772,307,2.73,310,2.73,311,2.772,312,4.403,313,3.368,314,4.403,315,3.368,316,2.772,317,1.347,318,2.38,319,3.368,320,3.368,321,3.368,322,4.403,323,3.368,324,3.368,325,3.368,326,3.368,327,2.772,328,3.368,329,3.368]],["title/injectables/TokenService.html",[34,0.507,265,1.191]],["body/injectables/TokenService.html",[12,0.04,17,0.317,18,0.268,19,0.222,22,0.572,25,0.48,28,0.317,29,0.095,30,1.619,31,0.033,32,0.025,33,0.018,34,0.665,36,1.126,38,0.317,39,1.04,40,1.985,44,0.929,46,1.464,47,1.323,49,1.193,52,1.193,54,1.247,63,1.247,104,1.26,123,3.419,151,3.213,159,1.745,205,1.41,265,1.56,271,1.387,275,1.745,295,1.745,299,1.99,307,2.419,330,1.99,331,3.902,332,3.902,333,3.902,334,2.815,335,2.815,336,2.815,337,3.902,338,2.815,339,2.815,340,3.902,341,2.815,342,2.815,343,2.815,344,2.317,345,3.902,346,3.166,347,2.317,348,2.815,349,2.815,350,2.815,351,3.902,352,5.256,353,2.815,354,2.815]],["title/controllers/UserController.html",[200,1.076,355,1.846]],["body/controllers/UserController.html",[12,0.04,17,0.291,18,0.247,19,0.204,22,0.525,25,0.441,27,1.035,28,0.291,29,0.087,31,0.017,32,0.024,33,0.017,38,0.291,39,0.98,44,0.945,46,1.523,47,1.376,48,0.791,49,1.242,52,1.312,59,1.425,104,1.227,194,1.902,200,0.935,203,1.604,207,2.182,213,3.052,238,1.902,271,2.593,276,1.604,277,0.846,278,1.275,317,1.864,318,1.829,355,2.28,356,2.13,357,4.661,358,2.6,359,3.028,360,2.6,361,2.588,362,2.588,363,3.028,364,2.588,365,2.13,366,3.524,367,2.588,368,1.829,369,3.524,370,2.588,371,2.588,372,3.028,373,2.588,374,2.13,375,2.13,376,2.588,377,2.588,378,2.588,379,2.588,380,2.13,381,2.588,382,2.588,383,2.588,384,2.13,385,2.588,386,2.588,387,2.13,388,2.588,389,2.588]],["title/injectables/UserService.html",[34,0.507,317,1.191]],["body/injectables/UserService.html",[12,0.04,17,0.176,18,0.149,19,0.123,22,0.534,25,0.266,28,0.176,29,0.053,30,0.907,31,0.01,32,0.016,33,0.01,34,0.428,36,0.625,38,0.176,39,0.669,40,2.426,44,0.849,46,1.288,47,1.164,48,0.848,49,1.05,52,1.121,54,1.393,62,2.066,63,2.339,77,1.949,82,0.77,95,0.625,104,1.06,105,1.393,110,1.287,133,2.169,143,1.003,150,0.86,181,1.236,194,1.661,205,1.136,210,0.77,211,1.555,212,0.969,222,1.112,227,2.073,228,1.105,238,1.52,248,0.77,255,0.77,264,1.287,265,1.257,266,2.588,268,1.287,271,2.397,274,1.105,275,0.969,276,0.969,277,1.027,278,0.77,279,1.287,281,1.105,282,1.105,283,1.287,293,2.066,295,0.969,299,1.774,307,2.231,309,1.287,317,1.003,327,1.287,358,1.774,359,2.588,360,1.774,365,2.066,368,1.774,384,2.066,390,1.287,391,2.962,392,3.598,393,2.066,394,3.144,395,3.144,396,1.563,397,2.066,398,1.563,399,1.287,400,1.563,401,1.563,402,1.563,403,1.563,404,1.563,405,1.563,406,1.287,407,1.563,408,1.287,409,1.287,410,1.563,411,1.563,412,1.563,413,2.509,414,2.509,415,1.563,416,1.563,417,2.509,418,1.563,419,2.509,420,1.563,421,1.563,422,1.563,423,2.509,424,1.563,425,1.563,426,1.774,427,2.509,428,1.774,429,2.509,430,2.509,431,2.588,432,2.066,433,1.563,434,3.144,435,1.563,436,1.563,437,1.563,438,1.563,439,1.563,440,2.509,441,3.144,442,1.563,443,1.563,444,1.563,445,1.563,446,1.563,447,2.588,448,2.509,449,1.563,450,1.563,451,1.563,452,1.563,453,1.563,454,1.563,455,1.563,456,1.563,457,1.563,458,1.563,459,1.563,460,1.563,461,1.563,462,1.563,463,1.563,464,1.563,465,1.563,466,1.563,467,1.563,468,1.563,469,1.287,470,1.287,471,1.287,472,2.509,473,1.563,474,1.563]],["title/controllers/UserTypeController.html",[200,1.076,475,1.846]],["body/controllers/UserTypeController.html",[12,0.04,17,0.312,18,0.264,19,0.219,22,0.501,25,0.473,27,1.11,28,0.312,29,0.093,31,0.018,32,0.025,33,0.018,38,0.312,39,1.03,43,1.713,44,0.97,46,1.571,47,1.42,49,1.281,52,1.347,59,1.528,104,1.212,194,1.737,200,1.003,203,1.721,207,2.24,213,3.133,271,2.578,277,0.907,278,1.367,317,1.11,363,3.181,366,3.66,369,3.66,372,3.181,374,2.285,375,2.285,380,2.285,387,2.285,475,2.396,476,2.285,477,2.776,478,4.807,479,3.864,480,3.181,481,3.864,482,3.864,483,2.776,484,2.776,485,2.776,486,2.776,487,2.776,488,2.776,489,2.776,490,2.776,491,2.776,492,2.285,493,2.776,494,2.776,495,2.776,496,2.776,497,2.776,498,2.776,499,2.776,500,2.776]],["title/injectables/UserTypeService.html",[34,0.507,43,1.319]],["body/injectables/UserTypeService.html",[12,0.04,17,0.252,18,0.213,19,0.176,22,0.523,25,0.381,28,0.252,29,0.075,30,1.197,31,0.03,32,0.021,33,0.014,34,0.564,36,0.895,38,0.252,39,0.882,40,2.51,43,1.467,44,0.934,46,1.519,47,1.372,48,1.047,49,1.238,52,1.238,54,0.992,63,1.93,72,1.741,77,1.388,82,1.103,104,1.167,105,1.746,133,2.169,150,1.232,194,1.68,227,2.547,271,2.397,274,1.582,277,1.288,278,1.103,358,2.341,360,2.341,368,2.341,391,3.585,393,2.726,397,2.726,399,2.726,406,1.843,408,1.843,409,1.843,426,2.341,431,2.726,432,1.843,447,3.244,469,2.726,470,1.843,471,1.843,480,2.726,501,1.843,502,2.238,503,3.941,504,2.238,505,3.311,506,2.238,507,2.238,508,2.238,509,3.311,510,2.238,511,2.238,512,2.238,513,2.238,514,2.238,515,3.311,516,2.238,517,2.238,518,2.238,519,2.238,520,2.238,521,2.238,522,2.238,523,2.238]],["title/modules/UsersModule.html",[0,1.319,13,1.639]],["body/modules/UsersModule.html",[0,1.867,2,1.239,3,1.239,4,1.56,5,1.56,6,1.239,7,2.612,8,1.56,11,2.4,12,0.04,13,3.227,14,2.235,15,1.56,16,1.56,17,0.283,18,0.24,19,0.198,21,1.985,22,0.654,25,0.429,27,1.442,28,0.283,29,0.085,31,0.016,32,0.023,33,0.016,35,2.79,43,2.246,81,2.071,82,1.239,105,2.246,201,2.235,214,2.497,215,2.071,222,1.867,238,1.523,265,2.027,275,1.56,276,1.56,277,1.178,278,1.239,310,2.235,316,2.071,317,2.027,318,1.778,355,2.612,475,2.612,492,2.071,524,2.071,525,2.516,526,2.071,527,2.516,528,3.605,529,2.516,530,2.516,531,2.516,532,2.516,533,2.516,534,2.516,535,2.516,536,2.516,537,2.516]],["title/coverage.html",[538,2.867]],["body/coverage.html",[6,1.352,12,0.039,19,0.302,21,1.511,29,0.149,31,0.018,32,0.025,33,0.018,34,0.912,35,1.511,37,2.71,43,1.216,48,0.59,55,1.94,66,4.261,72,1.098,73,2.71,78,1.94,105,1.216,106,2.26,120,2.26,131,3.12,162,1.699,164,1.702,166,1.702,167,1.702,181,1.352,200,1.729,201,1.702,202,2.26,205,0.992,214,1.352,222,1.216,224,2.71,238,0.992,255,1.352,261,2.26,265,1.098,277,0.897,310,1.702,311,2.26,317,1.098,330,2.71,346,1.94,355,1.702,356,2.26,390,2.26,475,1.702,476,2.26,501,2.26,538,1.94,539,2.745,540,2.745,541,2.745,542,5.352,543,5.46,544,2.745,545,4.784,546,2.26,547,3.835,548,4.419,549,2.26,550,2.745,551,2.26,552,3.835,553,2.745,554,2.745,555,2.745,556,2.745]],["title/dependencies.html",[3,1.763,557,2.49]],["body/dependencies.html",[3,1.793,12,0.04,25,0.62,29,0.156,31,0.024,32,0.03,33,0.024,80,2.996,82,1.793,159,2.256,161,2.572,247,2.003,248,2.28,256,1.793,281,2.572,344,2.996,558,5.09,559,3.639,560,3.639,561,3.639,562,3.639,563,3.639,564,3.639,565,3.639,566,3.639,567,4.629,568,3.639,569,3.639,570,3.639,571,3.639,572,3.639,573,3.639,574,3.639,575,3.639,576,3.639,577,3.639,578,3.639,579,3.639,580,3.639,581,3.639,582,3.639,583,3.639,584,3.639,585,3.639]],["title/interfaces/file.html",[19,0.235,162,1.319]],["body/interfaces/file.html",[12,0.04,17,0.319,18,0.27,19,0.354,22,0.506,25,0.482,28,0.441,29,0.095,30,1.023,31,0.018,32,0.025,33,0.018,34,0.668,38,0.319,54,1.991,72,1.132,104,0.94,131,1.755,132,1.93,133,2.669,134,2.331,135,2.331,136,2.331,144,3.699,146,3.948,148,2.331,150,2.157,152,2.331,154,2.331,158,2.331,159,1.755,160,2.331,161,2.001,162,1.255,163,4.335,164,2.429,165,2.001,166,3.155,167,3.005,168,2.001,169,2.001,170,2.331,171,2.331,172,2.331,173,2.331,174,2.331,175,2.331,176,2.331,177,2.331,178,2.331,179,2.331,180,3.225,181,1.93,182,3.225,183,2.331,184,2.331,185,2.331,186,2.331,187,2.331,188,2.331,189,2.331,190,2.331,191,2.331,192,2.331,193,2.001,194,1.023,195,2.331,196,2.331,197,2.331,198,2.331,199,2.331,586,2.001]],["title/miscellaneous/functions.html",[587,1.544,588,2.946]],["body/miscellaneous/functions.html",[6,2.773,12,0.034,31,0.03,32,0.034,33,0.03,38,0.515,546,3.768,587,2.837,588,3.768,589,4.576]],["title/index.html",[38,0.28,590,2.49,591,2.49]],["body/index.html",[12,0.039,18,0.315,31,0.021,32,0.028,33,0.021,193,2.333,256,1.626,428,2.333,538,2.333,592,3.301,593,3.301,594,4.346,595,3.301,596,3.301,597,3.301,598,3.301,599,3.301,600,3.301,601,4.858,602,3.301,603,3.301,604,3.301,605,5.616,606,3.301,607,3.301,608,5.508,609,3.301,610,3.301,611,4.346,612,3.301,613,3.301,614,3.301,615,3.301,616,4.346,617,4.346,618,3.301,619,3.301,620,3.301,621,4.346,622,4.346,623,3.301,624,3.301,625,3.301,626,3.301,627,3.301,628,2.717,629,3.301,630,3.301,631,3.301,632,3.301,633,3.301,634,3.301,635,3.301,636,3.301,637,3.301,638,3.301,639,3.301,640,3.301,641,3.301,642,3.301,643,3.301,644,3.301,645,3.301,646,3.301]],["title/interfaces/login.html",[162,1.319,205,1.076]],["body/interfaces/login.html",[12,0.039,17,0.355,18,0.301,19,0.249,22,0.571,28,0.475,29,0.142,31,0.02,32,0.027,33,0.02,38,0.355,48,1.091,95,2.113,132,2.077,143,1.899,162,1.398,194,1.14,205,1.524,210,2.604,222,1.398,224,2.229,225,1.955,226,2.614,227,1.554,228,2.229,231,3.143,232,3.143,238,1.833,243,2.981,244,3.143,245,2.981,246,2.229,247,1.736,248,2.077,249,1.955,250,2.981,251,3.276,252,1.955,253,2.981,254,2.614,255,2.077,256,1.554,257,2.597,258,2.614,259,2.981,260,2.229,586,2.229]],["title/modules.html",[2,1.998]],["body/modules.html",[1,2.736,2,2.175,11,2.175,12,0.034,13,2.43,31,0.029,32,0.034,33,0.029,628,4.565,647,5.544,648,5.544,649,5.544]],["title/overview.html",[650,3.339]],["body/overview.html",[0,1.448,1,3.405,2,1.61,3,1.61,4,2.026,5,2.026,6,1.61,7,2.026,8,2.026,9,2.69,10,2.69,11,2.76,12,0.038,13,3.316,14,2.676,15,2.026,16,2.026,27,1.307,31,0.021,32,0.028,33,0.021,35,2.661,36,1.307,43,2.143,69,2.69,70,2.69,71,2.69,72,2.24,105,2.143,214,2.382,223,2.026,265,1.933,317,1.933,524,2.69,526,2.69,586,2.31,650,2.69,651,4.317,652,3.268,653,3.268,654,3.268]],["title/classes/userModel.html",[29,0.1,238,1.076]],["body/classes/userModel.html",[12,0.039,17,0.253,18,0.214,19,0.177,22,0.444,28,0.253,29,0.111,31,0.015,32,0.021,33,0.015,38,0.253,44,1.014,47,1.165,48,1.227,49,1.162,95,1.326,132,1.634,143,2.206,207,2.292,210,1.944,223,1.391,225,2.056,226,2.446,227,1.634,230,3.123,231,3.485,232,3.485,234,1.586,236,1.847,238,1.199,239,1.847,241,1.847,243,2.344,244,2.884,245,2.344,246,1.586,247,1.235,248,1.105,249,1.391,250,2.344,251,3.207,252,1.391,253,2.344,254,2.056,255,1.634,256,1.105,258,2.056,260,2.344,277,1.52,426,2.789,549,1.847,655,3.249,656,3.946,657,3.946,658,3.946,659,2.731,660,1.847,661,2.243,662,2.243,663,2.243,664,2.243,665,2.243,666,2.243,667,2.243,668,2.243,669,2.243,670,2.243,671,2.243,672,2.243,673,2.243,674,2.243,675,2.243,676,1.847,677,2.243,678,2.243,679,2.243,680,2.243,681,2.243,682,1.847,683,2.243]],["title/classes/userTypeModel.html",[29,0.1,277,0.973]],["body/classes/userTypeModel.html",[12,0.039,17,0.361,18,0.305,19,0.253,22,0.48,28,0.361,29,0.143,31,0.021,32,0.028,33,0.021,38,0.361,44,0.919,48,1.175,132,2.1,143,1.915,207,2.122,223,1.987,225,2.642,226,2.968,227,2.1,230,2.968,231,3.386,232,3.386,234,2.265,244,2.968,247,1.764,248,1.579,249,1.987,251,3.164,252,1.987,254,2.642,255,2.1,256,1.579,258,1.987,259,2.265,277,1.393,428,3.385,551,2.638,655,3.942,659,3.509,660,3.509,676,2.638,682,2.638,684,3.205,685,3.205,686,3.205]],["title/miscellaneous/variables.html",[587,1.544,687,2.946]],["body/miscellaneous/variables.html",[12,0.04,21,2.302,31,0.02,32,0.027,33,0.02,37,2.202,38,0.351,48,1.015,55,2.955,56,2.564,57,2.564,58,2.564,72,1.245,73,2.202,78,3.336,85,2.564,86,2.564,87,2.564,88,2.564,89,2.564,90,2.564,91,2.564,92,2.564,93,2.564,94,2.564,95,1.245,96,3.442,97,2.564,98,2.564,99,2.564,100,2.564,101,3.442,102,2.564,104,0.747,131,1.931,146,2.955,150,2.302,164,2.592,165,2.202,166,3.127,167,3.127,168,2.202,169,2.202,330,2.202,346,2.955,347,2.564,587,1.931,687,2.564,688,4.181,689,3.115,690,4.72,691,3.115,692,5.535,693,5.535]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":66,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":128,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["0x8",{"_index":129,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["10",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["16",{"_index":125,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["2",{"_index":654,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":651,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":92,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":652,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["410",{"_index":471,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["4xxx",{"_index":116,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["5.0.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":653,"title":{},"body":{"overview.html":{}}}],["7.6.15",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["_errorlogger",{"_index":134,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["_geradoruuid",{"_index":393,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["_geradoruuid:geradoruuidservice",{"_index":408,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["_infologger",{"_index":135,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["_logger",{"_index":505,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["_loggercreate",{"_index":137,"title":{},"body":{"injectables/LoggerService.html":{}}}],["_loggercreate(level",{"_index":142,"title":{},"body":{"injectables/LoggerService.html":{}}}],["_loggercreate(level:string,service:string",{"_index":178,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["_login",{"_index":266,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["_loginservice:loginservice",{"_index":217,"title":{},"body":{"controllers/LoginController.html":{}}}],["_tokenservice",{"_index":268,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["_tokenservice:tokenservice",{"_index":282,"title":{},"body":{"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["_type",{"_index":394,"title":{},"body":{"injectables/UserService.html":{}}}],["_user",{"_index":395,"title":{},"body":{"injectables/UserService.html":{}}}],["_usermodel",{"_index":503,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["_userservice:userservice,private",{"_index":320,"title":{},"body":{"controllers/TokenController.html":{}}}],["_usertypesservice",{"_index":50,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["_usertypesservice:usertypeservice",{"_index":60,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["_warnlogger",{"_index":136,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["active",{"_index":655,"title":{},"body":{"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["active:newuser.active",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["active:type.active",{"_index":430,"title":{},"body":{"injectables/UserService.html":{}}}],["active:user.active",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["again",{"_index":329,"title":{},"body":{"controllers/TokenController.html":{}}}],["allownull",{"_index":231,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["allusers",{"_index":357,"title":{},"body":{"controllers/UserController.html":{}}}],["allusersandtypes",{"_index":378,"title":{},"body":{"controllers/UserController.html":{}}}],["allusertypes",{"_index":478,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["already",{"_index":437,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":629,"title":{},"body":{"index.html":{}}}],["app",{"_index":193,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"index.html":{}}}],["applications",{"_index":600,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["as:'user",{"_index":289,"title":{},"body":{"injectables/LoginService.html":{}}}],["as:'user_type",{"_index":292,"title":{},"body":{"injectables/LoginService.html":{}}}],["async",{"_index":40,"title":{},"body":{"injectables/ConfigInit.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["attributes:['id','description','active",{"_index":293,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["attributes:['nickname','name','email','phone','active",{"_index":290,"title":{},"body":{"injectables/LoginService.html":{}}}],["attributes:['userid','createdat','updatedat','password",{"_index":285,"title":{},"body":{"injectables/LoginService.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/LoginController.html":{}}}],["author",{"_index":639,"title":{},"body":{"index.html":{}}}],["autoincrement",{"_index":249,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["autoloadmodels",{"_index":100,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":63,"title":{},"body":{"injectables/ConfigInit.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["backers",{"_index":630,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":281,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["belongsto",{"_index":250,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["belongsto(undefined",{"_index":239,"title":{},"body":{"classes/LoginModel.html":{},"classes/userModel.html":{}}}],["belongstomany",{"_index":674,"title":{},"body":{"classes/userModel.html":{}}}],["better",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":374,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["boolean",{"_index":659,"title":{},"body":{"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":649,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":647,"title":{},"body":{"modules.html":{}}}],["building",{"_index":595,"title":{},"body":{"index.html":{}}}],["c",{"_index":121,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["checktoken",{"_index":312,"title":{},"body":{"controllers/TokenController.html":{}}}],["checktoken(@param('token')token:string",{"_index":321,"title":{},"body":{"controllers/TokenController.html":{}}}],["checktoken(token",{"_index":313,"title":{},"body":{"controllers/TokenController.html":{}}}],["class",{"_index":29,"title":{"classes/LoginModel.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["classes",{"_index":223,"title":{},"body":{"classes/LoginModel.html":{},"overview.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":69,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":71,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":70,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":524,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":525,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":526,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cod",{"_index":470,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["column",{"_index":251,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["combinelatest",{"_index":158,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["compare(password,login.password",{"_index":300,"title":{},"body":{"injectables/LoginService.html":{}}}],["configinit",{"_index":35,"title":{"injectables/ConfigInit.html":{}},"body":{"injectables/ConfigInit.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["configmodule",{"_index":79,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule.forroot",{"_index":85,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["console.log(user",{"_index":384,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["console.log(verify",{"_index":326,"title":{},"body":{"controllers/TokenController.html":{}}}],["const",{"_index":54,"title":{},"body":{"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/LoggerService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{}}}],["constructor(_logger",{"_index":502,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["constructor(_tokenservice",{"_index":264,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["constructor(_usertypesservice",{"_index":42,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/ConfigInit.html":{},"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["controller",{"_index":200,"title":{"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}},"body":{"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":216,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('token",{"_index":319,"title":{},"body":{"controllers/TokenController.html":{}}}],["controller('user",{"_index":376,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('user_types",{"_index":493,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["controllers",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controlles/login.controller",{"_index":532,"title":{},"body":{"modules/UsersModule.html":{}}}],["controlles/token.controller",{"_index":534,"title":{},"body":{"modules/UsersModule.html":{}}}],["controlles/usertype.controller",{"_index":531,"title":{},"body":{"modules/UsersModule.html":{}}}],["controlles/usuarios.controller",{"_index":529,"title":{},"body":{"modules/UsersModule.html":{}}}],["core/core.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":11,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule.forroot(),sequelizemodule.forfeature([usertypemodel",{"_index":536,"title":{},"body":{"modules/UsersModule.html":{}}}],["coverage",{"_index":538,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":110,"title":{},"body":{"injectables/GeradorUuidService.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":417,"title":{},"body":{"injectables/UserService.html":{}}}],["createlogger",{"_index":190,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["createlogger,format,transports",{"_index":160,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["crypto",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["database",{"_index":98,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":252,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["datatype.boolean",{"_index":682,"title":{},"body":{"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["datatype.string",{"_index":678,"title":{},"body":{"classes/userModel.html":{}}}],["datatype.string(100",{"_index":681,"title":{},"body":{"classes/userModel.html":{}}}],["datatype.string(20",{"_index":680,"title":{},"body":{"classes/userModel.html":{}}}],["datatype.string(255",{"_index":259,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userTypeModel.html":{}}}],["datatype.string(60",{"_index":677,"title":{},"body":{"classes/userModel.html":{}}}],["datatype.uuid",{"_index":258,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode,verify",{"_index":343,"title":{},"body":{"injectables/TokenService.html":{}}}],["decodetoken",{"_index":331,"title":{},"body":{"injectables/TokenService.html":{}}}],["decodetoken(token",{"_index":335,"title":{},"body":{"injectables/TokenService.html":{}}}],["decodetoken(token):login",{"_index":354,"title":{},"body":{"injectables/TokenService.html":{}}}],["decorators",{"_index":207,"title":{},"body":{"controllers/LoginController.html":{},"classes/LoginModel.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["default",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultmeta",{"_index":195,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["defined",{"_index":44,"title":{},"body":{"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["delete",{"_index":375,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["delete(':id",{"_index":363,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["deleted",{"_index":469,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["deleteuser",{"_index":358,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["deleteuser(@param('id",{"_index":388,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":397,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["deleteuser(param",{"_index":362,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteusertype",{"_index":479,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["deleteusertype(@param",{"_index":499,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["deleteusertype(param",{"_index":484,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":428,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"classes/userTypeModel.html":{}}}],["description:'admin',active:1",{"_index":56,"title":{},"body":{"injectables/ConfigInit.html":{},"miscellaneous/variables.html":{}}}],["description:'bloger',active:0",{"_index":58,"title":{},"body":{"injectables/ConfigInit.html":{},"miscellaneous/variables.html":{}}}],["description:'user',active:1",{"_index":57,"title":{},"body":{"injectables/ConfigInit.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":607,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":87,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":618,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":596,"title":{},"body":{"index.html":{}}}],["email",{"_index":210,"title":{},"body":{"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["email\":email",{"_index":286,"title":{},"body":{"injectables/LoginService.html":{}}}],["email:newuser.email",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["email:string,@param('password",{"_index":219,"title":{},"body":{"controllers/LoginController.html":{}}}],["email:user.email",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["err",{"_index":352,"title":{},"body":{"injectables/TokenService.html":{}}}],["error",{"_index":184,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["error:'have",{"_index":297,"title":{},"body":{"injectables/LoginService.html":{}}}],["error:'password",{"_index":304,"title":{},"body":{"injectables/LoginService.html":{}}}],["error:'user",{"_index":327,"title":{},"body":{"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["errorlog",{"_index":138,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errorlog(message",{"_index":148,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["exists",{"_index":433,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exports:[loggerservice",{"_index":103,"title":{},"body":{"modules/CoreModule.html":{}}}],["express",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":225,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["false",{"_index":232,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["file",{"_index":19,"title":{"interfaces/file.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["file?:file",{"_index":179,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["filename",{"_index":163,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["foreignkey",{"_index":253,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["format",{"_index":191,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["format.combine",{"_index":192,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["format.label",{"_index":169,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["format.printf",{"_index":165,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["format.timestamp",{"_index":168,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":75,"title":{},"body":{"modules/CoreModule.html":{}}}],["framework",{"_index":594,"title":{},"body":{"index.html":{}}}],["fs",{"_index":345,"title":{},"body":{"injectables/TokenService.html":{}}}],["fs.readfilesync('src/config/keys.key').tostring",{"_index":347,"title":{},"body":{"injectables/TokenService.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":120,"title":{},"body":{"injectables/GeradorUuidService.html":{},"coverage.html":{}}}],["functions",{"_index":588,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geradoruuid.service",{"_index":406,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["geradoruuidservice",{"_index":105,"title":{"injectables/GeradorUuidService.html":{}},"body":{"injectables/GeradorUuidService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["get(':email/:password",{"_index":208,"title":{},"body":{"controllers/LoginController.html":{}}}],["get(':id",{"_index":372,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["get(':token",{"_index":314,"title":{},"body":{"controllers/TokenController.html":{}}}],["get('types",{"_index":377,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":399,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["get(id:string",{"_index":412,"title":{},"body":{"injectables/UserService.html":{}}}],["getall",{"_index":391,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["getlogin",{"_index":262,"title":{},"body":{"injectables/LoginService.html":{}}}],["getlogin(email",{"_index":269,"title":{},"body":{"injectables/LoginService.html":{}}}],["getting",{"_index":590,"title":{"index.html":{}},"body":{}}],["grow",{"_index":625,"title":{},"body":{"index.html":{}}}],["hash",{"_index":407,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(user.password",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["hash,compare",{"_index":280,"title":{},"body":{"injectables/LoginService.html":{}}}],["hasone",{"_index":673,"title":{},"body":{"classes/userModel.html":{}}}],["here",{"_index":636,"title":{},"body":{"index.html":{}}}],["host",{"_index":89,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["httpexception",{"_index":211,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":643,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":212,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{}}}],["httpstatus.conflict",{"_index":439,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.not_found",{"_index":298,"title":{},"body":{"injectables/LoginService.html":{}}}],["httpstatus.unauthorized",{"_index":306,"title":{},"body":{"injectables/LoginService.html":{},"controllers/TokenController.html":{}}}],["id",{"_index":227,"title":{},"body":{"classes/LoginModel.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["id's",{"_index":111,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["id:id",{"_index":468,"title":{},"body":{"injectables/UserService.html":{}}}],["id:string",{"_index":676,"title":{},"body":{"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["id:type.id",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["id:uuid",{"_index":441,"title":{},"body":{"injectables/UserService.html":{}}}],["identifier",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["if(!(login?.userid",{"_index":294,"title":{},"body":{"injectables/LoginService.html":{}}}],["if(!res",{"_index":302,"title":{},"body":{"injectables/LoginService.html":{}}}],["if(\"userid",{"_index":324,"title":{},"body":{"controllers/TokenController.html":{}}}],["if(exists",{"_index":435,"title":{},"body":{"injectables/UserService.html":{}}}],["if(file",{"_index":186,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["if(payload.datavalues",{"_index":348,"title":{},"body":{"injectables/TokenService.html":{}}}],["if(types.length",{"_index":65,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":287,"title":{},"body":{"injectables/LoginService.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["infolog",{"_index":139,"title":{},"body":{"injectables/LoggerService.html":{}}}],["infolog(message",{"_index":152,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["init",{"_index":41,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["init_types",{"_index":55,"title":{},"body":{"injectables/ConfigInit.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["init_types.foreach(element",{"_index":67,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["injectable",{"_index":34,"title":{"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}},"body":{"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"coverage.html":{},"interfaces/file.html":{}}}],["injectables",{"_index":36,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"overview.html":{}}}],["injectmodel",{"_index":274,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["injectmodel(loginmodel",{"_index":283,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["injectmodel(usermodel",{"_index":410,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(usertypemodel",{"_index":409,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["installation",{"_index":604,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":606,"title":{},"body":{"index.html":{}}}],["interface",{"_index":162,"title":{"interfaces/file.html":{},"interfaces/login.html":{}},"body":{"injectables/LoggerService.html":{},"classes/LoginModel.html":{},"coverage.html":{},"interfaces/file.html":{},"interfaces/login.html":{}}}],["interfaces",{"_index":586,"title":{},"body":{"interfaces/file.html":{},"interfaces/login.html":{},"overview.html":{}}}],["isemail",{"_index":243,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["isemail()@column({type",{"_index":662,"title":{},"body":{"classes/userModel.html":{}}}],["isnotempty",{"_index":244,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["isnotempty()@column({type",{"_index":660,"title":{},"body":{"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["isnotempty()@foreignkey(undefined)@column({type",{"_index":241,"title":{},"body":{"classes/LoginModel.html":{},"classes/userModel.html":{}}}],["isnotempty()@isemail()@column({type",{"_index":229,"title":{},"body":{"classes/LoginModel.html":{}}}],["isnotempty()@isstring()@maxlength(255)@column({type",{"_index":236,"title":{},"body":{"classes/LoginModel.html":{},"classes/userModel.html":{}}}],["isnotempty()@maxlength(255)@column({type",{"_index":665,"title":{},"body":{"classes/userModel.html":{}}}],["isstring",{"_index":245,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["join",{"_index":632,"title":{},"body":{"index.html":{}}}],["js",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":344,"title":{},"body":{"injectables/TokenService.html":{},"dependencies.html":{}}}],["kamil",{"_index":640,"title":{},"body":{"index.html":{}}}],["label",{"_index":166,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":146,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["level:file.level",{"_index":189,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["license",{"_index":646,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":622,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":90,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":528,"title":{},"body":{"modules/UsersModule.html":{}}}],["loggerservice",{"_index":72,"title":{"injectables/LoggerService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/LoggerService.html":{},"injectables/UserTypeService.html":{},"coverage.html":{},"interfaces/file.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":205,"title":{"interfaces/login.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["login(@param('email",{"_index":218,"title":{},"body":{"controllers/LoginController.html":{}}}],["login(email",{"_index":206,"title":{},"body":{"controllers/LoginController.html":{}}}],["login.password",{"_index":301,"title":{},"body":{"injectables/LoginService.html":{}}}],["logincontroller",{"_index":201,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["logincontroller,tokencontroller",{"_index":537,"title":{},"body":{"modules/UsersModule.html":{}}}],["loginmodel",{"_index":222,"title":{"classes/LoginModel.html":{}},"body":{"classes/LoginModel.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["loginservice",{"_index":214,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["logs/combined.log",{"_index":185,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["logs/error.log",{"_index":183,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["make",{"_index":442,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":124,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["maxlength",{"_index":246,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["maxlength(20",{"_index":679,"title":{},"body":{"classes/userModel.html":{}}}],["maxlength(20)@column({type",{"_index":669,"title":{},"body":{"classes/userModel.html":{}}}],["maxlength(255",{"_index":260,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["maxxidata",{"_index":99,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":150,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":39,"title":{},"body":{"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["miscellaneous",{"_index":587,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":621,"title":{},"body":{"index.html":{}}}],["mode",{"_index":611,"title":{},"body":{"index.html":{}}}],["model",{"_index":226,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["model:usermodel",{"_index":288,"title":{},"body":{"injectables/LoginService.html":{}}}],["model:usertypemodel",{"_index":291,"title":{},"body":{"injectables/LoginService.html":{}}}],["models/login.model",{"_index":275,"title":{},"body":{"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["models/user.model",{"_index":276,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["models/usertype.model",{"_index":278,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":635,"title":{},"body":{"index.html":{}}}],["myformat",{"_index":164,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["mysql",{"_index":88,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":641,"title":{},"body":{"index.html":{}}}],["name",{"_index":47,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"classes/userModel.html":{}}}],["name:newuser.name",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["name:user.name",{"_index":422,"title":{},"body":{"injectables/UserService.html":{}}}],["need",{"_index":328,"title":{},"body":{"controllers/TokenController.html":{}}}],["nest",{"_index":601,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":645,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"interfaces/file.html":{}}}],["nestjs/config",{"_index":80,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["nestjs/sequelize",{"_index":82,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":181,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/file.html":{}}}],["newlogin",{"_index":263,"title":{},"body":{"injectables/LoginService.html":{}}}],["newlogin(login",{"_index":272,"title":{},"body":{"injectables/LoginService.html":{}}}],["newuser",{"_index":359,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["newuser(@body",{"_index":383,"title":{},"body":{"controllers/UserController.html":{}}}],["newuser(user",{"_index":365,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["newuser.createdat",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":453,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.updatedat",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["newusertype",{"_index":480,"title":{},"body":{"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["newusertype(@body",{"_index":496,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["newusertype(type",{"_index":509,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["newusertype(user",{"_index":486,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["nickname",{"_index":656,"title":{},"body":{"classes/userModel.html":{}}}],["nickname:newuser.nickname",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["nickname:user.nickname",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["node.js",{"_index":593,"title":{},"body":{"index.html":{}}}],["npm",{"_index":605,"title":{},"body":{"index.html":{}}}],["of(this.decodetoken(token)).topromise",{"_index":353,"title":{},"body":{"injectables/TokenService.html":{}}}],["op",{"_index":405,"title":{},"body":{"injectables/UserService.html":{}}}],["open",{"_index":623,"title":{},"body":{"index.html":{}}}],["optional",{"_index":49,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"classes/userModel.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":650,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":557,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":213,"title":{},"body":{"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["password",{"_index":95,"title":{},"body":{"modules/CoreModule.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"miscellaneous/variables.html":{}}}],["password:string",{"_index":220,"title":{},"body":{"controllers/LoginController.html":{}}}],["password?:string",{"_index":683,"title":{},"body":{"classes/userModel.html":{}}}],["pattern",{"_index":112,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["payload",{"_index":339,"title":{},"body":{"injectables/TokenService.html":{}}}],["phone",{"_index":657,"title":{},"body":{"classes/userModel.html":{}}}],["phone:newuser.phone",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["phone:user.phone",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["please",{"_index":633,"title":{},"body":{"index.html":{}}}],["port",{"_index":91,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":366,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/LoginController.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["primarykey",{"_index":254,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["primarykey()@column({type",{"_index":234,"title":{},"body":{"classes/LoginModel.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["private",{"_index":133,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{}}}],["private_key",{"_index":346,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["process.env.senha_banco_dados",{"_index":96,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.usuario_banco_dados",{"_index":94,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":613,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":592,"title":{},"body":{"index.html":{}}}],["project",{"_index":624,"title":{},"body":{"index.html":{}}}],["promise",{"_index":271,"title":{},"body":{"injectables/LoginService.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["properties",{"_index":132,"title":{},"body":{"injectables/LoggerService.html":{},"classes/LoginModel.html":{},"interfaces/file.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["provider",{"_index":78,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider:provider",{"_index":84,"title":{},"body":{"modules/CoreModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":369,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["r",{"_index":123,"title":{},"body":{"injectables/GeradorUuidService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{}}}],["read",{"_index":634,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":438,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":603,"title":{},"body":{"index.html":{}}}],["res",{"_index":299,"title":{},"body":{"injectables/LoginService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/file.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/login.html":{},"modules.html":{},"overview.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":104,"title":{},"body":{"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":52,"title":{},"body":{"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{}}}],["rimraf",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":97,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":608,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":159,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/TokenService.html":{},"dependencies.html":{},"interfaces/file.html":{}}}],["scalable",{"_index":597,"title":{},"body":{"index.html":{}}}],["sequelize",{"_index":248,"title":{},"body":{"classes/LoginModel.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["sequelizemodule",{"_index":81,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forroot",{"_index":86,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":598,"title":{},"body":{"index.html":{}}}],["service",{"_index":144,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["service',{filename:'logs/info.log',level:'info",{"_index":172,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["service',{filename:'logs/warn.log',level:'warn",{"_index":175,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["services/geradoruuid.service",{"_index":530,"title":{},"body":{"modules/UsersModule.html":{}}}],["services/logger.service",{"_index":83,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/login.service",{"_index":215,"title":{},"body":{"controllers/LoginController.html":{},"modules/UsersModule.html":{}}}],["services/token.service",{"_index":316,"title":{},"body":{"controllers/TokenController.html":{},"modules/UsersModule.html":{}}}],["services/user.service",{"_index":318,"title":{},"body":{"controllers/TokenController.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["services/usertype.service",{"_index":492,"title":{},"body":{"controllers/UserTypeController.html":{},"modules/UsersModule.html":{}}}],["side",{"_index":599,"title":{},"body":{"index.html":{}}}],["sign",{"_index":342,"title":{},"body":{"injectables/TokenService.html":{}}}],["sign(payload,private_key,{expiresin:'1h",{"_index":350,"title":{},"body":{"injectables/TokenService.html":{}}}],["sign(payload.datavalues,private_key,{expiresin:'1h",{"_index":349,"title":{},"body":{"injectables/TokenService.html":{}}}],["signtoken",{"_index":332,"title":{},"body":{"injectables/TokenService.html":{}}}],["signtoken(payload",{"_index":337,"title":{},"body":{"injectables/TokenService.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigInit.html":{},"modules/CoreModule.html":{},"injectables/GeradorUuidService.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"interfaces/file.html":{},"index.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["sponsors",{"_index":627,"title":{},"body":{"index.html":{}}}],["src/.../config.ts",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.ts",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.service.ts",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../token.service.ts",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/@core/core.module",{"_index":533,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/@core/core.module.ts",{"_index":73,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/@core/core.module.ts:33",{"_index":76,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/@core/services/logger.service",{"_index":512,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/@core/services/logger.service.ts",{"_index":131,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["src/@core/services/logger.service.ts:17",{"_index":156,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:18",{"_index":157,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:19",{"_index":141,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:26",{"_index":145,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:47",{"_index":153,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:50",{"_index":155,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/@core/services/logger.service.ts:53",{"_index":149,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/config",{"_index":535,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/config/config.ts",{"_index":37,"title":{},"body":{"injectables/ConfigInit.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config.ts:11",{"_index":45,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["src/config/config.ts:16",{"_index":51,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["src/main.ts",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/controlles/login.controller.ts",{"_index":202,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/users/controlles/login.controller.ts:9",{"_index":209,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/users/controlles/token.controller.ts",{"_index":311,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{}}}],["src/users/controlles/token.controller.ts:10",{"_index":315,"title":{},"body":{"controllers/TokenController.html":{}}}],["src/users/controlles/usertype.controller.ts",{"_index":476,"title":{},"body":{"controllers/UserTypeController.html":{},"coverage.html":{}}}],["src/users/controlles/usertype.controller.ts:17",{"_index":483,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controlles/usertype.controller.ts:21",{"_index":491,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controlles/usertype.controller.ts:25",{"_index":487,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controlles/usertype.controller.ts:29",{"_index":489,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controlles/usertype.controller.ts:33",{"_index":485,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["src/users/controlles/usuarios.controller.ts",{"_index":356,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/controlles/usuarios.controller.ts:22",{"_index":361,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controlles/usuarios.controller.ts:26",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controlles/usuarios.controller.ts:30",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controlles/usuarios.controller.ts:35",{"_index":370,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/controlles/usuarios.controller.ts:39",{"_index":364,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/models/login.model.ts",{"_index":224,"title":{},"body":{"classes/LoginModel.html":{},"coverage.html":{},"interfaces/login.html":{}}}],["src/users/models/login.model.ts:26",{"_index":235,"title":{},"body":{"classes/LoginModel.html":{}}}],["src/users/models/login.model.ts:34",{"_index":233,"title":{},"body":{"classes/LoginModel.html":{}}}],["src/users/models/login.model.ts:43",{"_index":237,"title":{},"body":{"classes/LoginModel.html":{}}}],["src/users/models/login.model.ts:46",{"_index":240,"title":{},"body":{"classes/LoginModel.html":{}}}],["src/users/models/login.model.ts:54",{"_index":242,"title":{},"body":{"classes/LoginModel.html":{}}}],["src/users/models/user.model.ts",{"_index":549,"title":{},"body":{"coverage.html":{},"classes/userModel.html":{}}}],["src/users/models/user.model.ts:24",{"_index":664,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:33",{"_index":667,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:41",{"_index":666,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:48",{"_index":670,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:55",{"_index":663,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:64",{"_index":671,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:71",{"_index":661,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:74",{"_index":672,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/user.model.ts:76",{"_index":668,"title":{},"body":{"classes/userModel.html":{}}}],["src/users/models/usertype.model.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"classes/userTypeModel.html":{}}}],["src/users/models/usertype.model.ts:12",{"_index":686,"title":{},"body":{"classes/userTypeModel.html":{}}}],["src/users/models/usertype.model.ts:19",{"_index":685,"title":{},"body":{"classes/userTypeModel.html":{}}}],["src/users/models/usertype.model.ts:26",{"_index":684,"title":{},"body":{"classes/userTypeModel.html":{}}}],["src/users/services/geradoruuid.service.ts",{"_index":106,"title":{},"body":{"injectables/GeradorUuidService.html":{},"coverage.html":{}}}],["src/users/services/geradoruuid.service.ts:4",{"_index":108,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["src/users/services/geradoruuid.service.ts:8",{"_index":109,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["src/users/services/login.service.ts",{"_index":261,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/users/services/login.service.ts:10",{"_index":267,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/users/services/login.service.ts:15",{"_index":270,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/users/services/login.service.ts:51",{"_index":273,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/users/services/token.service.ts",{"_index":330,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/services/token.service.ts:15",{"_index":338,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/token.service.ts:24",{"_index":341,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/token.service.ts:38",{"_index":336,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/token.service.ts:9",{"_index":334,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/users/services/user.service.ts",{"_index":390,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/services/user.service.ts:12",{"_index":396,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:126",{"_index":403,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:135",{"_index":398,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:153",{"_index":404,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:21",{"_index":401,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:25",{"_index":400,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:55",{"_index":402,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/usertype.service",{"_index":53,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["src/users/services/usertype.service.ts",{"_index":501,"title":{},"body":{"injectables/UserTypeService.html":{},"coverage.html":{}}}],["src/users/services/usertype.service.ts:17",{"_index":508,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:20",{"_index":507,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:23",{"_index":510,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:30",{"_index":511,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:39",{"_index":506,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/services/usertype.service.ts:9",{"_index":504,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["src/users/users.module.ts",{"_index":527,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":609,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":612,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":614,"title":{},"body":{"index.html":{}}}],["started",{"_index":591,"title":{"index.html":{}},"body":{}}],["starter",{"_index":602,"title":{},"body":{"index.html":{}}}],["statements",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":74,"title":{},"body":{"modules/CoreModule.html":{}}}],["status:httpstatus.conflict",{"_index":436,"title":{},"body":{"injectables/UserService.html":{}}}],["status:httpstatus.not_found",{"_index":296,"title":{},"body":{"injectables/LoginService.html":{}}}],["status:httpstatus.unauthorized",{"_index":303,"title":{},"body":{"injectables/LoginService.html":{},"controllers/TokenController.html":{}}}],["stay",{"_index":637,"title":{},"body":{"index.html":{}}}],["string",{"_index":143,"title":{},"body":{"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"controllers/TokenController.html":{},"injectables/UserService.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["support",{"_index":628,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":648,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":102,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":255,"title":{},"body":{"classes/LoginModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":617,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":620,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":619,"title":{},"body":{"index.html":{}}}],["tests",{"_index":616,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":626,"title":{},"body":{"index.html":{}}}],["this._errorlogger",{"_index":176,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._errorlogger.log('error',message",{"_index":199,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._geradoruuid.uuidv4",{"_index":432,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["this._infologger",{"_index":170,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._infologger.log('info',message",{"_index":197,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._logger.infolog(`new",{"_index":517,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._logger.infolog(`user",{"_index":519,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._logger.infolog(result",{"_index":523,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._loggercreate('error','user",{"_index":177,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._loggercreate('info','user",{"_index":171,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._loggercreate('warn','user",{"_index":174,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._login.create(login",{"_index":309,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["this._login.destroy({where",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["this._login.findone",{"_index":284,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._loginservice.getlogin(email,password",{"_index":221,"title":{},"body":{"controllers/LoginController.html":{}}}],["this._tokenservice.signtoken({userid:login.userid",{"_index":308,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._tokenservice.signtoken({userid:newuser.id",{"_index":454,"title":{},"body":{"injectables/UserService.html":{}}}],["this._tokenservice.signtoken({userid:user.id",{"_index":415,"title":{},"body":{"injectables/UserService.html":{}}}],["this._tokenservice.verifytoken(token",{"_index":323,"title":{},"body":{"controllers/TokenController.html":{}}}],["this._type.findall",{"_index":474,"title":{},"body":{"injectables/UserService.html":{}}}],["this._type.findbypk(user.typeid",{"_index":414,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.create(user",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.destroy",{"_index":467,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.findall",{"_index":411,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.findbypk(id",{"_index":413,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.findone",{"_index":434,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.update(user",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["this._usermodel.create(type",{"_index":516,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._usermodel.findall",{"_index":513,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._usermodel.findbypk(id",{"_index":514,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._usermodel.update(user",{"_index":518,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this._userservice.get(verify.userid",{"_index":325,"title":{},"body":{"controllers/TokenController.html":{}}}],["this._usertypesservice.getall",{"_index":64,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this._usertypesservice.newusertype(element",{"_index":68,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this._warnlogger",{"_index":173,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this._warnlogger.log('warn',message",{"_index":198,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["this.get(id",{"_index":520,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["this.getall",{"_index":473,"title":{},"body":{"injectables/UserService.html":{}}}],["this.init",{"_index":61,"title":{},"body":{"injectables/ConfigInit.html":{}}}],["this.userservice.deleteuser(param",{"_index":389,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(param.id",{"_index":500,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["this.userservice.get(param",{"_index":382,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.get(param.id",{"_index":495,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["this.userservice.getall",{"_index":380,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["this.userservice.newuser(user",{"_index":385,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.newusertype(user",{"_index":497,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["this.userservice.updateuser(user",{"_index":387,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserTypeController.html":{}}}],["this.userservice.userandtype",{"_index":379,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":295,"title":{},"body":{"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":167,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{},"interfaces/file.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":307,"title":{},"body":{"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["token.service",{"_index":279,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["tokencontroller",{"_index":310,"title":{"controllers/TokenController.html":{}},"body":{"controllers/TokenController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["tokenservice",{"_index":265,"title":{"injectables/TokenService.html":{}},"body":{"injectables/LoginService.html":{},"controllers/TokenController.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":638,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":180,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transport.push(new",{"_index":187,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transports",{"_index":196,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transports.file",{"_index":182,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["transports.file({filename:file.filename",{"_index":188,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["true",{"_index":101,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":644,"title":{},"body":{"index.html":{}}}],["type",{"_index":48,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/TokenController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"coverage.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{},"miscellaneous/variables.html":{}}}],["type.description",{"_index":429,"title":{},"body":{"injectables/UserService.html":{}}}],["type.id",{"_index":515,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["typeid",{"_index":658,"title":{},"body":{"classes/userModel.html":{}}}],["typeof",{"_index":77,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["types",{"_index":62,"title":{},"body":{"injectables/ConfigInit.html":{},"injectables/UserService.html":{}}}],["types/bcrypt",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["types/jsonwebtoken",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":256,"title":{},"body":{"classes/LoginModel.html":{},"dependencies.html":{},"index.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["undefined",{"_index":230,"title":{},"body":{"classes/LoginModel.html":{},"injectables/LoginService.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["unit",{"_index":615,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":360,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["updateuser(@body",{"_index":386,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(user",{"_index":368,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["updateusertype",{"_index":481,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["updateusertype(@body",{"_index":498,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["updateusertype(user",{"_index":488,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["used",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["user",{"_index":194,"title":{},"body":{"injectables/LoggerService.html":{},"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"interfaces/file.html":{},"interfaces/login.html":{}}}],["user(@param('id",{"_index":381,"title":{},"body":{"controllers/UserController.html":{}}}],["user(param",{"_index":371,"title":{},"body":{"controllers/UserController.html":{}}}],["user.createdat",{"_index":418,"title":{},"body":{"injectables/UserService.html":{}}}],["user.destroy",{"_index":522,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["user.email",{"_index":452,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":447,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["user.model",{"_index":257,"title":{},"body":{"classes/LoginModel.html":{},"interfaces/login.html":{}}}],["user.password",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["user.updatedat",{"_index":420,"title":{},"body":{"injectables/UserService.html":{}}}],["user?.destroy",{"_index":521,"title":{},"body":{"injectables/UserTypeService.html":{}}}],["user?.id",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["user_type",{"_index":426,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{},"classes/userModel.html":{}}}],["user_types",{"_index":477,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["userandtype",{"_index":392,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":355,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userid",{"_index":228,"title":{},"body":{"classes/LoginModel.html":{},"injectables/UserService.html":{},"interfaces/login.html":{}}}],["userid:id",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["userid:newuser.id",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["userid:user.id",{"_index":416,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodel",{"_index":238,"title":{"classes/userModel.html":{}},"body":{"classes/LoginModel.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"interfaces/login.html":{},"classes/userModel.html":{}}}],["username",{"_index":93,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":472,"title":{},"body":{"injectables/UserService.html":{}}}],["users/users.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":317,"title":{"injectables/UserService.html":{}},"body":{"controllers/TokenController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":13,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usertype",{"_index":482,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["usertype(@param",{"_index":494,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["usertype(param",{"_index":490,"title":{},"body":{"controllers/UserTypeController.html":{}}}],["usertype.model",{"_index":675,"title":{},"body":{"classes/userModel.html":{}}}],["usertypecontroller",{"_index":475,"title":{"controllers/UserTypeController.html":{}},"body":{"controllers/UserTypeController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usertypemodel",{"_index":277,"title":{"classes/userTypeModel.html":{}},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["usertypeservice",{"_index":43,"title":{"injectables/UserTypeService.html":{}},"body":{"injectables/ConfigInit.html":{},"controllers/UserTypeController.html":{},"injectables/UserTypeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":431,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserTypeService.html":{}}}],["uuid's",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["uuid4",{"_index":113,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["uuidexists",{"_index":440,"title":{},"body":{"injectables/UserService.html":{}}}],["uuidv4",{"_index":107,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["v",{"_index":126,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["v.tostring(16",{"_index":130,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["validator",{"_index":247,"title":{},"body":{"classes/LoginModel.html":{},"dependencies.html":{},"interfaces/login.html":{},"classes/userModel.html":{},"classes/userTypeModel.html":{}}}],["value",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":122,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["variable",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":687,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":322,"title":{},"body":{"controllers/TokenController.html":{}}}],["verify(token",{"_index":351,"title":{},"body":{"injectables/TokenService.html":{}}}],["verifytoken",{"_index":333,"title":{},"body":{"injectables/TokenService.html":{}}}],["verifytoken(token",{"_index":340,"title":{},"body":{"injectables/TokenService.html":{}}}],["void",{"_index":151,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/TokenService.html":{}}}],["warnlog",{"_index":140,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warnlog(message",{"_index":154,"title":{},"body":{"injectables/LoggerService.html":{},"interfaces/file.html":{}}}],["watch",{"_index":610,"title":{},"body":{"index.html":{}}}],["website",{"_index":642,"title":{},"body":{"index.html":{}}}],["while(uuidexists",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["winston",{"_index":161,"title":{},"body":{"injectables/LoggerService.html":{},"dependencies.html":{},"interfaces/file.html":{}}}],["wrong",{"_index":305,"title":{},"body":{"injectables/LoginService.html":{}}}],["x",{"_index":127,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xxxx",{"_index":115,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xxxxxxxx",{"_index":114,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xxxxxxxxxxxx'.replace",{"_index":118,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["xy]/g",{"_index":119,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["yes",{"_index":147,"title":{},"body":{"injectables/LoggerService.html":{}}}],["you'd",{"_index":631,"title":{},"body":{"index.html":{}}}],["yxxx",{"_index":117,"title":{},"body":{"injectables/GeradorUuidService.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CoreModule } from './@core/core.module';\nimport { UsersModule } from './users/users.module';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  imports: [CoreModule.forRoot(), UsersModule],\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class AppModule {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigInit.html":{"url":"injectables/ConfigInit.html","title":"injectable - ConfigInit","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigInit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userTypesService: UserTypeService)\n                    \n                \n                        \n                            \n                                Defined in src/config/config.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userTypesService\n                                                  \n                                                        \n                                                                        UserTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/config/config.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserTypeService } from 'src/users/services/userType.service'\n\n\nconst INIT_TYPES =[\n    {description:'Admin',active:1},\n    {description:'User',active:1},\n    {description:'bloger',active:0},\n]\n@Injectable()\nexport class ConfigInit{\n\n    constructor(private _userTypesService:UserTypeService){\n        this.init()\n    }\n    async init(){\n        let types = await this._userTypesService.getAll()\n        if(types.length == 0){\n            INIT_TYPES.forEach(element => {\n                this._userTypesService.newUserType(element)\n            });\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nCoreModule\n\nCoreModule\n\nLoggerService  -->\n\nCoreModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCoreModule -->\n\nLoggerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/@core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/@core/core.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { module: typeof CoreModule; imports: {}; provider: {}; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Provider } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { LoggerService } from './services/logger.service';\n\nconst PROVIDER:Provider[] = [\n    LoggerService,\n]\n\nconst IMPORTS =[\n    ConfigModule.forRoot(),\n    SequelizeModule.forRoot({\n        dialect: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: process.env.USUARIO_BANCO_DADOS,\n        password:\n          process.env.SENHA_BANCO_DADOS == 'root'\n            ? ''\n            : process.env.SENHA_BANCO_DADOS,\n        database: 'maxxidata',\n        autoLoadModels: true,\n        synchronize: true,\n      })\n]\n@Module({\n    imports: [],\n    controllers: [],\n    providers: [LoggerService],\n    exports:[LoggerService],\n})\nexport class CoreModule {\n    static forRoot(){\n        return {\n          module: CoreModule,\n          imports: [\n            ...IMPORTS,\n            ],\n            provider:[\n                ...PROVIDER\n            ]\n        };\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeradorUuidService.html":{"url":"injectables/GeradorUuidService.html","title":"injectable - GeradorUuidService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeradorUuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/geradoruuid.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/users/services/geradoruuid.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uuidv4\n                        \n                        \n                    \n                \n            \n            \n                \nuuidv4()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/geradoruuid.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GeradorUuidService {\n  constructor() {}\n\n  //create ID's with pattern UUID4\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorLogger\n                            \n                            \n                                    Private\n                                _infoLogger\n                            \n                            \n                                    Private\n                                _warnLogger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loggerCreate\n                            \n                            \n                                errorLog\n                            \n                            \n                                infoLog\n                            \n                            \n                                warnLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/@core/services/logger.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _loggerCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _loggerCreate(level: string, service: string, file?: file)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    service\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                file\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorLog\n                        \n                        \n                    \n                \n            \n            \n                \nerrorLog(message)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            infoLog\n                        \n                        \n                    \n                \n            \n            \n                \ninfoLog(message)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warnLog\n                        \n                        \n                    \n                \n            \n            \n                \nwarnLog(message)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/services/logger.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errorLogger\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/@core/services/logger.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoLogger\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/@core/services/logger.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _warnLogger\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/@core/services/logger.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { combineLatest } from 'rxjs';\nimport {createLogger,format,transports} from 'winston'\n\nexport interface file{\n    filename,\n    level\n}\nconst myFormat = format.printf(({ level, message, label, timestamp }) => {\n    return `${timestamp} [${label}] ${level}: ${message}`;\n  });\nconst timestamp = format.timestamp\nconst label = format.label\n\n@Injectable()\nexport class LoggerService {\n    private _infoLogger\n    private _warnLogger\n    private _errorLogger\n\n    constructor(){\n        this._infoLogger = this._loggerCreate('info','user-service',{filename:'logs/info.log',level:'info'})\n        this._warnLogger = this._loggerCreate('warn','user-service',{filename:'logs/warn.log',level:'warn'})\n        this._errorLogger = this._loggerCreate('error','user-service')\n    }\n    private _loggerCreate(level:string,service:string, file?:file){\n\n        let transport = [\n            new transports.File({ filename: 'logs/error.log', level: 'error' }),\n            new transports.File({ filename: 'logs/combined.log' }),\n        ]\n        if(file)\n        transport.push(new transports.File({filename:file.filename, level:file.level}))\n        return createLogger(\n            {\n                level: level,\n                format: format.combine(\n                    label({ label: 'app-user' }),\n                    timestamp(),\n                    myFormat\n                ), \n                defaultMeta: { service: service },\n                transports: transport,\n            }\n        );\n    }\n    infoLog(message){\n        this._infoLogger.log('info',message)\n    }\n    warnLog(message){\n        this._warnLogger.log('warn',message)\n    }\n    errorLog(message){\n        this._errorLogger.log('error',message)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controlles/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':email/:password')\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/login.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpException, HttpStatus, Param } from '@nestjs/common';\nimport { LoginService } from '../services/login.service';\n\n@Controller('auth')\nexport class LoginController {\n    constructor(private _loginService:LoginService){}\n\n    @Get(':email/:password')\n    async login(@Param('email') email:string,@Param('password') password:string){\n        return await this._loginService.getLogin(email,password)\n    }\n    \n}   \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginModel.html":{"url":"classes/LoginModel.html","title":"class - LoginModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/login.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         userModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/login.model.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport { Model } from 'sequelize';\nimport {\n    AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { userModel } from './user.model';\n\nexport interface login{\n  email,\n  password\n}\n\n@Table\nexport class LoginModel extends Model {\n    @PrimaryKey  \n    @Column({\n      type: DataType.UUID,\n      allowNull: false,\n    })\n    id\n\n  @IsNotEmpty()\n  @IsEmail()\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  password: string;\n\n  @BelongsTo(() => userModel)\n  user?: userModel;\n\n  @IsNotEmpty()\n  @ForeignKey(() => userModel)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getLogin\n                            \n                            \n                                    Async\n                                newLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_tokenService: TokenService, _login)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/login.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogin(email, password)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/login.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newLogin(login)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { LoginModel } from '../models/login.model';\nimport { userModel } from '../models/user.model';\nimport { userTypeModel } from '../models/userType.model';\nimport { TokenService } from './token.service';\nimport {hash,compare} from 'bcrypt'\n\n@Injectable()\nexport class LoginService {\n  constructor(  private _tokenService:TokenService,\n                @InjectModel(LoginModel) private _login: typeof LoginModel\n              ) {}\n\n  async getLogin( email, password ): Promise {\n\n    let login = await this._login.findOne({\n                  attributes:['userId','createdAt','updatedAt','password'],\n                  where: { \"email\":email},\n                  include:[{\n                    model:userModel,\n                    as:'user',\n                    attributes:['nickName','name','email','phone','active'],\n                    include:[{\n                        model:userTypeModel,\n                        as:'user_type',\n                        attributes:['id','description','active']\n                    }]\n                  }]\n                 })\n    if(!(login?.userId)){\n      throw new HttpException({\n        status:HttpStatus.NOT_FOUND,\n        error:'Have no user with this email!'\n      },HttpStatus.NOT_FOUND);\n    }\n    let res = await compare(password,login.password)\n    login.password = undefined\n\n    if(!res){\n      throw new HttpException({\n        status:HttpStatus.UNAUTHORIZED,\n        error:'Password is wrong!'\n      },HttpStatus.UNAUTHORIZED);\n    }\n\n    let token = this._tokenService.signToken({userId:login.userId})\n    return {login, token}\n  }\n\n  async newLogin(login) {\n    return await this._login.create(login);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TokenController.html":{"url":"controllers/TokenController.html","title":"controller - TokenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TokenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controlles/token.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                token\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkToken(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':token')\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/token.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpException, HttpStatus, Param } from '@nestjs/common';\nimport { TokenService } from '../services/token.service';\nimport { UserService } from '../services/user.service';\n\n@Controller('token')\nexport class TokenController {\n\n    constructor(private _userService:UserService,private _tokenService:TokenService){}\n    @Get(':token')\n    async checkToken(@Param('token')token:string){\n        let verify =  await this._tokenService.verifyToken(token)\n        if(\"userId\" in verify){\n            let r = await this._userService.get(verify.userId)\n            return r\n        }\n        console.log(verify)\n        throw new HttpException({\n            status:HttpStatus.UNAUTHORIZED,\n            error:'User need to login again!'\n        },HttpStatus.UNAUTHORIZED);\n        \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeToken\n                            \n                            \n                                signToken\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/users/services/token.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/token.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         login | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signToken\n                        \n                        \n                    \n                \n            \n            \n                \nsignToken(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/token.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/token.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {sign, decode,verify,} from 'jsonwebtoken'\nimport { login } from '../models/login.model';\nimport * as fs from 'fs'\nimport { of } from 'rxjs';\n\nconst PRIVATE_KEY = fs.readFileSync('src/config/keys.key').toString()\n@Injectable()\nexport class TokenService {\n\n    constructor(){\n        \n    }\n\n    signToken(payload){\n        \n        if(payload.dataValues){\n            return sign(payload.dataValues,PRIVATE_KEY,{expiresIn:'1H'})\n        }else{\n            return sign(payload,PRIVATE_KEY,{expiresIn:'1H'})\n        }\n    }\n\n    async verifyToken(token){\n        let result = await((() :Promise => {\n            let r\n            verify(token, PRIVATE_KEY, (err, res) => {\n                if (err) {\n                    r = err\n                }else{\n                    r = of(this.decodeToken(token)).toPromise();\n                }\n            })\n            return r\n        }))()\n        return result\n    }\n    decodeToken(token):login | void{\n        return verify(token, PRIVATE_KEY, (err, result)=>{\n            if (err){\n                throw err\n            }\n            return result\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controlles/usuarios.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                deleteUser\n                            \n                            \n                                newUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allUsers\n                        \n                        \n                    \n                \n            \n            \n                \nallUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usuarios.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usuarios.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newUser\n                        \n                        \n                    \n                \n            \n            \n                \nnewUser(user: userModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usuarios.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                userModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(user: userModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usuarios.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                userModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usuarios.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { userModel } from '../models/user.model';\nimport { userTypeModel } from '../models/userType.model';\nimport { UserService as UserService } from '../services/user.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  // @Get('types')\n  // allUsersAndTypes(): Promise {\n  //   return this.userService.userAndType();\n  // }\n  @Get()\n  allUsers(): Promise {\n    return this.userService.getAll();\n  }\n  @Get(':id')\n  user(@Param('id') param): Promise {\n    return this.userService.get(param);\n  }\n  @Post()\n  newUser(@Body() user: userModel) {\n    console.log(user);\n    return this.userService.newUser(user);\n  }\n  @Put()\n  updateUser(@Body() user: userModel): Promise {\n    return this.userService.updateUser(user);\n  }\n  @Delete(':id')\n  deleteUser(@Param('id') param) {\n    return this.userService.deleteUser(param);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                newUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                userAndType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_tokenService: TokenService, _geradorUUID: GeradorUuidService, _type, _login, _user)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _geradorUUID\n                                                  \n                                                        \n                                                                        GeradorUuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _type\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _user\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newUser(user: userModel)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                userModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            userAndType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userAndType()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\n// import {Op} from 'sequelize'\nimport { LoginModel } from '../models/login.model';\nimport { userModel } from '../models/user.model';\nimport { userTypeModel } from '../models/userType.model';\nimport { GeradorUuidService } from './geradoruuid.service';\nimport { TokenService } from './token.service';\nimport {hash} from 'bcrypt'\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private _tokenService:TokenService,\n    private _geradorUUID:GeradorUuidService,\n    @InjectModel(userTypeModel) private _type: typeof userTypeModel,\n    @InjectModel(LoginModel) private _login: typeof LoginModel,\n    @InjectModel(userModel) private _user: typeof userModel,\n  ) {}\n\n  async getAll(): Promise {\n    return await this._user.findAll();\n  }\n\n  async get(id:string): Promise {\n    let user = await this._user.findByPk(id);\n    let type = await this._type.findByPk(user.typeId,{\n      attributes:['id','description','active']\n    })\n    let token = this._tokenService.signToken({userId:user.id})\n    let res = {\n      login:{       \n        userId:user.id,\n        createdAt: user.createdAt,\n        updatedAt: user.updatedAt,\n        user:{\n            nickName:user.nickName,\n            name:user.name,\n            email:user.email,\n            phone:user.phone,\n            active:user.active,\n            user_type:{\n                id:type.id,\n                description: type.description,\n                active:type.active\n            }\n          }\n        },\n        token\n      }\n      return res\n      \n  }\n\n  async newUser(user: userModel): Promise {\n    let uuid = this._geradorUUID.uuidv4()\n\n    let exists = await this._user.findOne({\n        where:{\n            email:user.email\n        }\n    })\n    if(exists){\n        throw new HttpException({\n            status:HttpStatus.CONFLICT,\n            error:'User has already been registered'\n        },HttpStatus.CONFLICT);\n    }\n\n    let uuidExists = await this._user.findOne({\n        where:{\n            id:uuid\n        }\n    })\n    //MAKE BETTER, create new table with all uuid's used\n    while(uuidExists){\n        uuid = this._geradorUUID.uuidv4()\n        uuidExists = await this._user.findOne({\n            where:{\n                id:uuid\n            }\n        })\n    }\n\n    user.id = uuid\n\n    user.password = await hash(user.password, 10)\n\n    let newUser = await this._user.create(user);\n    let login = {\n      id:uuid,\n      email: user.email,\n      password: user.password,\n      userId: newUser.id,\n    };\n\n    let type = await this._type.findByPk(user.typeId,{\n        attributes:['id','description','active']\n    })\n\n    await this._login.create(login)\n\n    let token =  this._tokenService.signToken({userId:newUser.id})\n    return {\n      login:{       \n        userId:newUser.id,\n        createdAt: newUser.createdAt,\n        updatedAt: newUser.updatedAt,\n        user:{\n            nickName:newUser.nickName,\n            name:newUser.name,\n            email:newUser.email,\n            phone:newUser.phone,\n            active:newUser.active,\n            user_type:{\n                id:type.id,\n                description: type.description,\n                active:type.active\n            }\n          }\n        },\n      token\n    }\n  }\n\n  async updateUser(user): Promise {\n    console.log(user)\n    return this._user.update(user, {\n      where: {\n        id: user.id,\n      },\n    });\n  }\n\n  async deleteUser(id) {\n    const user = await this._user.findByPk(id)\n    console.log(user)\n    return user?.id? (async () => {\n          await this._login.destroy({where:{\n            userId:id \n          }})\n          await this._user.destroy({\n            where:{\n              id:id\n            }\n          })\n          return { message: `Deleted user id: ${user.id}`, cod: 410 };\n        })()\n      : `Not user with id '${id}'`;\n  }\n\n  //\n  async userAndType(): Promise {\n    const users: userModel[] = await this.getAll();\n    const types: userTypeModel[] = await this._type.findAll()\n    return { users, types };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserTypeController.html":{"url":"controllers/UserTypeController.html","title":"controller - UserTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controlles/usertype.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user_types\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allUserTypes\n                            \n                            \n                                deleteUserType\n                            \n                            \n                                newUserType\n                            \n                            \n                                updateUserType\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allUserTypes\n                        \n                        \n                    \n                \n            \n            \n                \nallUserTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usertype.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUserType\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUserType(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usertype.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newUserType\n                        \n                        \n                    \n                \n            \n            \n                \nnewUserType(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usertype.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserType\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserType(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usertype.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userType\n                        \n                        \n                    \n                \n            \n            \n                \nuserType(param)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/controlles/usertype.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { userTypeModel } from '../models/userType.model';\nimport { UserTypeService } from '../services/userType.service';\n\n@Controller('user_types')\nexport class UserTypeController {\n  constructor(private userService: UserTypeService) {}\n  @Get()\n  allUserTypes(): Promise {\n    return this.userService.getAll();\n  }\n  @Get(':id')\n  userType(@Param() param): Promise {\n    return this.userService.get(param.id);\n  }\n  @Post()\n  newUserType(@Body() user) {\n    return this.userService.newUserType(user);\n  }\n  @Put()\n  updateUserType(@Body() user): Promise {\n    return this.userService.updateUser(user);\n  }\n  @Delete(':id')\n  deleteUserType(@Param() param) {\n    return this.userService.deleteUser(param.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserTypeService.html":{"url":"injectables/UserTypeService.html","title":"injectable - UserTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/userType.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                newUserType\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LoggerService, _geradorUUID: GeradorUuidService, _userModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/userType.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _geradorUUID\n                                                  \n                                                        \n                                                                        GeradorUuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            newUserType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newUserType(type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/userType.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { LoggerService } from 'src/@core/services/logger.service';\nimport { userTypeModel } from '../models/userType.model';\nimport { GeradorUuidService } from './geradoruuid.service';\n\n\n@Injectable()\nexport class UserTypeService {\n  constructor(\n    private _logger: LoggerService,\n    private _geradorUUID:GeradorUuidService,\n    @InjectModel(userTypeModel)\n    private _userModel: typeof userTypeModel,\n  ) {}\n\n  async getAll(): Promise {\n    return await this._userModel.findAll();\n  }\n  async get(id): Promise {\n    return await this._userModel.findByPk(id);\n  }\n  async newUserType(type) {\n    let uuid = this._geradorUUID.uuidv4()\n    type.id = uuid\n    let user_type = await this._userModel.create(type);\n    this._logger.infoLog(`New user type id ${type.id}`)\n    return user_type\n  }\n  async updateUser(user): Promise {\n    let result = this._userModel.update(user, {\n      where: {\n        id: user.id,\n      },\n    });\n    this._logger.infoLog(`User type id ${user.id} was deleted!`)\n    return result\n  }\n  async deleteUser(id) {\n    const user: userTypeModel = await this.get(id);\n    let result = user?.destroy()\n      ? (() => {\n          user.destroy();\n          return { message: `Deleted user type id: ${user.id}`, cod: 410 };\n        })()\n      : `Not user type with id '${id}'`;\n    this._logger.infoLog(result)\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCoreModule->UsersModule\n\n\n\n\n\nConfigInit\n\nConfigInit\n\nUsersModule -->\n\nConfigInit->UsersModule\n\n\n\n\n\nGeradorUuidService\n\nGeradorUuidService\n\nUsersModule -->\n\nGeradorUuidService->UsersModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nUsersModule -->\n\nLoginService->UsersModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nUsersModule -->\n\nTokenService->UsersModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\nUserTypeService\n\nUserTypeService\n\nUsersModule -->\n\nUserTypeService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigInit\n                        \n                        \n                            GeradorUuidService\n                        \n                        \n                            LoginService\n                        \n                        \n                            TokenService\n                        \n                        \n                            UserService\n                        \n                        \n                            UserTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserTypeController\n                        \n                        \n                            LoginController\n                        \n                        \n                            TokenController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UserController } from './controlles/usuarios.controller';\nimport { userTypeModel } from './models/userType.model';\nimport { userModel } from './models/user.model';\nimport { GeradorUuidService } from './services/geradoruuid.service';\nimport { UserTypeService } from './services/userType.service';\nimport { UserService } from './services/user.service';\nimport { UserTypeController } from './controlles/usertype.controller';\nimport { LoginModel } from './models/login.model';\nimport { LoginService } from './services/login.service';\nimport { LoginController } from './controlles/login.controller';\nimport { TokenService } from './services/token.service';\nimport { CoreModule } from 'src/@core/core.module';\nimport { TokenController } from './controlles/token.controller';\nimport { ConfigInit } from 'src/config/config';\n\n@Module({\n  imports: [CoreModule.forRoot(),SequelizeModule.forFeature([userTypeModel, userModel, LoginModel])],\n  controllers: [UserController, UserTypeController, LoginController,TokenController],\n  providers: [\n    UserService,\n    TokenService,\n    LoginService,\n    UserTypeService,\n    GeradorUuidService,\n    ConfigInit,\n    userTypeModel,\n    LoginModel,\n    userModel,\n    Logger\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/core.module.ts\n            \n            variable\n            IMPORTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/core.module.ts\n            \n            variable\n            PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            interface\n            file\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            variable\n            label\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            variable\n            myFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/services/logger.service.ts\n            \n            variable\n            timestamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config.ts\n            \n            injectable\n            ConfigInit\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config.ts\n            \n            variable\n            INIT_TYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/controlles/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/controlles/token.controller.ts\n            \n            controller\n            TokenController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/controlles/usertype.controller.ts\n            \n            controller\n            UserTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/controlles/usuarios.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/login.model.ts\n            \n            class\n            LoginModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/login.model.ts\n            \n            interface\n            login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/models/user.model.ts\n            \n            class\n            userModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/models/userType.model.ts\n            \n            class\n            userTypeModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/services/geradoruuid.service.ts\n            \n            injectable\n            GeradorUuidService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/services/token.service.ts\n            \n            injectable\n            TokenService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/services/token.service.ts\n            \n            variable\n            PRIVATE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/services/userType.service.ts\n            \n            injectable\n            UserTypeService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/sequelize : ^0.2.0\n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/jsonwebtoken : ^8.5.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            crypto-js : ^4.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mysql2 : ^2.2.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            sequelize : ^6.6.2\n        \n            sequelize-typescript : ^2.1.0\n        \n            winston : ^3.3.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/file.html":{"url":"interfaces/file.html","title":"interface - file","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  file\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { combineLatest } from 'rxjs';\nimport {createLogger,format,transports} from 'winston'\n\nexport interface file{\n    filename,\n    level\n}\nconst myFormat = format.printf(({ level, message, label, timestamp }) => {\n    return `${timestamp} [${label}] ${level}: ${message}`;\n  });\nconst timestamp = format.timestamp\nconst label = format.label\n\n@Injectable()\nexport class LoggerService {\n    private _infoLogger\n    private _warnLogger\n    private _errorLogger\n\n    constructor(){\n        this._infoLogger = this._loggerCreate('info','user-service',{filename:'logs/info.log',level:'info'})\n        this._warnLogger = this._loggerCreate('warn','user-service',{filename:'logs/warn.log',level:'warn'})\n        this._errorLogger = this._loggerCreate('error','user-service')\n    }\n    private _loggerCreate(level:string,service:string, file?:file){\n\n        let transport = [\n            new transports.File({ filename: 'logs/error.log', level: 'error' }),\n            new transports.File({ filename: 'logs/combined.log' }),\n        ]\n        if(file)\n        transport.push(new transports.File({filename:file.filename, level:file.level}))\n        return createLogger(\n            {\n                level: level,\n                format: format.combine(\n                    label({ label: 'app-user' }),\n                    timestamp(),\n                    myFormat\n                ), \n                defaultMeta: { service: service },\n                transports: transport,\n            }\n        );\n    }\n    infoLog(message){\n        this._infoLogger.log('info',message)\n    }\n    warnLog(message){\n        this._warnLogger.log('warn',message)\n    }\n    errorLog(message){\n        this._errorLogger.log('error',message)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/login.html":{"url":"interfaces/login.html","title":"interface - login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/login.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\nimport { Model } from 'sequelize';\nimport {\n    AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  ForeignKey,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { userModel } from './user.model';\n\nexport interface login{\n  email,\n  password\n}\n\n@Table\nexport class LoginModel extends Model {\n    @PrimaryKey  \n    @Column({\n      type: DataType.UUID,\n      allowNull: false,\n    })\n    id\n\n  @IsNotEmpty()\n  @IsEmail()\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  password: string;\n\n  @BelongsTo(() => userModel)\n  user?: userModel;\n\n  @IsNotEmpty()\n  @ForeignKey(() => userModel)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCoreModule->UsersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nCoreModule->LoggerService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCoreModule -->\n\nLoggerService->CoreModule\n\n\n\n\n\nConfigInit\n\nConfigInit\n\nUsersModule -->\n\nConfigInit->UsersModule\n\n\n\n\n\nGeradorUuidService\n\nGeradorUuidService\n\nUsersModule -->\n\nGeradorUuidService->UsersModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nUsersModule -->\n\nLoginService->UsersModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nUsersModule -->\n\nTokenService->UsersModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\nUserTypeService\n\nUserTypeService\n\nUsersModule -->\n\nUserTypeService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userModel.html":{"url":"classes/userModel.html","title":"class - userModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                nickName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                typeId\n                            \n                            \n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@MaxLength(255)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(20)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ForeignKey(undefined)@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         userTypeModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BelongsTo(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.model.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail, IsString, MaxLength } from 'class-validator';\nimport {\n  Table,\n  Model,\n  Column,\n  DataType,\n  HasOne,\n  ForeignKey,\n  BelongsToMany,\n  BelongsTo,\n  PrimaryKey,\n  AutoIncrement,\n} from 'sequelize-typescript';\nimport { userTypeModel } from './userType.model';\n\n@Table\nexport class userModel extends Model {\n\n  @PrimaryKey  \n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  id:string\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(60),\n    allowNull: false,\n  })\n  nickName: string;\n\n  @IsNotEmpty()\n  @MaxLength(255)\n  @Column({\n    type: DataType.STRING(),\n    allowNull: false,\n  })\n  name: string;\n\n  @MaxLength(20)\n  @Column({\n    type: DataType.STRING(20),\n    allowNull: false,\n  })\n  phone: string;\n\n  @IsEmail()\n  @Column({\n    type: DataType.STRING(100),\n    allowNull: false,\n  })\n  email: string;\n\n  \n  @IsNotEmpty()\n  @ForeignKey(() => userTypeModel)\n  @Column({\n    type: DataType.UUID,\n    allowNull: false,\n  })\n  typeId: string;\n  \n  @IsNotEmpty()\n  @Column({\n    type: DataType.BOOLEAN,\n    allowNull: false,\n  })\n  active: boolean;\n\n  @BelongsTo(() => userTypeModel)\n  user_type?: userTypeModel;\n  \n  password?:string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userTypeModel.html":{"url":"classes/userTypeModel.html","title":"class - userTypeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userTypeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/userType.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/userType.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/userType.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()@Column({type: undefined, allowNull: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/userType.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { Column, Table, Model, DataType, AutoIncrement, PrimaryKey } from 'sequelize-typescript';\n\n@Table\nexport class userTypeModel extends Model {\n\n    @PrimaryKey\n    @Column({\n      type: DataType.UUID,\n      allowNull: false,\n    })\n    id:string\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.STRING(255),\n    allowNull: false,\n  })\n  description: string;\n\n  @IsNotEmpty()\n  @Column({\n    type: DataType.BOOLEAN,\n    allowNull: false,\n  })\n  active: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IMPORTS   (src/.../core.module.ts)\n                        \n                        \n                            INIT_TYPES   (src/.../config.ts)\n                        \n                        \n                            label   (src/.../logger.service.ts)\n                        \n                        \n                            myFormat   (src/.../logger.service.ts)\n                        \n                        \n                            PRIVATE_KEY   (src/.../token.service.ts)\n                        \n                        \n                            PROVIDER   (src/.../core.module.ts)\n                        \n                        \n                            timestamp   (src/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/@core/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IMPORTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ConfigModule.forRoot(),\n    SequelizeModule.forRoot({\n        dialect: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: process.env.USUARIO_BANCO_DADOS,\n        password:\n          process.env.SENHA_BANCO_DADOS == 'root'\n            ? ''\n            : process.env.SENHA_BANCO_DADOS,\n        database: 'maxxidata',\n        autoLoadModels: true,\n        synchronize: true,\n      })\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Provider[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    LoggerService,\n]\n                        \n                    \n\n\n            \n        \n\n    src/config/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            INIT_TYPES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {description:'Admin',active:1},\n    {description:'User',active:1},\n    {description:'bloger',active:0},\n]\n                        \n                    \n\n\n            \n        \n\n    src/@core/services/logger.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : format.label\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : format.printf(({ level, message, label, timestamp }) => {\n    return `${timestamp} [${label}] ${level}: ${message}`;\n  })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : format.timestamp\n                        \n                    \n\n\n            \n        \n\n    src/users/services/token.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PRIVATE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fs.readFileSync('src/config/keys.key').toString()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
